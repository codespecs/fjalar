# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
ARCH_CORE_AM_CCASFLAGS = @ARCH_CORE_AM_CCASFLAGS@
ARCH_CORE_AM_CFLAGS = @ARCH_CORE_AM_CFLAGS@
ARCH_TOOL_AM_CFLAGS = @ARCH_TOOL_AM_CFLAGS@
AS = @AS@
ASFLAGS = @ASFLAGS@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CPP = @CPP@
CXX = @CXX@
DEFAULT_SUPP = @DEFAULT_SUPP@
DEPDIR = @DEPDIR@
GDB = @GDB@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KICKSTART_BASE = @KICKSTART_BASE@
LN_S = @LN_S@
MAINT = @MAINT@
PACKAGE = @PACKAGE@
PERL = @PERL@
PREFERRED_STACK_BOUNDARY = @PREFERRED_STACK_BOUNDARY@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
VEX_DIR = @VEX_DIR@
VG_ARCH = @VG_ARCH@
VG_ARCH_ALL = @VG_ARCH_ALL@
VG_OS = @VG_OS@
VG_OS_ALL = @VG_OS_ALL@
VG_PLATFORM = @VG_PLATFORM@
VG_PLATFORM_ALL = @VG_PLATFORM_ALL@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

valdir = $(libdir)/valgrind
inplacedir = $(top_builddir)/.in_place
add_includes = -I$(top_builddir)/coregrind -I$(top_srcdir)/coregrind \
		-I$(top_srcdir) \
		-I$(top_srcdir)/coregrind/$(VG_ARCH) \
		-I$(top_builddir)/coregrind/$(VG_ARCH) \
		-I$(top_srcdir)/coregrind/$(VG_OS) \
		-I$(top_srcdir)/coregrind/$(VG_PLATFORM) \
		-I$(top_builddir)/include -I$(top_srcdir)/include \
		-I$(top_srcdir)/include/$(VG_ARCH) \
		-I$(top_srcdir)/include/$(VG_OS) \
		-I$(top_srcdir)/include/$(VG_PLATFORM) \
		-I@VEX_DIR@/pub


AM_CPPFLAGS = $(add_includes) -DVG_LIBDIR="\"$(valdir)"\" -I$(srcdir)/demangle \
		-DKICKSTART_BASE=@KICKSTART_BASE@ \
		-DVG_PLATFORM="$(VG_PLATFORM)"

AM_CCASFLAGS = $(add_includes) @ARCH_CORE_AM_CCASFLAGS@ -Wa,-gstabs

SUBDIRS = \
	$(VG_ARCH)     $(VG_OS)     $(VG_PLATFORM)     \
	m_sigframe m_aspacemgr demangle .


DIST_SUBDIRS = \
	$(VG_ARCH_ALL) $(VG_OS_ALL) $(VG_PLATFORM_ALL) \
	m_sigframe m_aspacemgr demangle .

AM_CFLAGS = $(WERROR) -Wmissing-prototypes -Winline -Wall -Wshadow -O -g @ARCH_CORE_AM_CFLAGS@ -fno-omit-frame-pointer

bin_PROGRAMS = \
	valgrind


val_PROGRAMS = \
	stage2 \
	vg_inject.so


noinst_LIBRARIES = lib_replace_malloc.a

noinst_HEADERS = \
	core.h			\
	core_asm.h		\
	pub_core_errormgr.h	\
	pub_core_execontext.h	\
	pub_core_stacktrace.h	\
	pub_core_sigframe.h	\
	pub_core_debuglog.h	\
	pub_core_aspacemgr.h	\
	ume.h			\
	vg_symtab2.h		\
	vg_symtypes.h		\
	vg_toolint.h


EXTRA_DIST = \
	valgrind.vs \
	gen_toolint.pl toolfuncs.def README_MODULES.txt


BUILT_SOURCES = vg_toolint.c vg_toolint.h
CLEANFILES = vg_toolint.c vg_toolint.h

valgrind_SOURCES = \
	ume.c \
	\
	stage1.c \
	m_debuglog.c \
	${VG_ARCH}/jmp_with_stack.c 

valgrind_DEPENDENCIES = 
valgrind_LDFLAGS = -static -g
valgrind_LDADD = 

stage2_SOURCES = \
	m_errormgr.c \
	m_execontext.c \
	m_stacktrace.c \
	m_debuglog.c \
	ume.c \
	\
	vg_scheduler.c \
	vg_default.c \
	vg_demangle.c \
	vg_hashtable.c \
	vg_replace_malloc.c \
	vg_main.c \
	vg_malloc2.c \
	vg_messages.c \
	vg_mylibc.c \
	vg_needs.c \
	vg_dummy_profile.c \
	vg_signals.c \
	vg_symtab2.c \
	vg_threadmodel.c \
	vg_pthreadmodel.c \
	vg_redir.c \
	vg_dwarf.c \
	vg_stabs.c \
	vg_skiplist.c \
	vg_symtypes.c \
	vg_syscalls.c \
	vg_toolint.c \
	vg_translate.c \
	vg_transtab.c


stage2_extra = \
	demangle/libdemangle.a \
	m_sigframe/libsigframe.a \
	m_aspacemgr/libaspacemgr.a \
	${VG_PLATFORM}/libplatform.a \
	${VG_ARCH}/libarch.a \
	${VG_OS}/libos.a \
	@VEX_DIR@/libvex.a


@USE_PIE_TRUE@stage2_CFLAGS = $(AM_CFLAGS) -fpie
@USE_PIE_FALSE@stage2_CFLAGS = $(AM_CFLAGS)
@USE_PIE_TRUE@stage2_DEPENDENCIES = \
@USE_PIE_TRUE@	$(srcdir)/valgrind.vs \
@USE_PIE_TRUE@	$(stage2_extra)

@USE_PIE_FALSE@stage2_DEPENDENCIES = \
@USE_PIE_FALSE@	$(srcdir)/valgrind.vs ${VG_ARCH}/stage2.lds \
@USE_PIE_FALSE@	$(stage2_extra)

@USE_PIE_TRUE@stage2_LDFLAGS = -Wl,--export-dynamic -g \
@USE_PIE_TRUE@	-Wl,-version-script $(srcdir)/valgrind.vs \
@USE_PIE_TRUE@	-pie

@USE_PIE_FALSE@stage2_LDFLAGS = -Wl,--export-dynamic -g \
@USE_PIE_FALSE@	-Wl,-version-script $(srcdir)/valgrind.vs \
@USE_PIE_FALSE@	-Wl,-defsym,kickstart_base=@KICKSTART_BASE@ -Wl,-T,${VG_ARCH}/stage2.lds


stage2_LDADD = $(stage2_extra) -ldl

vg_inject_so_SOURCES = vg_intercept.c
vg_inject_so_CFLAGS = $(AM_CFLAGS) -fpic
vg_inject_so_LDADD = -ldl
vg_inject_so_LDFLAGS = \
	-shared \
	-Wl,--soname,vg_inject.so \
	-Wl,-z,initfirst


lib_replace_malloc_a_SOURCES = vg_replace_malloc.c
lib_replace_malloc_a_CFLAGS = $(AM_CFLAGS) -fpic -fno-omit-frame-pointer

MANUAL_DEPS = $(noinst_HEADERS) $(include_HEADERS)
subdir = coregrind
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

lib_replace_malloc_a_AR = $(AR) cru
lib_replace_malloc_a_LIBADD =
am_lib_replace_malloc_a_OBJECTS = \
	lib_replace_malloc_a-vg_replace_malloc.$(OBJEXT)
lib_replace_malloc_a_OBJECTS = $(am_lib_replace_malloc_a_OBJECTS)
bin_PROGRAMS = valgrind$(EXEEXT)
val_PROGRAMS = stage2$(EXEEXT) vg_inject.so$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(val_PROGRAMS)

am_stage2_OBJECTS = stage2-m_errormgr.$(OBJEXT) \
	stage2-m_execontext.$(OBJEXT) stage2-m_stacktrace.$(OBJEXT) \
	stage2-m_debuglog.$(OBJEXT) stage2-ume.$(OBJEXT) \
	stage2-vg_scheduler.$(OBJEXT) stage2-vg_default.$(OBJEXT) \
	stage2-vg_demangle.$(OBJEXT) stage2-vg_hashtable.$(OBJEXT) \
	stage2-vg_replace_malloc.$(OBJEXT) stage2-vg_main.$(OBJEXT) \
	stage2-vg_malloc2.$(OBJEXT) stage2-vg_messages.$(OBJEXT) \
	stage2-vg_mylibc.$(OBJEXT) stage2-vg_needs.$(OBJEXT) \
	stage2-vg_dummy_profile.$(OBJEXT) stage2-vg_signals.$(OBJEXT) \
	stage2-vg_symtab2.$(OBJEXT) stage2-vg_threadmodel.$(OBJEXT) \
	stage2-vg_pthreadmodel.$(OBJEXT) stage2-vg_redir.$(OBJEXT) \
	stage2-vg_dwarf.$(OBJEXT) stage2-vg_stabs.$(OBJEXT) \
	stage2-vg_skiplist.$(OBJEXT) stage2-vg_symtypes.$(OBJEXT) \
	stage2-vg_syscalls.$(OBJEXT) stage2-vg_toolint.$(OBJEXT) \
	stage2-vg_translate.$(OBJEXT) stage2-vg_transtab.$(OBJEXT)
stage2_OBJECTS = $(am_stage2_OBJECTS)
am_valgrind_OBJECTS = ume.$(OBJEXT) stage1.$(OBJEXT) \
	m_debuglog.$(OBJEXT) jmp_with_stack.$(OBJEXT)
valgrind_OBJECTS = $(am_valgrind_OBJECTS)
am_vg_inject_so_OBJECTS = vg_inject_so-vg_intercept.$(OBJEXT)
vg_inject_so_OBJECTS = $(am_vg_inject_so_OBJECTS)
vg_inject_so_DEPENDENCIES =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/jmp_with_stack.Po \
@AMDEP_TRUE@	./$(DEPDIR)/lib_replace_malloc_a-vg_replace_malloc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/m_debuglog.Po ./$(DEPDIR)/stage1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-m_debuglog.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-m_errormgr.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-m_execontext.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-m_stacktrace.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-ume.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_default.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_demangle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_dummy_profile.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_dwarf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_hashtable.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_main.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_malloc2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_messages.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_mylibc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_needs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_pthreadmodel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_redir.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_replace_malloc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_scheduler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_signals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_skiplist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_stabs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_symtab2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_symtypes.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_syscalls.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_threadmodel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_toolint.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_translate.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stage2-vg_transtab.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ume.Po \
@AMDEP_TRUE@	./$(DEPDIR)/vg_inject_so-vg_intercept.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(lib_replace_malloc_a_SOURCES) $(stage2_SOURCES) \
	$(valgrind_SOURCES) $(vg_inject_so_SOURCES)
HEADERS = $(noinst_HEADERS)


RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(lib_replace_malloc_a_SOURCES) $(stage2_SOURCES) $(valgrind_SOURCES) $(vg_inject_so_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.core-AM_CPPFLAGS.am $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  coregrind/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
lib_replace_malloc_a-vg_replace_malloc.$(OBJEXT): vg_replace_malloc.c
lib_replace_malloc.a: $(lib_replace_malloc_a_OBJECTS) $(lib_replace_malloc_a_DEPENDENCIES) 
	-rm -f lib_replace_malloc.a
	$(lib_replace_malloc_a_AR) lib_replace_malloc.a $(lib_replace_malloc_a_OBJECTS) $(lib_replace_malloc_a_LIBADD)
	$(RANLIB) lib_replace_malloc.a
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
valPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-valPROGRAMS: $(val_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(valdir)
	@list='$(val_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(valPROGRAMS_INSTALL) $$p $(DESTDIR)$(valdir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(valPROGRAMS_INSTALL) $$p $(DESTDIR)$(valdir)/$$f; \
	  else :; fi; \
	done

uninstall-valPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(val_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(valdir)/$$f"; \
	  rm -f $(DESTDIR)$(valdir)/$$f; \
	done

clean-valPROGRAMS:
	-test -z "$(val_PROGRAMS)" || rm -f $(val_PROGRAMS)
stage2-m_errormgr.$(OBJEXT): m_errormgr.c
stage2-m_execontext.$(OBJEXT): m_execontext.c
stage2-m_stacktrace.$(OBJEXT): m_stacktrace.c
stage2-m_debuglog.$(OBJEXT): m_debuglog.c
stage2-ume.$(OBJEXT): ume.c
stage2-vg_scheduler.$(OBJEXT): vg_scheduler.c
stage2-vg_default.$(OBJEXT): vg_default.c
stage2-vg_demangle.$(OBJEXT): vg_demangle.c
stage2-vg_hashtable.$(OBJEXT): vg_hashtable.c
stage2-vg_replace_malloc.$(OBJEXT): vg_replace_malloc.c
stage2-vg_main.$(OBJEXT): vg_main.c
stage2-vg_malloc2.$(OBJEXT): vg_malloc2.c
stage2-vg_messages.$(OBJEXT): vg_messages.c
stage2-vg_mylibc.$(OBJEXT): vg_mylibc.c
stage2-vg_needs.$(OBJEXT): vg_needs.c
stage2-vg_dummy_profile.$(OBJEXT): vg_dummy_profile.c
stage2-vg_signals.$(OBJEXT): vg_signals.c
stage2-vg_symtab2.$(OBJEXT): vg_symtab2.c
stage2-vg_threadmodel.$(OBJEXT): vg_threadmodel.c
stage2-vg_pthreadmodel.$(OBJEXT): vg_pthreadmodel.c
stage2-vg_redir.$(OBJEXT): vg_redir.c
stage2-vg_dwarf.$(OBJEXT): vg_dwarf.c
stage2-vg_stabs.$(OBJEXT): vg_stabs.c
stage2-vg_skiplist.$(OBJEXT): vg_skiplist.c
stage2-vg_symtypes.$(OBJEXT): vg_symtypes.c
stage2-vg_syscalls.$(OBJEXT): vg_syscalls.c
stage2-vg_toolint.$(OBJEXT): vg_toolint.c
stage2-vg_translate.$(OBJEXT): vg_translate.c
stage2-vg_transtab.$(OBJEXT): vg_transtab.c
stage2$(EXEEXT): $(stage2_OBJECTS) $(stage2_DEPENDENCIES) 
	@rm -f stage2$(EXEEXT)
	$(LINK) $(stage2_LDFLAGS) $(stage2_OBJECTS) $(stage2_LDADD) $(LIBS)
jmp_with_stack.$(OBJEXT): ${VG_ARCH}/jmp_with_stack.c
valgrind$(EXEEXT): $(valgrind_OBJECTS) $(valgrind_DEPENDENCIES) 
	@rm -f valgrind$(EXEEXT)
	$(LINK) $(valgrind_LDFLAGS) $(valgrind_OBJECTS) $(valgrind_LDADD) $(LIBS)
vg_inject_so-vg_intercept.$(OBJEXT): vg_intercept.c
vg_inject.so$(EXEEXT): $(vg_inject_so_OBJECTS) $(vg_inject_so_DEPENDENCIES) 
	@rm -f vg_inject.so$(EXEEXT)
	$(LINK) $(vg_inject_so_LDFLAGS) $(vg_inject_so_OBJECTS) $(vg_inject_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jmp_with_stack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lib_replace_malloc_a-vg_replace_malloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/m_debuglog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-m_debuglog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-m_errormgr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-m_execontext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-m_stacktrace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-ume.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_default.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_demangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_dummy_profile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_dwarf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_hashtable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_malloc2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_messages.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_mylibc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_needs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_pthreadmodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_redir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_replace_malloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_scheduler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_signals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_skiplist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_stabs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_symtab2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_symtypes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_syscalls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_threadmodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_toolint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_translate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stage2-vg_transtab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ume.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vg_inject_so-vg_intercept.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

lib_replace_malloc_a-vg_replace_malloc.o: vg_replace_malloc.c
@AMDEP_TRUE@	source='vg_replace_malloc.c' object='lib_replace_malloc_a-vg_replace_malloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/lib_replace_malloc_a-vg_replace_malloc.Po' tmpdepfile='$(DEPDIR)/lib_replace_malloc_a-vg_replace_malloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_replace_malloc_a_CFLAGS) $(CFLAGS) -c -o lib_replace_malloc_a-vg_replace_malloc.o `test -f 'vg_replace_malloc.c' || echo '$(srcdir)/'`vg_replace_malloc.c

lib_replace_malloc_a-vg_replace_malloc.obj: vg_replace_malloc.c
@AMDEP_TRUE@	source='vg_replace_malloc.c' object='lib_replace_malloc_a-vg_replace_malloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/lib_replace_malloc_a-vg_replace_malloc.Po' tmpdepfile='$(DEPDIR)/lib_replace_malloc_a-vg_replace_malloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_replace_malloc_a_CFLAGS) $(CFLAGS) -c -o lib_replace_malloc_a-vg_replace_malloc.obj `cygpath -w vg_replace_malloc.c`

stage2-m_errormgr.o: m_errormgr.c
@AMDEP_TRUE@	source='m_errormgr.c' object='stage2-m_errormgr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-m_errormgr.Po' tmpdepfile='$(DEPDIR)/stage2-m_errormgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-m_errormgr.o `test -f 'm_errormgr.c' || echo '$(srcdir)/'`m_errormgr.c

stage2-m_errormgr.obj: m_errormgr.c
@AMDEP_TRUE@	source='m_errormgr.c' object='stage2-m_errormgr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-m_errormgr.Po' tmpdepfile='$(DEPDIR)/stage2-m_errormgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-m_errormgr.obj `cygpath -w m_errormgr.c`

stage2-m_execontext.o: m_execontext.c
@AMDEP_TRUE@	source='m_execontext.c' object='stage2-m_execontext.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-m_execontext.Po' tmpdepfile='$(DEPDIR)/stage2-m_execontext.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-m_execontext.o `test -f 'm_execontext.c' || echo '$(srcdir)/'`m_execontext.c

stage2-m_execontext.obj: m_execontext.c
@AMDEP_TRUE@	source='m_execontext.c' object='stage2-m_execontext.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-m_execontext.Po' tmpdepfile='$(DEPDIR)/stage2-m_execontext.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-m_execontext.obj `cygpath -w m_execontext.c`

stage2-m_stacktrace.o: m_stacktrace.c
@AMDEP_TRUE@	source='m_stacktrace.c' object='stage2-m_stacktrace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-m_stacktrace.Po' tmpdepfile='$(DEPDIR)/stage2-m_stacktrace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-m_stacktrace.o `test -f 'm_stacktrace.c' || echo '$(srcdir)/'`m_stacktrace.c

stage2-m_stacktrace.obj: m_stacktrace.c
@AMDEP_TRUE@	source='m_stacktrace.c' object='stage2-m_stacktrace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-m_stacktrace.Po' tmpdepfile='$(DEPDIR)/stage2-m_stacktrace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-m_stacktrace.obj `cygpath -w m_stacktrace.c`

stage2-m_debuglog.o: m_debuglog.c
@AMDEP_TRUE@	source='m_debuglog.c' object='stage2-m_debuglog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-m_debuglog.Po' tmpdepfile='$(DEPDIR)/stage2-m_debuglog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-m_debuglog.o `test -f 'm_debuglog.c' || echo '$(srcdir)/'`m_debuglog.c

stage2-m_debuglog.obj: m_debuglog.c
@AMDEP_TRUE@	source='m_debuglog.c' object='stage2-m_debuglog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-m_debuglog.Po' tmpdepfile='$(DEPDIR)/stage2-m_debuglog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-m_debuglog.obj `cygpath -w m_debuglog.c`

stage2-ume.o: ume.c
@AMDEP_TRUE@	source='ume.c' object='stage2-ume.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-ume.Po' tmpdepfile='$(DEPDIR)/stage2-ume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-ume.o `test -f 'ume.c' || echo '$(srcdir)/'`ume.c

stage2-ume.obj: ume.c
@AMDEP_TRUE@	source='ume.c' object='stage2-ume.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-ume.Po' tmpdepfile='$(DEPDIR)/stage2-ume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-ume.obj `cygpath -w ume.c`

stage2-vg_scheduler.o: vg_scheduler.c
@AMDEP_TRUE@	source='vg_scheduler.c' object='stage2-vg_scheduler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_scheduler.Po' tmpdepfile='$(DEPDIR)/stage2-vg_scheduler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_scheduler.o `test -f 'vg_scheduler.c' || echo '$(srcdir)/'`vg_scheduler.c

stage2-vg_scheduler.obj: vg_scheduler.c
@AMDEP_TRUE@	source='vg_scheduler.c' object='stage2-vg_scheduler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_scheduler.Po' tmpdepfile='$(DEPDIR)/stage2-vg_scheduler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_scheduler.obj `cygpath -w vg_scheduler.c`

stage2-vg_default.o: vg_default.c
@AMDEP_TRUE@	source='vg_default.c' object='stage2-vg_default.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_default.Po' tmpdepfile='$(DEPDIR)/stage2-vg_default.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_default.o `test -f 'vg_default.c' || echo '$(srcdir)/'`vg_default.c

stage2-vg_default.obj: vg_default.c
@AMDEP_TRUE@	source='vg_default.c' object='stage2-vg_default.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_default.Po' tmpdepfile='$(DEPDIR)/stage2-vg_default.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_default.obj `cygpath -w vg_default.c`

stage2-vg_demangle.o: vg_demangle.c
@AMDEP_TRUE@	source='vg_demangle.c' object='stage2-vg_demangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_demangle.Po' tmpdepfile='$(DEPDIR)/stage2-vg_demangle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_demangle.o `test -f 'vg_demangle.c' || echo '$(srcdir)/'`vg_demangle.c

stage2-vg_demangle.obj: vg_demangle.c
@AMDEP_TRUE@	source='vg_demangle.c' object='stage2-vg_demangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_demangle.Po' tmpdepfile='$(DEPDIR)/stage2-vg_demangle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_demangle.obj `cygpath -w vg_demangle.c`

stage2-vg_hashtable.o: vg_hashtable.c
@AMDEP_TRUE@	source='vg_hashtable.c' object='stage2-vg_hashtable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_hashtable.Po' tmpdepfile='$(DEPDIR)/stage2-vg_hashtable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_hashtable.o `test -f 'vg_hashtable.c' || echo '$(srcdir)/'`vg_hashtable.c

stage2-vg_hashtable.obj: vg_hashtable.c
@AMDEP_TRUE@	source='vg_hashtable.c' object='stage2-vg_hashtable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_hashtable.Po' tmpdepfile='$(DEPDIR)/stage2-vg_hashtable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_hashtable.obj `cygpath -w vg_hashtable.c`

stage2-vg_replace_malloc.o: vg_replace_malloc.c
@AMDEP_TRUE@	source='vg_replace_malloc.c' object='stage2-vg_replace_malloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_replace_malloc.Po' tmpdepfile='$(DEPDIR)/stage2-vg_replace_malloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_replace_malloc.o `test -f 'vg_replace_malloc.c' || echo '$(srcdir)/'`vg_replace_malloc.c

stage2-vg_replace_malloc.obj: vg_replace_malloc.c
@AMDEP_TRUE@	source='vg_replace_malloc.c' object='stage2-vg_replace_malloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_replace_malloc.Po' tmpdepfile='$(DEPDIR)/stage2-vg_replace_malloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_replace_malloc.obj `cygpath -w vg_replace_malloc.c`

stage2-vg_main.o: vg_main.c
@AMDEP_TRUE@	source='vg_main.c' object='stage2-vg_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_main.Po' tmpdepfile='$(DEPDIR)/stage2-vg_main.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_main.o `test -f 'vg_main.c' || echo '$(srcdir)/'`vg_main.c

stage2-vg_main.obj: vg_main.c
@AMDEP_TRUE@	source='vg_main.c' object='stage2-vg_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_main.Po' tmpdepfile='$(DEPDIR)/stage2-vg_main.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_main.obj `cygpath -w vg_main.c`

stage2-vg_malloc2.o: vg_malloc2.c
@AMDEP_TRUE@	source='vg_malloc2.c' object='stage2-vg_malloc2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_malloc2.Po' tmpdepfile='$(DEPDIR)/stage2-vg_malloc2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_malloc2.o `test -f 'vg_malloc2.c' || echo '$(srcdir)/'`vg_malloc2.c

stage2-vg_malloc2.obj: vg_malloc2.c
@AMDEP_TRUE@	source='vg_malloc2.c' object='stage2-vg_malloc2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_malloc2.Po' tmpdepfile='$(DEPDIR)/stage2-vg_malloc2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_malloc2.obj `cygpath -w vg_malloc2.c`

stage2-vg_messages.o: vg_messages.c
@AMDEP_TRUE@	source='vg_messages.c' object='stage2-vg_messages.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_messages.Po' tmpdepfile='$(DEPDIR)/stage2-vg_messages.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_messages.o `test -f 'vg_messages.c' || echo '$(srcdir)/'`vg_messages.c

stage2-vg_messages.obj: vg_messages.c
@AMDEP_TRUE@	source='vg_messages.c' object='stage2-vg_messages.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_messages.Po' tmpdepfile='$(DEPDIR)/stage2-vg_messages.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_messages.obj `cygpath -w vg_messages.c`

stage2-vg_mylibc.o: vg_mylibc.c
@AMDEP_TRUE@	source='vg_mylibc.c' object='stage2-vg_mylibc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_mylibc.Po' tmpdepfile='$(DEPDIR)/stage2-vg_mylibc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_mylibc.o `test -f 'vg_mylibc.c' || echo '$(srcdir)/'`vg_mylibc.c

stage2-vg_mylibc.obj: vg_mylibc.c
@AMDEP_TRUE@	source='vg_mylibc.c' object='stage2-vg_mylibc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_mylibc.Po' tmpdepfile='$(DEPDIR)/stage2-vg_mylibc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_mylibc.obj `cygpath -w vg_mylibc.c`

stage2-vg_needs.o: vg_needs.c
@AMDEP_TRUE@	source='vg_needs.c' object='stage2-vg_needs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_needs.Po' tmpdepfile='$(DEPDIR)/stage2-vg_needs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_needs.o `test -f 'vg_needs.c' || echo '$(srcdir)/'`vg_needs.c

stage2-vg_needs.obj: vg_needs.c
@AMDEP_TRUE@	source='vg_needs.c' object='stage2-vg_needs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_needs.Po' tmpdepfile='$(DEPDIR)/stage2-vg_needs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_needs.obj `cygpath -w vg_needs.c`

stage2-vg_dummy_profile.o: vg_dummy_profile.c
@AMDEP_TRUE@	source='vg_dummy_profile.c' object='stage2-vg_dummy_profile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_dummy_profile.Po' tmpdepfile='$(DEPDIR)/stage2-vg_dummy_profile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_dummy_profile.o `test -f 'vg_dummy_profile.c' || echo '$(srcdir)/'`vg_dummy_profile.c

stage2-vg_dummy_profile.obj: vg_dummy_profile.c
@AMDEP_TRUE@	source='vg_dummy_profile.c' object='stage2-vg_dummy_profile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_dummy_profile.Po' tmpdepfile='$(DEPDIR)/stage2-vg_dummy_profile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_dummy_profile.obj `cygpath -w vg_dummy_profile.c`

stage2-vg_signals.o: vg_signals.c
@AMDEP_TRUE@	source='vg_signals.c' object='stage2-vg_signals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_signals.Po' tmpdepfile='$(DEPDIR)/stage2-vg_signals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_signals.o `test -f 'vg_signals.c' || echo '$(srcdir)/'`vg_signals.c

stage2-vg_signals.obj: vg_signals.c
@AMDEP_TRUE@	source='vg_signals.c' object='stage2-vg_signals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_signals.Po' tmpdepfile='$(DEPDIR)/stage2-vg_signals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_signals.obj `cygpath -w vg_signals.c`

stage2-vg_symtab2.o: vg_symtab2.c
@AMDEP_TRUE@	source='vg_symtab2.c' object='stage2-vg_symtab2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_symtab2.Po' tmpdepfile='$(DEPDIR)/stage2-vg_symtab2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_symtab2.o `test -f 'vg_symtab2.c' || echo '$(srcdir)/'`vg_symtab2.c

stage2-vg_symtab2.obj: vg_symtab2.c
@AMDEP_TRUE@	source='vg_symtab2.c' object='stage2-vg_symtab2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_symtab2.Po' tmpdepfile='$(DEPDIR)/stage2-vg_symtab2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_symtab2.obj `cygpath -w vg_symtab2.c`

stage2-vg_threadmodel.o: vg_threadmodel.c
@AMDEP_TRUE@	source='vg_threadmodel.c' object='stage2-vg_threadmodel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_threadmodel.Po' tmpdepfile='$(DEPDIR)/stage2-vg_threadmodel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_threadmodel.o `test -f 'vg_threadmodel.c' || echo '$(srcdir)/'`vg_threadmodel.c

stage2-vg_threadmodel.obj: vg_threadmodel.c
@AMDEP_TRUE@	source='vg_threadmodel.c' object='stage2-vg_threadmodel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_threadmodel.Po' tmpdepfile='$(DEPDIR)/stage2-vg_threadmodel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_threadmodel.obj `cygpath -w vg_threadmodel.c`

stage2-vg_pthreadmodel.o: vg_pthreadmodel.c
@AMDEP_TRUE@	source='vg_pthreadmodel.c' object='stage2-vg_pthreadmodel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_pthreadmodel.Po' tmpdepfile='$(DEPDIR)/stage2-vg_pthreadmodel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_pthreadmodel.o `test -f 'vg_pthreadmodel.c' || echo '$(srcdir)/'`vg_pthreadmodel.c

stage2-vg_pthreadmodel.obj: vg_pthreadmodel.c
@AMDEP_TRUE@	source='vg_pthreadmodel.c' object='stage2-vg_pthreadmodel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_pthreadmodel.Po' tmpdepfile='$(DEPDIR)/stage2-vg_pthreadmodel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_pthreadmodel.obj `cygpath -w vg_pthreadmodel.c`

stage2-vg_redir.o: vg_redir.c
@AMDEP_TRUE@	source='vg_redir.c' object='stage2-vg_redir.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_redir.Po' tmpdepfile='$(DEPDIR)/stage2-vg_redir.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_redir.o `test -f 'vg_redir.c' || echo '$(srcdir)/'`vg_redir.c

stage2-vg_redir.obj: vg_redir.c
@AMDEP_TRUE@	source='vg_redir.c' object='stage2-vg_redir.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_redir.Po' tmpdepfile='$(DEPDIR)/stage2-vg_redir.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_redir.obj `cygpath -w vg_redir.c`

stage2-vg_dwarf.o: vg_dwarf.c
@AMDEP_TRUE@	source='vg_dwarf.c' object='stage2-vg_dwarf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_dwarf.Po' tmpdepfile='$(DEPDIR)/stage2-vg_dwarf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_dwarf.o `test -f 'vg_dwarf.c' || echo '$(srcdir)/'`vg_dwarf.c

stage2-vg_dwarf.obj: vg_dwarf.c
@AMDEP_TRUE@	source='vg_dwarf.c' object='stage2-vg_dwarf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_dwarf.Po' tmpdepfile='$(DEPDIR)/stage2-vg_dwarf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_dwarf.obj `cygpath -w vg_dwarf.c`

stage2-vg_stabs.o: vg_stabs.c
@AMDEP_TRUE@	source='vg_stabs.c' object='stage2-vg_stabs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_stabs.Po' tmpdepfile='$(DEPDIR)/stage2-vg_stabs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_stabs.o `test -f 'vg_stabs.c' || echo '$(srcdir)/'`vg_stabs.c

stage2-vg_stabs.obj: vg_stabs.c
@AMDEP_TRUE@	source='vg_stabs.c' object='stage2-vg_stabs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_stabs.Po' tmpdepfile='$(DEPDIR)/stage2-vg_stabs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_stabs.obj `cygpath -w vg_stabs.c`

stage2-vg_skiplist.o: vg_skiplist.c
@AMDEP_TRUE@	source='vg_skiplist.c' object='stage2-vg_skiplist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_skiplist.Po' tmpdepfile='$(DEPDIR)/stage2-vg_skiplist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_skiplist.o `test -f 'vg_skiplist.c' || echo '$(srcdir)/'`vg_skiplist.c

stage2-vg_skiplist.obj: vg_skiplist.c
@AMDEP_TRUE@	source='vg_skiplist.c' object='stage2-vg_skiplist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_skiplist.Po' tmpdepfile='$(DEPDIR)/stage2-vg_skiplist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_skiplist.obj `cygpath -w vg_skiplist.c`

stage2-vg_symtypes.o: vg_symtypes.c
@AMDEP_TRUE@	source='vg_symtypes.c' object='stage2-vg_symtypes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_symtypes.Po' tmpdepfile='$(DEPDIR)/stage2-vg_symtypes.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_symtypes.o `test -f 'vg_symtypes.c' || echo '$(srcdir)/'`vg_symtypes.c

stage2-vg_symtypes.obj: vg_symtypes.c
@AMDEP_TRUE@	source='vg_symtypes.c' object='stage2-vg_symtypes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_symtypes.Po' tmpdepfile='$(DEPDIR)/stage2-vg_symtypes.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_symtypes.obj `cygpath -w vg_symtypes.c`

stage2-vg_syscalls.o: vg_syscalls.c
@AMDEP_TRUE@	source='vg_syscalls.c' object='stage2-vg_syscalls.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_syscalls.Po' tmpdepfile='$(DEPDIR)/stage2-vg_syscalls.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_syscalls.o `test -f 'vg_syscalls.c' || echo '$(srcdir)/'`vg_syscalls.c

stage2-vg_syscalls.obj: vg_syscalls.c
@AMDEP_TRUE@	source='vg_syscalls.c' object='stage2-vg_syscalls.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_syscalls.Po' tmpdepfile='$(DEPDIR)/stage2-vg_syscalls.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_syscalls.obj `cygpath -w vg_syscalls.c`

stage2-vg_toolint.o: vg_toolint.c
@AMDEP_TRUE@	source='vg_toolint.c' object='stage2-vg_toolint.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_toolint.Po' tmpdepfile='$(DEPDIR)/stage2-vg_toolint.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_toolint.o `test -f 'vg_toolint.c' || echo '$(srcdir)/'`vg_toolint.c

stage2-vg_toolint.obj: vg_toolint.c
@AMDEP_TRUE@	source='vg_toolint.c' object='stage2-vg_toolint.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_toolint.Po' tmpdepfile='$(DEPDIR)/stage2-vg_toolint.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_toolint.obj `cygpath -w vg_toolint.c`

stage2-vg_translate.o: vg_translate.c
@AMDEP_TRUE@	source='vg_translate.c' object='stage2-vg_translate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_translate.Po' tmpdepfile='$(DEPDIR)/stage2-vg_translate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_translate.o `test -f 'vg_translate.c' || echo '$(srcdir)/'`vg_translate.c

stage2-vg_translate.obj: vg_translate.c
@AMDEP_TRUE@	source='vg_translate.c' object='stage2-vg_translate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_translate.Po' tmpdepfile='$(DEPDIR)/stage2-vg_translate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_translate.obj `cygpath -w vg_translate.c`

stage2-vg_transtab.o: vg_transtab.c
@AMDEP_TRUE@	source='vg_transtab.c' object='stage2-vg_transtab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_transtab.Po' tmpdepfile='$(DEPDIR)/stage2-vg_transtab.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_transtab.o `test -f 'vg_transtab.c' || echo '$(srcdir)/'`vg_transtab.c

stage2-vg_transtab.obj: vg_transtab.c
@AMDEP_TRUE@	source='vg_transtab.c' object='stage2-vg_transtab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stage2-vg_transtab.Po' tmpdepfile='$(DEPDIR)/stage2-vg_transtab.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stage2_CFLAGS) $(CFLAGS) -c -o stage2-vg_transtab.obj `cygpath -w vg_transtab.c`

jmp_with_stack.o: ${VG_ARCH}/jmp_with_stack.c
@AMDEP_TRUE@	source='${VG_ARCH}/jmp_with_stack.c' object='jmp_with_stack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/jmp_with_stack.Po' tmpdepfile='$(DEPDIR)/jmp_with_stack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jmp_with_stack.o `test -f '${VG_ARCH}/jmp_with_stack.c' || echo '$(srcdir)/'`${VG_ARCH}/jmp_with_stack.c

jmp_with_stack.obj: ${VG_ARCH}/jmp_with_stack.c
@AMDEP_TRUE@	source='${VG_ARCH}/jmp_with_stack.c' object='jmp_with_stack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/jmp_with_stack.Po' tmpdepfile='$(DEPDIR)/jmp_with_stack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jmp_with_stack.obj `cygpath -w ${VG_ARCH}/jmp_with_stack.c`

vg_inject_so-vg_intercept.o: vg_intercept.c
@AMDEP_TRUE@	source='vg_intercept.c' object='vg_inject_so-vg_intercept.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/vg_inject_so-vg_intercept.Po' tmpdepfile='$(DEPDIR)/vg_inject_so-vg_intercept.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vg_inject_so_CFLAGS) $(CFLAGS) -c -o vg_inject_so-vg_intercept.o `test -f 'vg_intercept.c' || echo '$(srcdir)/'`vg_intercept.c

vg_inject_so-vg_intercept.obj: vg_intercept.c
@AMDEP_TRUE@	source='vg_intercept.c' object='vg_inject_so-vg_intercept.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/vg_inject_so-vg_intercept.Po' tmpdepfile='$(DEPDIR)/vg_inject_so-vg_intercept.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vg_inject_so_CFLAGS) $(CFLAGS) -c -o vg_inject_so-vg_intercept.obj `cygpath -w vg_intercept.c`
CCDEPMODE = @CCDEPMODE@
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(valdir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-valPROGRAMS mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-valPROGRAMS

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-valPROGRAMS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am all-local check check-am \
	clean clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-recursive clean-valPROGRAMS distclean distclean-compile \
	distclean-depend distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-binPROGRAMS \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive install-man \
	install-recursive install-strip install-valPROGRAMS \
	installcheck installcheck-am installdirs installdirs-am \
	installdirs-recursive maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-info-recursive uninstall-recursive \
	uninstall-valPROGRAMS


default.supp: $(SUPP_FILES)

vg_toolint.c: $(srcdir)/gen_toolint.pl $(srcdir)/toolfuncs.def ./Makefile
	rm -f $@
	$(PERL) $(srcdir)/gen_toolint.pl callwrap     < $(srcdir)/toolfuncs.def >  $@ || rm -f $@
	$(PERL) $(srcdir)/gen_toolint.pl missingfuncs < $(srcdir)/toolfuncs.def >> $@ || rm -f $@
	$(PERL) $(srcdir)/gen_toolint.pl initfunc     < $(srcdir)/toolfuncs.def >> $@ || rm -f $@
	$(PERL) $(srcdir)/gen_toolint.pl structdef    < $(srcdir)/toolfuncs.def >> $@ || rm -f $@

vg_toolint.h:  $(srcdir)/gen_toolint.pl $(srcdir)/toolfuncs.def ./Makefile
	rm -f $@
	$(PERL) $(srcdir)/gen_toolint.pl proto  < $(srcdir)/toolfuncs.def >  $@ || rm -f $@
	$(PERL) $(srcdir)/gen_toolint.pl struct < $(srcdir)/toolfuncs.def >> $@ || rm -f $@

all-local:
	mkdir -p $(inplacedir)
	for i in $(val_PROGRAMS); do \
		to=$(inplacedir)/$$i; \
		rm -f $$$to; \
		ln -sf ../$(subdir)/$$i $$to; \
	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
