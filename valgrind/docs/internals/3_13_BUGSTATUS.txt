
Created Mon 21 Nov 12:58:23 CET 2016.  All bugs after the release of
3.12.0 go in here.  Also, this contains bugs from 3_11_BUGSTATUS.txt
that didn't get fixed in 3.12.  These are marked "(carried over)".

=== Debuginfo reader ===================================================

(carried over)
353192  Debug info/data section not detected on AMD64
        [To do with rwx, combined code+data sections]

(carried over)
355197  Too strong assert in variable debug info code
        [Still relevant?]

(carried over)
365750  Valgrind fails on binary with .text section not in default place
        [Horrible hack to do with relocating .text section]

(carried over)
372182  Support more languages/demangling styles than just C++ (and Rust)

382978  valgrind: LOAD_PDB_DEBUGINFO: \032 header character not found.
        possible invalid/unsupported pdb file format

385386  Assertion failed "szB >= CACHE_ENTRY_SIZE" on m_debuginfo/image.c:517
Should look into this, but I can't see how it can have failed.

386602  .build-id/*/*.debug symbols not checked for --extra-debuginfo-path

388493  exp-sgcheck fails on DW_TAG_subrange_type

388526  Inconsistent severity in message text: "WARNING: Serious error"

388706  Long bunches of warnings: "warning: evaluate_Dwarf3_Expr:
        unhandled DW_OP_ 0xf2"

389412  Failed assertion in readelf.c, line 697 for clang binaries with
        coverage information

390498  Valgrind reports leaks & other errors
        in vgpreload_memcheck-arm64-linux.so
(arm64 debuginfo reading?)

390871  ELF debug info reader confused with multiple .rodata* sections

393857  Please add support for gcc's artificial attribute
Wishlist

396476  Reading debug info of binaries with zero-size PT_LOAD segment
Seems pretty marginal

396656  Warnings while reading debug info
arm32-linux

397238  Look up of separate debuginfo does not search by build-id in
        --extra-debuginfo-path
Has plausible patch

397357  symbols not loaded with binutils-2.31.1 unless -fuse-ld=gold
        specified to gcc/g++
Possibly fixed already?

398028  Assertion `csfi_fits` failing in simple C program with embedded
        Julia code.
Probably fixed already (

=== Documentation ======================================================

382099  valgrind release archive is not maintained

=== GDB server =========================================================

(carried over)
351792  vgdb doesn't support remote file transfers
	[wishlist]

(carried over)
356174  Enhance the embedded gdbserver to allow LLDB to use it

395416  --log-file output isn't split correctly after call vgdb
This is probably invalid (see 395414)

397187  z13 vector register support for vgdb gdbserver

397357  symbols not loaded with binutils-2.31.1 unless -fuse-ld=gold
        specified to gcc/g++
Fixed, but not yet closed (awaiting confirmation)

=== KernelInterface ====================================================
=== KernelInterface/Linux ==============================================

(carried over)
352742  Custom allocator using sbrk() fails after about 800MB when running
        under memcheck

(carried over)
355803  Add Lustre's IOC_MDC_GETFILESTRIPE ioctl [has patch]

(carried over)
357781  unhandled amd64-linux syscall: 317
        [== 345414, still open]

(carried over)
359705  memcheck causes segfault on a dynamically-linked test from
        rustlang's test suite on i686

(carried over)
361726  WARNING:unhandled syscall on ppc64

(carried over)
361770  Missing F_ADD_SEALS

(carried over)
362892  test apk in android5.0.2,after fix the bug 344802,android log
        "Unable to create protected region in stack for implicit overflow 
        check. Reason: Out of memory size:  4096"
	[the patch looks bogus, more info requested]

(carried over)
362939  test apk in android 5.0 or most,at 0x6A23AB4:
        art::Thread::InstallImplicitProtection() (in /system/lib/libart.so)
        [initimg problems on Android]

(carried over)
364359  Valgrind crashes on fcntl(F_SETFL, O_NONBLOCK, fd)
	[fcntl(F_SETFL) is supported, perhaps stale bug]

(carried over)
368791  unhandled syscall: 167 (swapon, amd64-linux)
        (should fix this for 3.12.1)

(carried over)
368866  WARNING: unhandled arm64-linux syscall: 238 (migrate_pages)
368913  WARNING: unhandled arm64-linux syscall: 117
368914  WARNING: unhandled arm64-linux syscall: 142
368916  WARNING: unhandled arm64-linux syscall: 234
368919  WARNING: unhandled arm64-linux syscall: 274
368920  WARNING: unhandled arm64-linux syscall: 275
368921  WARNING: unhandled arm64-linux syscall: 162
368923  WARNING: unhandled arm64-linux syscall: 268

(carried over)
368960  WARNING: unhandled amd64-linux syscall: 163
369026  WARNING: unhandled amd64-linux syscall: 169
369027  WARNING: unhandled amd64-linux syscall: 216 (remap_file_pages)
369028  WARNING: unhandled amd64-linux syscall: 314 (sched_setattr)
369029  WARNING: unhandled amd64-linux syscall: 315 (sched_getattr)
369030  WARNING: unhandled amd64-linux syscall: 171 (setdomainname)
369031  WARNING: unhandled amd64-linux syscall: 308 (setns)
369032  WARNING: unhandled amd64-linux syscall: 205 (set_thread_area)
369033  WARNING: unhandled amd64-linux syscall: 139 (sysfs)
369034  WARNING: unhandled amd64-linux syscall: 136 (ustat)

(carried over)
371411  Unify fstat64/fstatat64 wrappers
	[legit check needed]

(carried over)
372513  WARNING: unhandled ppc64be-linux syscall: utimes(251)

(carried over)
372861  Test pselect_alarm for Bug 359871 seg faults on RHEL 4
	[has a suggested solution]

(carried over)
378892  Unhandled amd64-linux syscall: 324

380183  WARNING: unhandled amd64-linux syscall: 317

382352  WARNING: unhandled ppc32-linux syscall: 365

383516  valgrind uses getgroups16 in ppc32_linux but should be using
        getgroups. This causes stack smash
Possibly easy fix; queried.  NB: pertains to V syscalls, not the client.

383901  PTP_ENABLE_PPS ioctl
Has patch, but looks rather big for what seems like a small problem

384732  posix_spawn with glibc 2.25 causes an assertion
Looks possibly serious, but also a bit old.  Is this still relevant?

386427  Valgrind unsupported clone on Android
Has patches which look plausible.  Should investigate.

388786  Support bpf syscall in amd64 Linux
Has patches

388880  ppc32-linux Unimplemented syscall 283 (splice)
ppc32, 3.11.0

390553  update xen support to Xen 4.10
Should possibly take

393083  Unimplemented fcntl

393182  Add support for pthread_setname_np() to set thread name
(I thought this already worked)

396369  WARNING: unhandled amd64-linux syscall: 332

397265  [PATCH] Add (partial) support for userfaultfd syscall and related ioctl

397354  utimensat should ignore timespec tv_sec when tv_nsec
        is UTIME_NOW or UTIME_OMIT

397605  ioctl FICLONE mishandled
Sounds plausible

=== KernelInterface/OS X ===============================================

(carried over)
351632  UNKNOWN fcntl 97 on OS X 10.11

(carried over)
351855  Possible false positive on OS X with setlocale

(carried over)
352021  Signals are ignored in OS X 10.10

(carried over)
352384  mmap-FIXED failed in UME (load_segment2)

(carried over)
352567  Assertion tres.status == VexTransOK failed in m_translate.c
        vgPlain_translate

(carried over)
353346  WARNING: unhandled amd64-darwin syscall: unix:330
        == 211362 [not fixed]

(carried over)
353470  memcheck/tests/execve2 fails on OS X 10.11
        == 382708

(carried over)
353471  memcheck/tests/x86/xor-undef-x86 fails on OS X 10.11

(carried over)
354428  Bad report memory leak in OS X 10.11
        == 258140 [still open]

(carried over)
356122  Apparent infinite loop calling GLib g_get_user_special_dir() function

(carried over)
359264  Memcheck shows 2,064 bytes possibly lost and 20,036 suppressed bytes
        in simplistic program on OS X El Capitan

(carried over)
363123  SIGSEGV on Mac OS with very simple threaded code
        == 349128 [still open]

(carried over)
365327  Support macOS Sierra (10.12)

(carried over)
366131  Illegal opcode in OS X 11.0 when using function getpwuid()

(carried over)
372772  Brew doesn't allow for Valgrind 3.12.0 installation on Sierra OSX
        == 365327

(carried over)
372779  valgrind will hang

(carried over)
376870  unhandled amd64-darwin syscall: unix:446 (proc_rlimit_control)

(carried over)
379373  Syscall param msg->desc.port.name points to uninitialised byte(s)
        on macOS 10.12

379893  valgrind segfault os x 10.12.4
        == 396367  unhandled syscall amd64-darwin unix:520
                   (terminate_with_payload) and unix:521 (abort_with_payload)

380269  No multithreading in macOS Sierra (10.12)
Has a bunch of patches; worth looking at?

381815  Assertion 'newfd >= VG_(fd_hard_limit)' failed
Has patch; dunno if it's any good

383199  valgrind crash on unhanded syscall called from libsqlite3.dylib

387690  glfwInit() causes valgrind to crash

390269  WARNING: unhandled amd64-darwin syscall: unix:464

390754  unhandled amd64-darwin syscall: unix:216 (open_dprotected_np)

393415  Valgrind memory debugging for nodejs using child process failed on MacOS

398086  Unrecognised instruction with X11 + OpenGL programs
Is actually a syscall failure

=== MPI ================================================================

=== Output =============================================================

(carried over)
351857  confusing error message about valid command line option

(carried over)
358569  Unhandled instructions cause creation of "orphan" stack traces
        in XML output

(carried over)
374719  some spelling fixes

390310  Output summaries in XML files
Wishlist, has patch

390866  "at" is doubled in "Block was alloc'd at"
Trivial to fix, but could cause breakage for consumers?

393926  helpful to have report timestamp in wall-clock time
Has plausible patch

=== Tools ==============================================================
=== Tools/Cachegrind ===================================================

381838  Unused field tag_shift of struct cache_t2

398178  cachegrind --LL=5242880,2,64 command parameter for Opteron 6174
        rejected

=== Tools/Callgrind ====================================================

(carried over)
369456  callgrind_control failed to find an active callgrind run.
        OSX specific

380942  Experimental: add MESI protocol simulation to Callgrind

382498  callgrind: improve error message when unable to write callgrind.out.*

388740  Ordering by timestamp instead of core number

394307  Add macro to extract current instruction count for peak load monitoring

=== Tools/DHAT =========================================================

390792  'impossible' happened in dh_handle_noninsn_write()
easy fix?

=== Tools/DRD ==========================================================

(carried over)
356374  Assertion 'DRD_(g_threadinfo)[tid].pt_threadid
        != INVALID_POSIX_THREADID' failed

=== Tools/Helgrind =====================================================

(carried over)
360557  helgrind reports data race which I can't see (involves rwlocks)
        [probably a legit bug]

(carried over)
363740  Possible data race in vgPlain_amd64_linux_REDIR_FOR_vgettimeofday

(carried over)
371396  helgrind and drd pth_cond_destroy_busy testcase hang with
        new glibc cond var implementation (workaround committed as 16097)

(carried over)
376257  helgrind history full speed up using a cached stack

380350  RFE: --trace-fork-join in helgrind mode
Wishlist

384261  Assert failure on helgrind with the SIDT instruction
Probably a trivial fix

392331  Spurious lock not held error from inside pthread_cond_timedwait
Some glibc internal use is mishandled

397670  [Helgrind] False positive race detected with sig_atomic_t
False positives due to atomics

=== Tools/Lackey =======================================================

=== Tools/Massif =======================================================

387080  [PATCH] Add --only-peak option to ms_print

=== Tools/Memcheck =====================================================

(carried over)
352364  ppc64: --expensive-definedness-checks=yes is not quite working here

(carried over)
353282  False uninitialised memory after bittwiddling

(carried over)
358980  32 byte leak reported when code uses dlopen and links against pthread
	[native program crashes as well]

(carried over)
361504  dlopen()/dlclose() and shared object usage check
	[wishlist]

(carried over)
361810  valgrind duplicate stdin after fork
	[supposedly a bug in glibc when __libc_freeres should not be run]

(carried over)
364279  False "Uninitialized" on atomic_compare_exchange

(carried over)
366035  valgrind misses buffer overflow, segfaults in malloc in localtime

(carried over)
366817  VALGRIND_MEMPOOL_CHANGE has a performance bug

(carried over)
371989  PCMPISTRM $0x72 validity bit propagation is imprecise

(carried over)
369854  Valgrind reports an Invalid Read in __intel_new_memcpy
        Should be handled by --partial-loads-ok=yes

(carried over)
371966  No uninitialised values reported with PGI -Mstack_arrays

(carried over)
375415  free list of blocks, mempool blocks and describe addr
        do not work properly together

(carried over)
371770  Memleak trace back for overwritten or freed memory pointers
	[wishlist]

(carried over)
377463  Uninitialized parameters to VALGRIND_MAKE_MEM_NOACCESS() not warned
        about. [wishlist]

(carried over)
378622  False positive with GCC 6.3.1 and -funswitch-loops (-O3)

(carried over)
378627  False positive with GCC 6.3.1 and -fno-ipa-cp-clone (-O3)

381304  RFE: --track-origins=yes identifies system call source of
        Uninitialized value
Wishlist, low prio

381326  recognize re-convergent fanout before complaining about Uninitialized
Wishlist, low prio

382041  False uninitialized on bit packing when the compiler chooses XOR
        to implement masking and shifting (x86_64)
Doesn't seem like a widespread problem

384661  after make install 476 errors from five contexts on OS 10.12.5
General OS X badness, probably not actionable

386945  Bogus memcheck errors on ppc64(le) when using strcmp() with gcc-7

388787  Support for C++17 new/delete
This seems like it is important.  Check with mjw.

391772  Memcheck reports conditional jumps if I use raw pointer,
        but not for std::vector
Almost certainly invalid

392373  Valgrind could have an option to search for pointers at unaligned
        addresses
Wishlist

396053  Memcheck does not support copy-stack style coroutine
Seems marginal

397083  Likely false positive "uninitialised value(s)" for __wmemchr_avx2
        and __wmemcmp_avx2_movbe

397313  False positive on long double "uninitialised bytes"

398153  Apparent false positive of uninitialised values in libjpeg-turbo
Probably sse inaccuracies

=== Tools/SGCheck ======================================================

=== Uncategorised ======================================================
=== Uncategorised/build ================================================

(carried over)
357010  drd regression tests fail to compile with Intel compiler

(carried over)
359920  Configure fails with relative DESTDIR

(carried over)
362033  undeclared identifier build failures for getpid(), usleep(),
        and getuid() [Valkyrie]

(carried over)
366345  Dirty compile from m_libcbase.c and vgdb-invoker-ptrace.c

(carried over)
379502  Checking the code of Valgrind dynamic analyzer by a static analyzer

(carried over)
379537  Client requests can't be used in C++11 constexpr functions

382034  Testcases build fixes for musl

382083  Failure to detect MUSL consistently.

382490  glibc version check in configuration step doesn't use CPPFLAGS variable

383811  Failure to build on macOS 10.13 High Sierra (OS X)
        == 385910  clang level not detected on OS X Sierra for Xcode 9

384729  __libc_freeres inhibits cross-platform valgrind
Wishlist

391311  [Patch] Fix arm64 valgrind tests compilation with clang

391853  Makefile.all.am:L247 and @SOLARIS_UNDEF_LARGESOURCE@ being empty

392180  LTO build simplification: __asm__ in m_libcsetjmp.c

396452  none/test/arm/vfp.c doesn't build with binutils 2.31 gas
I think the binutils crew fixed gas properly

396906  compile tests failure on mips32-linux: broken inline asm in tests
        on mips32-linux

=== Uncategorised/run ==================================================

(carried over)
357011  Memcheck regression tests do not generate expected frame numbers
        if compiled with intel compiler
	[asked for rebased patch]

(carried over)
357012  Memcheck regression tests do not match expected results
        if compiled with intel compiler

(carried over)
357014  Helgrind regression tests do not match expected results
        if compiled with intel compiler

(carried over)
359249  valgrind unable to load 64-bit linux executable
        linked with -mcmodel=medium

(carried over)
362680  --error-exitcode not honored when file descriptor leaks are found

(carried over)
377006  valgrind/memcheck segfaults under certain kernel versions (amd64)
        but not others.

(carried over)
379273  Phone restarts when run with valgrind

384630  The 'impossible' happened (__ubsan_handle_shift_out_of_bounds) as soon
        as starting anything under valgrind

394361  [Enhancement] : Client request to control thread-yielding in valgrind
Seems dubious to me

395139  Terminate process and fail at errors.
Wishlist, marginal

395266  Environment variables with slashes get dropped
Should fix

396415  Valgrind is not looking up $ORIGIN rpath of shebang programs
Not sure what's going on here

=== VEX ================================================================
=== VEX/amd64 ==========================================================

(carried over)
356715  vex amd64->IR: 0xC4 0xE2 0x7D 0x13 0x4 0x4A 0xC5 0xFC
        vcvtph2ps (%rdx,%rcx,2),%ymm0

(carried over)
369409  vex amd64->IR: 0x48 0xF 0xC7 0xF0 0x72 0x2 0xE2 0xF8 (

(carried over)
372828  vex amd64->IR: 0x66 0x4D 0xF 0x38 0xF6 0xD2 0x66 0x4D

(carried over)
373166  vex amd64->IR: 0xFF 0xFF 0x48 0x85 0xC0 0x74 0x8 0x4D 0x89 0xE7
	[not clear what's going on here]

(carried over, AMD XOP-prefixed insns)
356611  vex amd64->IR: 0x8F 0xEA 0xF8 0x10 0xC9 0x3 0x1D 0x0
        [== 328357, still open]

(carried over, AMD XOP-prefixed insns)
339596  AMD64 xop instructions unsupported.
        vex amd64->IR: 0x8F 0xE8 0x78 0xCD 0xC1 0x4 0xC5 0xF9
        [has patch, could possibly take it, but needs
         cleanup/verification with Mark]
        == 356138

(carried over, AMD XOP-prefixed insns)
369053  AMD64 fma4 instructions missing 256 bit support

(carried over, AMD XOP-prefixed insns)
375008  amd64->IR: 0x8F 0x6A 0x78 0x10 0xD8 0x4 0x4 0x0 0x0 0x8F

381819  unhandled instruction bytes: 0x8F 0xEA 0x78 0x10 0xD0 0x8 0x4 0x0 0x0
AMD XOP-prefixed, apparently == 322586 and 328357

383010  Add support for AVX-512 instructions
We should probably merge this, if it doesn't break anything

384930  Valgrind fails to compute correctly some code using the GMP library
This is a real bug.  It's actually fixed now, but testcases need
to be landed.

385477  AMD64, sqlite3 - Unrecognised instruction: bextr

385651  vex amd64->IR: 0x8F 0xEA 0xF8 0x10 0xC8 0x6 0x2 0x0 0x0 0x48
AMD XOP etc?

386203  Disable RTM cpuid bit by default
mjw filed this.  Do we need to action it?

386851  Please add support for CPUID override

389116  vex amd64->IR: 0xC5 0xFC 0xC2 0xC0 0xF 0xC4 0xC2 0x7D 0x18 0x49

389349  vex amd64->IR: 0xF3 0xF 0x1E 0xFA 0x48 0x8B 0x5 0xBD 0xAF 0x51

389700  vex amd64->IR: 0xC4 0xE3 0x7D 0x1D 0xED 0x0 0xC5 0xF9 0xC5 0xF5

391148  Unhandled AVX instruction vmovq %xmm9,%xmm1
Potentially serious

391845  Unrecognised instruction: __svml_irem8_l9
Probably invalid (3.11.0)

393351  vex amd64->IR: 0x62 0xF1 0xFD 0x48 0x6F 0xD 0xE1 0xEC 0x8

394582  vex amd64->IR: 0x62 0xF1 0x7C 0x48 0x57 0xC0 0x48 0x8D 0x35 0x6A

396706  VEX issue with AMD64 SHR instruction?
Missing spec rule, fix this

398183  Vex errors with _mm256_shuffle_epi8/vpshufb.
Generates too much code

=== VEX/arm32 ==========================================================

(carried over)
352630  valgrind: Unrecognised instruction at address 0x4fc4d33.
        [what insn is this?]

(carried over)
355526  disInstr(arm): unhandled instruction: 0x1823E91
        [what insn is this?]

(carried over)
n-i-bz  Remove limit on strd's negative immediates
        [dev@, Michael Daniels, 19 Nov 2015, easy fix, should land]

(carried over)
373990  Potential shift left overflow in guest_arm_toIR.c

(carried over)
369509  ARMv8.1 LSE instructions are not supported

(carried over)
369723  __builtin_longjmp not supported in clang/llvm on Android arm64 target
        [has patch at android-review.googlesource.com]

(carried over)
373990  Potential shift left overflow in guest_arm_toIR.c
	[suggested fix available]

(carried over)
378249  Valgrind Crashed on raspberian armv71 instrtuction set

384442  ARM: bad pc in complaint if instruction changes pc
Earlywriteback problems; low prio

384808  disInstr(arm): unhandled instruction: 0xEF9F0002
        (svc #0x9f0002,sys_cacheflush for ARM Linux)
Reported in 3.12, may be fixed now?

384959  Incorrect jumpkind for arm instruction - LDR PC, [SP],#4
Won't affect emulation, but maybe messes up some analysis?

385262  disInstr(thumb): unhandled instruction: 0xEBAD 0x1CCA
sub.w   r12, sp, r10, lsl #7

385843  [PATCH] ARM: mark caller-save VFP registes as trashed by calls
Is potentially serious

387810  arm: unhandled instruction: 0xEBAD 0x1AC8
On Android, may be important?

388084  armv7l Unrecognised instruction "bkpt" 0xE1200070

388603  ARM Advanced SIMD vfma.f32 with Q or D registers reports unsupported
        instruction
Potentially serious

393036  arm: unhandled instruction: 0xEBAD 0x1BC7 (sub.w fp, sp, r7, lsl #7)
Potentially serious

395777  disInstr(arm): unhandled instruction: 0xE7F000F0
        (wine, dlls/msvcp90/tests/misc.c)
This is handled correctly, but shouldn't be so verbose (--sigill-diagnostics?)

396001  unhandled instruction: 0xEC51 0x0F1E; ARMv7 libcrypto 'mrrc'
        == disInstr(arm): unhandled instruction: 0xEC510F1E 

=== VEX/arm64 ==========================================================

(carried over)
369509  ARMv8.1 LSE instructions are not supported

(carried over)
377966  disInstr(arm64): unhandled instruction 0xD50B7425

381085  Use of SXTX in a memory address is treated as an illegal instruction
        on Aarch64
Legit, but low prio

384877  (ARM64) Added translation for instruction LDRSW (literal)
Is this really not supported?

386861  ARM64: Pre-indexed store to the stack reported as invalid write
More missing earlyWB problems?

392146  aarch64: unhandled instruction 0xD5380001 (MRS rT, mdir_el1)
Has patch, but looks pretty dirty

=== VEX/mips ===========================================================

396905  compile tests failure on mips32-linux: Error: opcode not
        supported on this processor: mips1 (mips1)

=== VEX/other ==========================================================

384681  PUT(pc, <variable>) should specialize to help debugging
Wishlist

384842  Reporting for VEX IR semantic bugs
This does actually show 3 problems which look ungood!

394227  [x86] False negative "uninitialised value" report due to not
        recognizing simd registers clear by pcmp*
Should fold these to constant zero in iropt; awaiting test case

=== VEX/ppc ============================================================

(carried over)
361405  disInstr(ppc): unhandled instruction: 0xFF81010C

=== VEX/s390x ==========================================================

385411  s390x: z13 vector floating-point instructions not implemented

=== VEX/x86 ============================================================

=== zz_other ===========================================================

396290  [PATCH] Possible tool - allocfail

=== zz_other/Android ===================================================

(carried over)
374814  VALGRIND INTERNAL ERROR: signal 11 (SIGSEGV) - exiting

379764  support x86-64 android

379878  most #if ... _linux_android checks wrong

=== zz_other/amd64 =====================================================

(carried over)
375171  VG_(scheduler): run_innerloop detected host state invariant failure
        == 374482
        == 374850

=== zz_other/arm32 =====================================================

(carried over)
356675  callgrind test apk in android 5.0.2
        [Unclear what this is.]

(carried over)
364533  Process terminating with default action of signal 4 (SIGILL): dumping
        core, : at 0x4000E7C: ??? (in /lib/ld-uClibc.so.0)

(carried over)
374814  VALGRIND INTERNAL ERROR: signal 11 (SIGSEGV) - exiting
        possibly TLS related

393457  valgrind crash at _start with arm CPU
Not enough info to do anything with this

=== zz_other/arm64 =====================================================

(carried over)
369723  __builtin_longjmp not supported in clang/llvm on Android arm64 target
        Has patch

(carried over)
371439  Get coredump working on arm64
	[has an incomplete patch]

=== zz_other/*BSD ======================================================

(carried over)
368873  Please add FreeBSD to supported OS list

=== zz_other/mips ======================================================

=== zz_other/ppc =======================================================

(carried over)
365208  valgrind stuck after redirecting "memcpy"

=== zz_other/s390 ======================================================

=== zz_other/Win32 =====================================================

=== zz_other/x86 =======================================================


========================================================================
========================================================================
========================================================================

Wed 10 May 10:24:16 CEST 2017

========================================================================
========================================================================
========================================================================

Should fix for 3.13:
** = higher priority, do these first
*  = lower priority, do these if time available

**
n-i-bz  major perf problems w/ stack registration + stack recycling
Should be fixed.  Try again with ./mach gtest

* 
371989  PCMPISTRM $0x72 validity bit propagation is imprecise
(at least comment on it)

*
322935  disInstr(arm): unhandled instruction: 0xF1010200, valgrind:
        Unrecognised instruction on Raspbian
        [should document that Raspian is not supported]

*
(carried over)
353192  Debug info/data section not detected on AMD64
        [To do with rwx, combined code+data sections]

*
(carried over)
358980  32 byte leak reported when code uses dlopen and links against pthread

*
(carried over)
364279  False "Uninitialized" on atomic_compare_exchange

*
368791  unhandled syscall: 167 (swapon, amd64-linux)
	[hoist mips64-linux specific wrapper as a linux specific one]

*
369723  __builtin_longjmp not supported in clang/llvm on Android arm64 target
        [has patch at android-review.googlesource.com]

*
369854  Valgrind reports an Invalid Read in __intel_new_memcpy
        Should be handled by --partial-loads-ok=yes

*
371396  helgrind and drd pth_cond_destroy_busy testcase hang with
        new glibc cond var implementation (workaround committed as 16097)

*
373990  Potential shift left overflow in guest_arm_toIR.c
	[suggested fix available]

*
377966  disInstr(arm64): unhandled instruction 0xD50B7425

*
378622  False positive with GCC 6.3.1 and -funswitch-loops (-O3)

*
378627  False positive with GCC 6.3.1 and -fno-ipa-cp-clone (-O3)

*
378892  Unhandled amd64-linux syscall: 324

*
n-i-bz  Remove limit on strd's negative immediates
        [dev@, Michael Daniels, 19 Nov 2015, easy fix, should land]

========================================================================
========================================================================
========================================================================
========================================================================
========================================================================

Created Tues 24 July 2018.  All bugs after the release of 3.13.0 go in here.
Also, this contains bugs from 3_12_BUGSTATUS.txt that didn't get fixed in
3.12.  These are marked "(carried over)".

Mon  3 Sep 12:01:52 CEST 2018
