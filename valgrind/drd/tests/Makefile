# Makefile.in generated by automake 1.9.6 from Makefile.am.
# drd/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file is used for tool tests, and also in perf/Makefile.am.

srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/valgrind
pkglibdir = $(libdir)/valgrind
pkgincludedir = $(includedir)/valgrind
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux
host_triplet = i686-pc-linux
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.flags.am \
	$(top_srcdir)/Makefile.tool-tests.am
check_PROGRAMS = fp_race$(EXEEXT) hold_lock$(EXEEXT) \
	linuxthreads_det$(EXEEXT) memory_allocation$(EXEEXT) \
	monitor_example$(EXEEXT) new_delete$(EXEEXT) \
	pth_broadcast$(EXEEXT) pth_cancel_locked$(EXEEXT) \
	pth_cond_race$(EXEEXT) pth_create_chain$(EXEEXT) \
	pth_detached$(EXEEXT) pth_detached_sem$(EXEEXT) \
	pth_inconsistent_cond_wait$(EXEEXT) pth_mutex_reinit$(EXEEXT) \
	pth_process_shared_mutex$(EXEEXT) recursive_mutex$(EXEEXT) \
	rwlock_race$(EXEEXT) rwlock_test$(EXEEXT) \
	sem_as_mutex$(EXEEXT) sigalrm$(EXEEXT) thread_name$(EXEEXT) \
	trylock$(EXEEXT) unit_bitmap$(EXEEXT) unit_vc$(EXEEXT) \
	$(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8)
#am__append_1 = boost_thread
am__append_2 = annotate_rwlock atomic_var circular_buffer
am__append_3 = tsan_unittest
#am__append_4 = omp_matinv omp_prime omp_printf
am__append_5 = matinv pth_barrier pth_barrier_race pth_barrier_reinit
am__append_6 = pth_create_glibc_2_0
am__append_7 = pth_spinlock
am__append_8 = qt4_mutex qt4_rwlock qt4_semaphore
subdir = drd/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
#am__EXEEXT_1 = boost_thread$(EXEEXT)
am__EXEEXT_2 = annotate_rwlock$(EXEEXT) \
	atomic_var$(EXEEXT) \
	circular_buffer$(EXEEXT)
am__EXEEXT_3 = tsan_unittest$(EXEEXT)
#am__EXEEXT_4 = omp_matinv$(EXEEXT) \
#	omp_prime$(EXEEXT) omp_printf$(EXEEXT)
am__EXEEXT_5 = matinv$(EXEEXT) \
	pth_barrier$(EXEEXT) \
	pth_barrier_race$(EXEEXT) \
	pth_barrier_reinit$(EXEEXT)
am__EXEEXT_6 = pth_create_glibc_2_0$(EXEEXT)
am__EXEEXT_7 = pth_spinlock$(EXEEXT)
am__EXEEXT_8 = qt4_mutex$(EXEEXT) \
	qt4_rwlock$(EXEEXT) qt4_semaphore$(EXEEXT)
annotate_rwlock_SOURCES = annotate_rwlock.c
annotate_rwlock_OBJECTS = annotate_rwlock.$(OBJEXT)
annotate_rwlock_LDADD = $(LDADD)
annotate_rwlock_DEPENDENCIES =
atomic_var_SOURCES = atomic_var.c
atomic_var_OBJECTS = atomic_var.$(OBJEXT)
atomic_var_LDADD = $(LDADD)
atomic_var_DEPENDENCIES =
am__boost_thread_SOURCES_DIST = boost_thread.cpp
#am_boost_thread_OBJECTS =  \
#	boost_thread-boost_thread.$(OBJEXT)
boost_thread_OBJECTS = $(am_boost_thread_OBJECTS)
am__DEPENDENCIES_1 =
#boost_thread_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
circular_buffer_SOURCES = circular_buffer.c
circular_buffer_OBJECTS = circular_buffer.$(OBJEXT)
circular_buffer_LDADD = $(LDADD)
circular_buffer_DEPENDENCIES =
fp_race_SOURCES = fp_race.c
fp_race_OBJECTS = fp_race.$(OBJEXT)
fp_race_LDADD = $(LDADD)
fp_race_DEPENDENCIES =
hold_lock_SOURCES = hold_lock.c
hold_lock_OBJECTS = hold_lock.$(OBJEXT)
hold_lock_LDADD = $(LDADD)
hold_lock_DEPENDENCIES =
linuxthreads_det_SOURCES = linuxthreads_det.c
linuxthreads_det_OBJECTS = linuxthreads_det.$(OBJEXT)
linuxthreads_det_LDADD = $(LDADD)
linuxthreads_det_DEPENDENCIES =
matinv_SOURCES = matinv.c
matinv_OBJECTS = matinv.$(OBJEXT)
matinv_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
memory_allocation_SOURCES = memory_allocation.c
memory_allocation_OBJECTS = memory_allocation.$(OBJEXT)
memory_allocation_LDADD = $(LDADD)
memory_allocation_DEPENDENCIES =
am_monitor_example_OBJECTS = monitor_example.$(OBJEXT)
monitor_example_OBJECTS = $(am_monitor_example_OBJECTS)
monitor_example_LDADD = $(LDADD)
monitor_example_DEPENDENCIES =
am_new_delete_OBJECTS = new_delete.$(OBJEXT)
new_delete_OBJECTS = $(am_new_delete_OBJECTS)
new_delete_LDADD = $(LDADD)
new_delete_DEPENDENCIES =
omp_matinv_SOURCES = omp_matinv.c
omp_matinv_OBJECTS = omp_matinv-omp_matinv.$(OBJEXT)
#omp_matinv_DEPENDENCIES = $(am__DEPENDENCIES_1)
omp_prime_SOURCES = omp_prime.c
omp_prime_OBJECTS = omp_prime-omp_prime.$(OBJEXT)
#omp_prime_DEPENDENCIES = $(am__DEPENDENCIES_1)
omp_printf_SOURCES = omp_printf.c
omp_printf_OBJECTS = omp_printf-omp_printf.$(OBJEXT)
#omp_printf_DEPENDENCIES = $(am__DEPENDENCIES_1)
pth_barrier_SOURCES = pth_barrier.c
pth_barrier_OBJECTS = pth_barrier.$(OBJEXT)
pth_barrier_LDADD = $(LDADD)
pth_barrier_DEPENDENCIES =
pth_barrier_race_SOURCES = pth_barrier_race.c
pth_barrier_race_OBJECTS = pth_barrier_race.$(OBJEXT)
pth_barrier_race_LDADD = $(LDADD)
pth_barrier_race_DEPENDENCIES =
pth_barrier_reinit_SOURCES = pth_barrier_reinit.c
pth_barrier_reinit_OBJECTS = pth_barrier_reinit.$(OBJEXT)
pth_barrier_reinit_LDADD = $(LDADD)
pth_barrier_reinit_DEPENDENCIES =
pth_broadcast_SOURCES = pth_broadcast.c
pth_broadcast_OBJECTS = pth_broadcast.$(OBJEXT)
pth_broadcast_LDADD = $(LDADD)
pth_broadcast_DEPENDENCIES =
pth_cancel_locked_SOURCES = pth_cancel_locked.c
pth_cancel_locked_OBJECTS = pth_cancel_locked.$(OBJEXT)
pth_cancel_locked_LDADD = $(LDADD)
pth_cancel_locked_DEPENDENCIES =
pth_cond_race_SOURCES = pth_cond_race.c
pth_cond_race_OBJECTS = pth_cond_race.$(OBJEXT)
pth_cond_race_LDADD = $(LDADD)
pth_cond_race_DEPENDENCIES =
pth_create_chain_SOURCES = pth_create_chain.c
pth_create_chain_OBJECTS = pth_create_chain.$(OBJEXT)
pth_create_chain_LDADD = $(LDADD)
pth_create_chain_DEPENDENCIES =
pth_create_glibc_2_0_SOURCES = pth_create_glibc_2_0.c
pth_create_glibc_2_0_OBJECTS = pth_create_glibc_2_0.$(OBJEXT)
pth_create_glibc_2_0_LDADD = $(LDADD)
pth_create_glibc_2_0_DEPENDENCIES =
pth_detached_SOURCES = pth_detached.c
pth_detached_OBJECTS = pth_detached.$(OBJEXT)
pth_detached_LDADD = $(LDADD)
pth_detached_DEPENDENCIES =
pth_detached_sem_SOURCES = pth_detached_sem.c
pth_detached_sem_OBJECTS = pth_detached_sem.$(OBJEXT)
pth_detached_sem_LDADD = $(LDADD)
pth_detached_sem_DEPENDENCIES =
pth_inconsistent_cond_wait_SOURCES = pth_inconsistent_cond_wait.c
pth_inconsistent_cond_wait_OBJECTS =  \
	pth_inconsistent_cond_wait.$(OBJEXT)
pth_inconsistent_cond_wait_LDADD = $(LDADD)
pth_inconsistent_cond_wait_DEPENDENCIES =
pth_mutex_reinit_SOURCES = pth_mutex_reinit.c
pth_mutex_reinit_OBJECTS = pth_mutex_reinit.$(OBJEXT)
pth_mutex_reinit_LDADD = $(LDADD)
pth_mutex_reinit_DEPENDENCIES =
pth_process_shared_mutex_SOURCES = pth_process_shared_mutex.c
pth_process_shared_mutex_OBJECTS = pth_process_shared_mutex.$(OBJEXT)
pth_process_shared_mutex_LDADD = $(LDADD)
pth_process_shared_mutex_DEPENDENCIES =
pth_spinlock_SOURCES = pth_spinlock.c
pth_spinlock_OBJECTS = pth_spinlock.$(OBJEXT)
pth_spinlock_LDADD = $(LDADD)
pth_spinlock_DEPENDENCIES =
am__qt4_mutex_SOURCES_DIST = qt4_mutex.cpp
am_qt4_mutex_OBJECTS =  \
	qt4_mutex-qt4_mutex.$(OBJEXT)
qt4_mutex_OBJECTS = $(am_qt4_mutex_OBJECTS)
qt4_mutex_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__qt4_rwlock_SOURCES_DIST = qt4_rwlock.cpp
am_qt4_rwlock_OBJECTS =  \
	qt4_rwlock-qt4_rwlock.$(OBJEXT)
qt4_rwlock_OBJECTS = $(am_qt4_rwlock_OBJECTS)
qt4_rwlock_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__qt4_semaphore_SOURCES_DIST = qt4_semaphore.cpp
am_qt4_semaphore_OBJECTS =  \
	qt4_semaphore-qt4_semaphore.$(OBJEXT)
qt4_semaphore_OBJECTS = $(am_qt4_semaphore_OBJECTS)
qt4_semaphore_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
recursive_mutex_SOURCES = recursive_mutex.c
recursive_mutex_OBJECTS = recursive_mutex.$(OBJEXT)
recursive_mutex_LDADD = $(LDADD)
recursive_mutex_DEPENDENCIES =
rwlock_race_SOURCES = rwlock_race.c
rwlock_race_OBJECTS = rwlock_race.$(OBJEXT)
rwlock_race_LDADD = $(LDADD)
rwlock_race_DEPENDENCIES =
rwlock_test_SOURCES = rwlock_test.c
rwlock_test_OBJECTS = rwlock_test.$(OBJEXT)
rwlock_test_LDADD = $(LDADD)
rwlock_test_DEPENDENCIES =
sem_as_mutex_SOURCES = sem_as_mutex.c
sem_as_mutex_OBJECTS = sem_as_mutex.$(OBJEXT)
sem_as_mutex_LDADD = $(LDADD)
sem_as_mutex_DEPENDENCIES =
sigalrm_SOURCES = sigalrm.c
sigalrm_OBJECTS = sigalrm.$(OBJEXT)
sigalrm_LDADD = $(LDADD)
sigalrm_DEPENDENCIES =
thread_name_SOURCES = thread_name.c
thread_name_OBJECTS = thread_name.$(OBJEXT)
thread_name_LDADD = $(LDADD)
thread_name_DEPENDENCIES =
trylock_SOURCES = trylock.c
trylock_OBJECTS = trylock.$(OBJEXT)
trylock_LDADD = $(LDADD)
trylock_DEPENDENCIES =
am_tsan_unittest_OBJECTS = tsan_unittest-tsan_unittest.$(OBJEXT)
tsan_unittest_OBJECTS = $(am_tsan_unittest_OBJECTS)
tsan_unittest_LDADD = $(LDADD)
tsan_unittest_DEPENDENCIES =
unit_bitmap_SOURCES = unit_bitmap.c
unit_bitmap_OBJECTS = unit_bitmap-unit_bitmap.$(OBJEXT)
unit_bitmap_DEPENDENCIES =
unit_vc_SOURCES = unit_vc.c
unit_vc_OBJECTS = unit_vc-unit_vc.$(OBJEXT)
unit_vc_DEPENDENCIES =
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = annotate_rwlock.c atomic_var.c $(boost_thread_SOURCES) \
	circular_buffer.c fp_race.c hold_lock.c linuxthreads_det.c \
	matinv.c memory_allocation.c $(monitor_example_SOURCES) \
	$(new_delete_SOURCES) omp_matinv.c omp_prime.c omp_printf.c \
	pth_barrier.c pth_barrier_race.c pth_barrier_reinit.c \
	pth_broadcast.c pth_cancel_locked.c pth_cond_race.c \
	pth_create_chain.c pth_create_glibc_2_0.c pth_detached.c \
	pth_detached_sem.c pth_inconsistent_cond_wait.c \
	pth_mutex_reinit.c pth_process_shared_mutex.c pth_spinlock.c \
	$(qt4_mutex_SOURCES) $(qt4_rwlock_SOURCES) \
	$(qt4_semaphore_SOURCES) recursive_mutex.c rwlock_race.c \
	rwlock_test.c sem_as_mutex.c sigalrm.c thread_name.c trylock.c \
	$(tsan_unittest_SOURCES) unit_bitmap.c unit_vc.c
DIST_SOURCES = annotate_rwlock.c atomic_var.c \
	$(am__boost_thread_SOURCES_DIST) circular_buffer.c fp_race.c \
	hold_lock.c linuxthreads_det.c matinv.c memory_allocation.c \
	$(monitor_example_SOURCES) $(new_delete_SOURCES) omp_matinv.c \
	omp_prime.c omp_printf.c pth_barrier.c pth_barrier_race.c \
	pth_barrier_reinit.c pth_broadcast.c pth_cancel_locked.c \
	pth_cond_race.c pth_create_chain.c pth_create_glibc_2_0.c \
	pth_detached.c pth_detached_sem.c pth_inconsistent_cond_wait.c \
	pth_mutex_reinit.c pth_process_shared_mutex.c pth_spinlock.c \
	$(am__qt4_mutex_SOURCES_DIST) $(am__qt4_rwlock_SOURCES_DIST) \
	$(am__qt4_semaphore_SOURCES_DIST) recursive_mutex.c \
	rwlock_race.c rwlock_test.c sem_as_mutex.c sigalrm.c \
	thread_name.c trylock.c $(tsan_unittest_SOURCES) unit_bitmap.c \
	unit_vc.c
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = tar
AR = /usr/bin/ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.9
AWK = gawk
BOOST_CFLAGS = 
BOOST_LIBS = 
BUILD_MPIWRAP_PRI_FALSE = #
BUILD_MPIWRAP_PRI_TRUE = 
BUILD_MPIWRAP_SEC_FALSE = 
BUILD_MPIWRAP_SEC_TRUE = #
BUILD_SSE3_TESTS_FALSE = #
BUILD_SSE3_TESTS_TRUE = 
BUILD_SSSE3_TESTS_FALSE = 
BUILD_SSSE3_TESTS_TRUE = #
CC = gcc
CCAS = gcc
CCASFLAGS = -Wno-long-long
CCDEPMODE = depmode=gcc3
CFLAGS = -Wno-long-long -Wno-pointer-sign -Wdeclaration-after-statement -fno-stack-protector
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFAULT_SUPP = exp-ptrcheck.supp xfree-3.supp xfree-4.supp glibc-2.X-drd.supp glibc-2.34567-NPTL-helgrind.supp glibc-2.3.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
DISTCHECK_CONFIGURE_FLAGS = --with-vex=$(top_srcdir)/VEX
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_M32 = -m32
FLAG_M64 = -m64
FLAG_MAIX32 = 
FLAG_MAIX64 = 
FLAG_MMMX = -mmmx
FLAG_MSSE = -msse
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_WDECL_AFTER_STMT = -Wdeclaration-after-statement
FLAG_W_EXTRA = -Wextra
FLAG_W_NO_FORMAT_ZERO_LENGTH = -Wno-format-zero-length
GDB = /usr/bin/gdb
GLIBC_VERSION = 2.3
GREP = /bin/grep
HAS_ALTIVEC_FALSE = 
HAS_ALTIVEC_TRUE = #
HAVE_ALTIVEC_H_FALSE = 
HAVE_ALTIVEC_H_TRUE = #
HAVE_BOOST_1_35_FALSE = 
HAVE_BOOST_1_35_TRUE = #
HAVE_BUILTIN_ATOMIC_FALSE = #
HAVE_BUILTIN_ATOMIC_TRUE = 
HAVE_OPENMP_FALSE = 
HAVE_OPENMP_TRUE = #
HAVE_PTHREAD_BARRIER_FALSE = #
HAVE_PTHREAD_BARRIER_TRUE = 
HAVE_PTHREAD_CREATE_GLIBC_2_0_FALSE = #
HAVE_PTHREAD_CREATE_GLIBC_2_0_TRUE = 
HAVE_PTHREAD_MUTEX_TIMEDLOCK_FALSE = #
HAVE_PTHREAD_MUTEX_TIMEDLOCK_TRUE = 
HAVE_PTHREAD_SPINLOCK_FALSE = #
HAVE_PTHREAD_SPINLOCK_TRUE = 
HAVE_QTCORE_FALSE = #
HAVE_QTCORE_TRUE = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = makeinfo
MPI_CC = mpicc
OBJC = gcc
OBJCFLAGS = -g -O2
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.5.0.SVN
PACKAGE_TARNAME = valgrind
PACKAGE_VERSION = 3.5.0.SVN
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PREFERRED_STACK_BOUNDARY = -mpreferred-stack-boundary=2
QTCORE_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtCore  
QTCORE_LIBS = -L/build/buildd/qt4-x11-4.2.1/lib -lQtCore -lfontconfig -lz -lm -lglib-2.0 -lpthread -ldl  
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VALT_LOAD_ADDRESS = 0x38000000
VERSION = 3.5.0.SVN
VEX_DIR = $(top_srcdir)/VEX
VGCONF_ARCHS_INCLUDE_AMD64_FALSE = 
VGCONF_ARCHS_INCLUDE_AMD64_TRUE = #
VGCONF_ARCHS_INCLUDE_PPC32_FALSE = 
VGCONF_ARCHS_INCLUDE_PPC32_TRUE = #
VGCONF_ARCHS_INCLUDE_PPC64_FALSE = 
VGCONF_ARCHS_INCLUDE_PPC64_TRUE = #
VGCONF_ARCHS_INCLUDE_X86_FALSE = #
VGCONF_ARCHS_INCLUDE_X86_TRUE = 
VGCONF_ARCH_PRI = x86
VGCONF_ARCH_SEC = 
VGCONF_HAVE_PLATFORM_SEC_FALSE = 
VGCONF_HAVE_PLATFORM_SEC_TRUE = #
VGCONF_OS = linux
VGCONF_OS_IS_AIX5_FALSE = 
VGCONF_OS_IS_AIX5_TRUE = #
VGCONF_OS_IS_DARWIN_FALSE = 
VGCONF_OS_IS_DARWIN_TRUE = #
VGCONF_OS_IS_LINUX_FALSE = #
VGCONF_OS_IS_LINUX_TRUE = 
VGCONF_PLATFORMS_INCLUDE_AMD64_DARWIN_FALSE = 
VGCONF_PLATFORMS_INCLUDE_AMD64_DARWIN_TRUE = #
VGCONF_PLATFORMS_INCLUDE_AMD64_LINUX_FALSE = 
VGCONF_PLATFORMS_INCLUDE_AMD64_LINUX_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC32_AIX5_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC32_AIX5_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC32_LINUX_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC32_LINUX_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC64_AIX5_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC64_AIX5_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC64_LINUX_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC64_LINUX_TRUE = #
VGCONF_PLATFORMS_INCLUDE_X86_DARWIN_FALSE = 
VGCONF_PLATFORMS_INCLUDE_X86_DARWIN_TRUE = #
VGCONF_PLATFORMS_INCLUDE_X86_LINUX_FALSE = #
VGCONF_PLATFORMS_INCLUDE_X86_LINUX_TRUE = 
VGCONF_PLATFORM_PRI_CAPS = X86_LINUX
VGCONF_PLATFORM_SEC_CAPS = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_OBJC = gcc
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux
build_alias = 
build_cpu = i686
build_os = linux
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux
host_alias = 
host_cpu = i686
host_os = linux
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /afs/csail.mit.edu/u/r/rudd/research/invariants/valgrind-bak/valgrind/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /afs/csail.mit.edu/u/r/rudd/research/invariants/valgrind-bak/valgrind/inst
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
AM_CFLAGS_BASE = -O2 -g -Wmissing-prototypes -Wall -Wshadow \
                 -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
		 -Wno-format-zero-length \
                 -fno-strict-aliasing

AM_CFLAGS_PIC = -fpic -O -g -fno-omit-frame-pointer -fno-strict-aliasing

# These flags are used for building the preload shared objects.
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.
#AM_CFLAGS_PIC = -dynamic -O -g -fno-omit-frame-pointer -fno-strict-aliasing -mno-dynamic-no-pic

# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
#
# Also: in newer versions of automake (1.10 onwards?) asm files ending with
# '.S' are considered "pre-processed" (as opposed to those ending in '.s')
# and so the CPPFLAGS are passed to the assembler.  But this is not true for
# older automakes (e.g. 1.8.5, 1.9.6), sigh.  So we include
# AM_CPPFLAGS_<PLATFORM> in each AM_CCASFLAGS_<PLATFORM> variable.  This
# means some of the flags are duplicated on systems with newer versions of
# automake, but this does not really matter and seems hard to avoid.
AM_CPPFLAGS_COMMON = \
		-I$(top_srcdir) \
		-I$(top_srcdir)/include \
		-I$(top_srcdir)/VEX/pub

AM_FLAG_M3264_X86_LINUX = -m32
AM_CPPFLAGS_X86_LINUX = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_x86=1 \
			    -DVGO_linux=1 \
			    -DVGP_x86_linux=1

AM_CFLAGS_X86_LINUX = -m32 -mpreferred-stack-boundary=2 \
			 	$(AM_CFLAGS_BASE)

AM_CCASFLAGS_X86_LINUX = $(AM_CPPFLAGS_X86_LINUX) -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CPPFLAGS_AMD64_LINUX = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_amd64=1 \
			    -DVGO_linux=1 \
			    -DVGP_amd64_linux=1

AM_CFLAGS_AMD64_LINUX = -m64 -fomit-frame-pointer \
				-mpreferred-stack-boundary=2 $(AM_CFLAGS_BASE)

AM_CCASFLAGS_AMD64_LINUX = $(AM_CPPFLAGS_AMD64_LINUX) -m64 -g
AM_FLAG_M3264_PPC32_LINUX = -m32
AM_CPPFLAGS_PPC32_LINUX = $(AM_CPPFLAGS_COMMON) \
		-DVGA_ppc32=1 \
		-DVGO_linux=1 \
		-DVGP_ppc32_linux=1

AM_CFLAGS_PPC32_LINUX = -m32 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_LINUX = $(AM_CPPFLAGS_PPC32_LINUX) -m32 -g
AM_FLAG_M3264_PPC64_LINUX = -m64
AM_CPPFLAGS_PPC64_LINUX = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_ppc64=1 \
			    -DVGO_linux=1 \
			    -DVGP_ppc64_linux=1

AM_CFLAGS_PPC64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_LINUX = $(AM_CPPFLAGS_PPC64_LINUX) -m64 -g
AM_FLAG_M3264_PPC32_AIX5 = 
AM_CPPFLAGS_PPC32_AIX5 = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_ppc32=1 \
			    -DVGO_aix5=1 \
			    -DVGP_ppc32_aix5=1

AM_CFLAGS_PPC32_AIX5 =  -mcpu=powerpc $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_AIX5 = $(AM_CPPFLAGS_PPC32_AIX5) \
			     -mcpu=powerpc -g

AM_FLAG_M3264_PPC64_AIX5 = 
AM_CPPFLAGS_PPC64_AIX5 = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_ppc64=1 \
			    -DVGO_aix5=1 \
			    -DVGP_ppc64_aix5=1

AM_CFLAGS_PPC64_AIX5 =  -mcpu=powerpc64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_AIX5 = $(AM_CPPFLAGS_PPC64_AIX5) \
			     -mcpu=powerpc64 -g

AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CPPFLAGS_X86_DARWIN = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_x86=1 \
			    -DVGO_darwin=1 \
			    -DVGP_x86_darwin=1

AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector \
			    -mdynamic-no-pic

AM_CCASFLAGS_X86_DARWIN = $(AM_CPPFLAGS_X86_DARWIN) -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CPPFLAGS_AMD64_DARWIN = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_amd64=1 \
			    -DVGO_darwin=1 \
			    -DVGP_amd64_darwin=1

AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector

AM_CCASFLAGS_AMD64_DARWIN = $(AM_CPPFLAGS_AMD64_DARWIN) -arch x86_64 -g

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_X86_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_X86_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_X86_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_X86_LINUX)
AM_FLAG_M3264_SEC = 
#AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_)

# Baseline link flags for making dynamic shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_COMMON_AIX5 = -nodefaultlibs -shared -Wl,-G -Wl,-bnogc
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_PPC64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  
PRELOAD_LDFLAGS_PPC64_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/include \
		-I$(top_srcdir)/coregrind -I$(top_builddir)/include \
		-I$(top_srcdir)/VEX/pub \
		-DVGA_$(VGCONF_ARCH_PRI)=1 \
		-DVGO_$(VGCONF_OS)=1 \
		-DVGP_$(VGCONF_ARCH_PRI)_$(VGCONF_OS)=1

# Nb: Tools need to augment these flags with an arch-selection option, such
# as $(AM_FLAG_M3264_PRI).
AM_CFLAGS = -Winline -Wall -Wshadow -g $(AM_FLAG_M3264_PRI) \
	-Wextra -Wno-inline -Wno-unused-parameter
AM_CXXFLAGS = -Winline -Wall -Wshadow -g $(AM_FLAG_M3264_PRI) \
	-Wextra -Wno-inline -Wno-unused-parameter
# Include AM_CPPFLAGS in AM_CCASFLAGS to allow for older versions of
# automake;  see comments in Makefile.flags.am for more detail.
AM_CCASFLAGS = $(AM_CPPFLAGS)
SUBDIRS = .
DIST_SUBDIRS = .
noinst_SCRIPTS = \
	filter_error_summary	    \
	filter_stderr               \
	filter_stderr_and_thread_no \
	run_openmp_test             \
	supported_libpthread

EXTRA_DIST = \
	$(noinst_SCRIPTS)                           \
	annotate_order_1.stderr.exp		    \
	annotate_order_1.vgtest			    \
	annotate_order_2.stderr.exp		    \
	annotate_order_2.vgtest			    \
	annotate_order_3.stderr.exp		    \
	annotate_order_3.vgtest			    \
	annotate_spinlock.stderr.exp		    \
	annotate_spinlock.vgtest		    \
	annotate_rwlock.stderr.exp		    \
	annotate_rwlock.vgtest			    \
	annotate_ignore_read.stderr.exp		    \
	annotate_ignore_read.vgtest		    \
	annotate_trace_memory.stderr.exp	    \
	annotate_trace_memory.vgtest		    \
	atomic_var.stderr.exp			    \
	atomic_var.vgtest			    \
	bar_bad.stderr.exp			    \
	bar_bad.vgtest				    \
	bar_trivial.stderr.exp			    \
	bar_trivial.stdout.exp			    \
	bar_trivial.vgtest			    \
	boost_thread.stderr.exp			    \
	boost_thread.vgtest			    \
	circular_buffer.stderr.exp		    \
	circular_buffer.vgtest			    \
	custom_alloc.stderr.exp			    \
	custom_alloc.vgtest			    \
	fp_race.stderr.exp                          \
	fp_race.vgtest                              \
	fp_race2.stderr.exp                         \
	fp_race2.vgtest                             \
	hg01_all_ok.stderr.exp                      \
	hg01_all_ok.vgtest                          \
	hg02_deadlock.stderr.exp                    \
	hg02_deadlock.vgtest                        \
	hg03_inherit.stderr.exp                     \
	hg03_inherit.vgtest                         \
	hg04_race.stderr.exp                        \
	hg04_race.vgtest                            \
	hg05_race2.stderr.exp                       \
	hg05_race2.stderr.exp-powerpc               \
	hg05_race2.vgtest                           \
	hg06_readshared.stderr.exp                  \
	hg06_readshared.vgtest                      \
	hold_lock_1.stderr.exp                      \
	hold_lock_1.vgtest                          \
	hold_lock_2.stderr.exp                      \
	hold_lock_2.vgtest                          \
	linuxthreads_det.stderr.exp                 \
	linuxthreads_det.stderr.exp-linuxthreads    \
	linuxthreads_det.stdout.exp                 \
	linuxthreads_det.stdout.exp-linuxthreads    \
	linuxthreads_det.vgtest                     \
	matinv.stderr.exp                           \
	matinv.stdout.exp                           \
	matinv.vgtest                               \
	memory_allocation.stderr.exp		    \
	memory_allocation.vgtest		    \
	monitor_example.stderr.exp		    \
	monitor_example.vgtest			    \
	new_delete.stderr.exp                       \
	new_delete.vgtest                           \
	omp_matinv.stderr.exp                       \
	omp_matinv.stdout.exp                       \
	omp_matinv.vgtest                           \
	omp_matinv_racy.stderr.exp                  \
	omp_matinv_racy.stdout.exp                  \
	omp_matinv_racy.vgtest                      \
	omp_prime_racy.stderr.exp                   \
	omp_prime_racy.vgtest                       \
	omp_printf.stderr.exp                       \
	omp_printf.vgtest                           \
	pth_barrier.stderr.exp                      \
	pth_barrier.vgtest                          \
	pth_barrier2.stderr.exp                     \
	pth_barrier2.vgtest                         \
	pth_barrier3.stderr.exp                     \
	pth_barrier3.vgtest                         \
	pth_barrier_race.stderr.exp                 \
	pth_barrier_race.vgtest                     \
	pth_barrier_reinit.stderr.exp               \
	pth_barrier_reinit.vgtest                   \
	pth_broadcast.stderr.exp                    \
	pth_broadcast.vgtest                        \
	pth_cancel_locked.stderr.exp		    \
	pth_cancel_locked.vgtest		    \
	pth_cond_race.stderr.exp                    \
	pth_cond_race.vgtest                        \
	pth_cond_race2.stderr.exp                   \
	pth_cond_race2.vgtest                       \
	pth_cond_race3.stderr.exp                   \
	pth_cond_race3.vgtest                       \
	pth_create_chain.stderr.exp                 \
	pth_create_chain.vgtest                     \
	pth_create_glibc_2_0.stderr.exp             \
	pth_create_glibc_2_0.vgtest                 \
	pth_detached.stderr.exp                     \
	pth_detached.stdout.exp                     \
	pth_detached.vgtest                         \
	pth_detached2.stderr.exp                    \
	pth_detached2.stdout.exp                    \
	pth_detached2.vgtest                        \
	pth_detached_sem.stderr.exp                 \
	pth_detached_sem.stdout.exp                 \
	pth_detached_sem.vgtest                     \
	pth_inconsistent_cond_wait.stderr.exp1      \
	pth_inconsistent_cond_wait.stderr.exp2      \
	pth_inconsistent_cond_wait.vgtest           \
	pth_mutex_reinit.stderr.exp		    \
	pth_mutex_reinit.vgtest			    \
	pth_process_shared_mutex.stderr.exp         \
	pth_process_shared_mutex.vgtest             \
	pth_spinlock.stderr.exp                     \
	pth_spinlock.vgtest                         \
	qt4_mutex.stderr.exp                        \
	qt4_mutex.vgtest                            \
	qt4_rwlock.stderr.exp                       \
	qt4_rwlock.vgtest                           \
	qt4_semaphore.stderr.exp                    \
	qt4_semaphore.vgtest                        \
	recursive_mutex.stderr.exp	            \
	recursive_mutex.stdout.exp	            \
	recursive_mutex.vgtest                      \
	rwlock_race.stderr.exp	                    \
	rwlock_race.stderr.exp2	                    \
	rwlock_race.vgtest                          \
	rwlock_test.stderr.exp	                    \
	rwlock_test.vgtest                          \
	sem_as_mutex.stderr.exp                     \
	sem_as_mutex.vgtest                         \
	sem_as_mutex2.stderr.exp                    \
	sem_as_mutex2.vgtest                        \
	sem_as_mutex3.stderr.exp                    \
	sem_as_mutex3.vgtest                        \
	sigalrm.stderr.exp                          \
	sigalrm.vgtest                              \
	tc01_simple_race.stderr.exp                 \
	tc01_simple_race.vgtest                     \
	tc02_simple_tls.stderr.exp                  \
	tc02_simple_tls.vgtest                      \
	tc03_re_excl.stderr.exp                     \
	tc03_re_excl.vgtest                         \
	tc04_free_lock.stderr.exp                   \
	tc04_free_lock.vgtest                       \
	tc05_simple_race.stderr.exp                 \
	tc05_simple_race.vgtest                     \
	tc06_two_races.stderr.exp                   \
	tc06_two_races.vgtest                       \
	tc07_hbl1.stderr.exp                        \
	tc07_hbl1.stdout.exp                        \
	tc07_hbl1.vgtest                            \
	tc08_hbl2.stderr.exp                        \
	tc08_hbl2.stdout.exp                        \
	tc08_hbl2.vgtest                            \
	tc09_bad_unlock.stderr.exp                  \
	tc09_bad_unlock.stderr.exp-glibc2.8         \
	tc09_bad_unlock.vgtest                      \
	tc10_rec_lock.stderr.exp                    \
	tc10_rec_lock.vgtest                        \
	tc11_XCHG.stderr.exp tc11_XCHG.stdout.exp   \
	tc11_XCHG.vgtest                            \
	tc12_rwl_trivial.stderr.exp                 \
	tc12_rwl_trivial.vgtest                     \
	tc13_laog1.stderr.exp                       \
	tc13_laog1.vgtest                           \
	tc15_laog_lockdel.stderr.exp                \
	tc15_laog_lockdel.vgtest                    \
	tc16_byterace.stderr.exp                    \
	tc16_byterace.vgtest                        \
	tc17_sembar.stderr.exp                      \
	tc17_sembar.vgtest                          \
	tc18_semabuse.stderr.exp                    \
	tc18_semabuse.vgtest                        \
	tc19_shadowmem.stderr.exp-32bit             \
	tc19_shadowmem.stderr.exp-64bit             \
	tc19_shadowmem.vgtest                       \
	tc20_verifywrap.stderr.exp-glibc2.3         \
	tc20_verifywrap.stderr.exp-glibc2.5         \
	tc20_verifywrap.stderr.exp-glibc2.5-ppc     \
	tc20_verifywrap.stderr.exp-glibc2.8         \
	tc20_verifywrap.vgtest                      \
	tc20_verifywrap2.stderr.exp-glibc2.3        \
	tc20_verifywrap2.stderr.exp-glibc2.3-b      \
	tc20_verifywrap2.stderr.exp-glibc2.5        \
	tc20_verifywrap2.stderr.exp-glibc2.5-ppc    \
	tc20_verifywrap2.stderr.exp-glibc2.8        \
	tc20_verifywrap2.vgtest                     \
	tc21_pthonce.stderr.exp                     \
	tc21_pthonce.stdout.exp                     \
	tc21_pthonce.vgtest                         \
	tc22_exit_w_lock.stderr.exp-32bit	    \
	tc22_exit_w_lock.stderr.exp-64bit           \
	tc22_exit_w_lock.vgtest                     \
	tc23_bogus_condwait.stderr.exp              \
	tc23_bogus_condwait.vgtest                  \
	tc24_nonzero_sem.stderr.exp                 \
	tc24_nonzero_sem.vgtest                     \
	thread_name.stderr.exp			    \
	thread_name.vgtest			    \
	trylock.stderr.exp                          \
	trylock.vgtest				    \
	unit_bitmap.stderr.exp                      \
	unit_bitmap.vgtest                          \
	unit_vc.stderr.exp                          \
	unit_vc.vgtest

LDADD = -lpthread
monitor_example_SOURCES = monitor_example.cpp
new_delete_SOURCES = new_delete.cpp
tsan_unittest_SOURCES = tsan_unittest.cpp
tsan_unittest_CXXFLAGS = $(AM_CXXFLAGS) \
			-DTHREAD_WRAPPERS='"tsan_thread_wrappers_pthread.h"'

unit_bitmap_CFLAGS = $(AM_CFLAGS) -O2 \
                              -DENABLE_DRD_CONSISTENCY_CHECKS \
                              --param inline-unit-growth=900

unit_bitmap_LDADD = # nothing, i.e. not -lpthread
unit_vc_CFLAGS = $(AM_CFLAGS) -DENABLE_DRD_CONSISTENCY_CHECKS
unit_vc_LDADD = # nothing, i.e. not -lpthread
#boost_thread_SOURCES = boost_thread.cpp
#boost_thread_CXXFLAGS = $(AM_CXXFLAGS) $(BOOST_CFLAGS)
#boost_thread_LDADD = $(BOOST_LIBS)
#omp_matinv_CFLAGS = $(AM_CFLAGS) -fopenmp
#omp_matinv_LDFLAGS = -fopenmp
#omp_matinv_LDADD = $(LDADD) -lm
#omp_prime_CFLAGS = $(AM_CFLAGS) -fopenmp
#omp_prime_LDFLAGS = -fopenmp
#omp_prime_LDADD = $(LDADD) -lm
#omp_printf_CFLAGS = $(AM_CFLAGS) -fopenmp
#omp_printf_LDFLAGS = -fopenmp
#omp_printf_LDADD = $(LDADD) -lm
matinv_LDADD = $(LDADD) -lm
qt4_mutex_SOURCES = qt4_mutex.cpp
qt4_mutex_CXXFLAGS = $(AM_CXXFLAGS) $(QTCORE_CFLAGS)
qt4_mutex_LDADD = $(LDADD) $(QTCORE_LIBS)
qt4_rwlock_SOURCES = qt4_rwlock.cpp
qt4_rwlock_CXXFLAGS = $(AM_CXXFLAGS) $(QTCORE_CFLAGS)
qt4_rwlock_LDADD = $(LDADD) $(QTCORE_LIBS)
qt4_semaphore_SOURCES = qt4_semaphore.cpp
qt4_semaphore_CXXFLAGS = $(AM_CXXFLAGS) $(QTCORE_CFLAGS)
qt4_semaphore_LDADD = $(LDADD) $(QTCORE_LIBS)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/Makefile.flags.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  drd/tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  drd/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
annotate_rwlock$(EXEEXT): $(annotate_rwlock_OBJECTS) $(annotate_rwlock_DEPENDENCIES) 
	@rm -f annotate_rwlock$(EXEEXT)
	$(LINK) $(annotate_rwlock_LDFLAGS) $(annotate_rwlock_OBJECTS) $(annotate_rwlock_LDADD) $(LIBS)
atomic_var$(EXEEXT): $(atomic_var_OBJECTS) $(atomic_var_DEPENDENCIES) 
	@rm -f atomic_var$(EXEEXT)
	$(LINK) $(atomic_var_LDFLAGS) $(atomic_var_OBJECTS) $(atomic_var_LDADD) $(LIBS)
boost_thread$(EXEEXT): $(boost_thread_OBJECTS) $(boost_thread_DEPENDENCIES) 
	@rm -f boost_thread$(EXEEXT)
	$(CXXLINK) $(boost_thread_LDFLAGS) $(boost_thread_OBJECTS) $(boost_thread_LDADD) $(LIBS)
circular_buffer$(EXEEXT): $(circular_buffer_OBJECTS) $(circular_buffer_DEPENDENCIES) 
	@rm -f circular_buffer$(EXEEXT)
	$(LINK) $(circular_buffer_LDFLAGS) $(circular_buffer_OBJECTS) $(circular_buffer_LDADD) $(LIBS)
fp_race$(EXEEXT): $(fp_race_OBJECTS) $(fp_race_DEPENDENCIES) 
	@rm -f fp_race$(EXEEXT)
	$(LINK) $(fp_race_LDFLAGS) $(fp_race_OBJECTS) $(fp_race_LDADD) $(LIBS)
hold_lock$(EXEEXT): $(hold_lock_OBJECTS) $(hold_lock_DEPENDENCIES) 
	@rm -f hold_lock$(EXEEXT)
	$(LINK) $(hold_lock_LDFLAGS) $(hold_lock_OBJECTS) $(hold_lock_LDADD) $(LIBS)
linuxthreads_det$(EXEEXT): $(linuxthreads_det_OBJECTS) $(linuxthreads_det_DEPENDENCIES) 
	@rm -f linuxthreads_det$(EXEEXT)
	$(LINK) $(linuxthreads_det_LDFLAGS) $(linuxthreads_det_OBJECTS) $(linuxthreads_det_LDADD) $(LIBS)
matinv$(EXEEXT): $(matinv_OBJECTS) $(matinv_DEPENDENCIES) 
	@rm -f matinv$(EXEEXT)
	$(LINK) $(matinv_LDFLAGS) $(matinv_OBJECTS) $(matinv_LDADD) $(LIBS)
memory_allocation$(EXEEXT): $(memory_allocation_OBJECTS) $(memory_allocation_DEPENDENCIES) 
	@rm -f memory_allocation$(EXEEXT)
	$(LINK) $(memory_allocation_LDFLAGS) $(memory_allocation_OBJECTS) $(memory_allocation_LDADD) $(LIBS)
monitor_example$(EXEEXT): $(monitor_example_OBJECTS) $(monitor_example_DEPENDENCIES) 
	@rm -f monitor_example$(EXEEXT)
	$(CXXLINK) $(monitor_example_LDFLAGS) $(monitor_example_OBJECTS) $(monitor_example_LDADD) $(LIBS)
new_delete$(EXEEXT): $(new_delete_OBJECTS) $(new_delete_DEPENDENCIES) 
	@rm -f new_delete$(EXEEXT)
	$(CXXLINK) $(new_delete_LDFLAGS) $(new_delete_OBJECTS) $(new_delete_LDADD) $(LIBS)
omp_matinv$(EXEEXT): $(omp_matinv_OBJECTS) $(omp_matinv_DEPENDENCIES) 
	@rm -f omp_matinv$(EXEEXT)
	$(LINK) $(omp_matinv_LDFLAGS) $(omp_matinv_OBJECTS) $(omp_matinv_LDADD) $(LIBS)
omp_prime$(EXEEXT): $(omp_prime_OBJECTS) $(omp_prime_DEPENDENCIES) 
	@rm -f omp_prime$(EXEEXT)
	$(LINK) $(omp_prime_LDFLAGS) $(omp_prime_OBJECTS) $(omp_prime_LDADD) $(LIBS)
omp_printf$(EXEEXT): $(omp_printf_OBJECTS) $(omp_printf_DEPENDENCIES) 
	@rm -f omp_printf$(EXEEXT)
	$(LINK) $(omp_printf_LDFLAGS) $(omp_printf_OBJECTS) $(omp_printf_LDADD) $(LIBS)
pth_barrier$(EXEEXT): $(pth_barrier_OBJECTS) $(pth_barrier_DEPENDENCIES) 
	@rm -f pth_barrier$(EXEEXT)
	$(LINK) $(pth_barrier_LDFLAGS) $(pth_barrier_OBJECTS) $(pth_barrier_LDADD) $(LIBS)
pth_barrier_race$(EXEEXT): $(pth_barrier_race_OBJECTS) $(pth_barrier_race_DEPENDENCIES) 
	@rm -f pth_barrier_race$(EXEEXT)
	$(LINK) $(pth_barrier_race_LDFLAGS) $(pth_barrier_race_OBJECTS) $(pth_barrier_race_LDADD) $(LIBS)
pth_barrier_reinit$(EXEEXT): $(pth_barrier_reinit_OBJECTS) $(pth_barrier_reinit_DEPENDENCIES) 
	@rm -f pth_barrier_reinit$(EXEEXT)
	$(LINK) $(pth_barrier_reinit_LDFLAGS) $(pth_barrier_reinit_OBJECTS) $(pth_barrier_reinit_LDADD) $(LIBS)
pth_broadcast$(EXEEXT): $(pth_broadcast_OBJECTS) $(pth_broadcast_DEPENDENCIES) 
	@rm -f pth_broadcast$(EXEEXT)
	$(LINK) $(pth_broadcast_LDFLAGS) $(pth_broadcast_OBJECTS) $(pth_broadcast_LDADD) $(LIBS)
pth_cancel_locked$(EXEEXT): $(pth_cancel_locked_OBJECTS) $(pth_cancel_locked_DEPENDENCIES) 
	@rm -f pth_cancel_locked$(EXEEXT)
	$(LINK) $(pth_cancel_locked_LDFLAGS) $(pth_cancel_locked_OBJECTS) $(pth_cancel_locked_LDADD) $(LIBS)
pth_cond_race$(EXEEXT): $(pth_cond_race_OBJECTS) $(pth_cond_race_DEPENDENCIES) 
	@rm -f pth_cond_race$(EXEEXT)
	$(LINK) $(pth_cond_race_LDFLAGS) $(pth_cond_race_OBJECTS) $(pth_cond_race_LDADD) $(LIBS)
pth_create_chain$(EXEEXT): $(pth_create_chain_OBJECTS) $(pth_create_chain_DEPENDENCIES) 
	@rm -f pth_create_chain$(EXEEXT)
	$(LINK) $(pth_create_chain_LDFLAGS) $(pth_create_chain_OBJECTS) $(pth_create_chain_LDADD) $(LIBS)
pth_create_glibc_2_0$(EXEEXT): $(pth_create_glibc_2_0_OBJECTS) $(pth_create_glibc_2_0_DEPENDENCIES) 
	@rm -f pth_create_glibc_2_0$(EXEEXT)
	$(LINK) $(pth_create_glibc_2_0_LDFLAGS) $(pth_create_glibc_2_0_OBJECTS) $(pth_create_glibc_2_0_LDADD) $(LIBS)
pth_detached$(EXEEXT): $(pth_detached_OBJECTS) $(pth_detached_DEPENDENCIES) 
	@rm -f pth_detached$(EXEEXT)
	$(LINK) $(pth_detached_LDFLAGS) $(pth_detached_OBJECTS) $(pth_detached_LDADD) $(LIBS)
pth_detached_sem$(EXEEXT): $(pth_detached_sem_OBJECTS) $(pth_detached_sem_DEPENDENCIES) 
	@rm -f pth_detached_sem$(EXEEXT)
	$(LINK) $(pth_detached_sem_LDFLAGS) $(pth_detached_sem_OBJECTS) $(pth_detached_sem_LDADD) $(LIBS)
pth_inconsistent_cond_wait$(EXEEXT): $(pth_inconsistent_cond_wait_OBJECTS) $(pth_inconsistent_cond_wait_DEPENDENCIES) 
	@rm -f pth_inconsistent_cond_wait$(EXEEXT)
	$(LINK) $(pth_inconsistent_cond_wait_LDFLAGS) $(pth_inconsistent_cond_wait_OBJECTS) $(pth_inconsistent_cond_wait_LDADD) $(LIBS)
pth_mutex_reinit$(EXEEXT): $(pth_mutex_reinit_OBJECTS) $(pth_mutex_reinit_DEPENDENCIES) 
	@rm -f pth_mutex_reinit$(EXEEXT)
	$(LINK) $(pth_mutex_reinit_LDFLAGS) $(pth_mutex_reinit_OBJECTS) $(pth_mutex_reinit_LDADD) $(LIBS)
pth_process_shared_mutex$(EXEEXT): $(pth_process_shared_mutex_OBJECTS) $(pth_process_shared_mutex_DEPENDENCIES) 
	@rm -f pth_process_shared_mutex$(EXEEXT)
	$(LINK) $(pth_process_shared_mutex_LDFLAGS) $(pth_process_shared_mutex_OBJECTS) $(pth_process_shared_mutex_LDADD) $(LIBS)
pth_spinlock$(EXEEXT): $(pth_spinlock_OBJECTS) $(pth_spinlock_DEPENDENCIES) 
	@rm -f pth_spinlock$(EXEEXT)
	$(LINK) $(pth_spinlock_LDFLAGS) $(pth_spinlock_OBJECTS) $(pth_spinlock_LDADD) $(LIBS)
qt4_mutex$(EXEEXT): $(qt4_mutex_OBJECTS) $(qt4_mutex_DEPENDENCIES) 
	@rm -f qt4_mutex$(EXEEXT)
	$(CXXLINK) $(qt4_mutex_LDFLAGS) $(qt4_mutex_OBJECTS) $(qt4_mutex_LDADD) $(LIBS)
qt4_rwlock$(EXEEXT): $(qt4_rwlock_OBJECTS) $(qt4_rwlock_DEPENDENCIES) 
	@rm -f qt4_rwlock$(EXEEXT)
	$(CXXLINK) $(qt4_rwlock_LDFLAGS) $(qt4_rwlock_OBJECTS) $(qt4_rwlock_LDADD) $(LIBS)
qt4_semaphore$(EXEEXT): $(qt4_semaphore_OBJECTS) $(qt4_semaphore_DEPENDENCIES) 
	@rm -f qt4_semaphore$(EXEEXT)
	$(CXXLINK) $(qt4_semaphore_LDFLAGS) $(qt4_semaphore_OBJECTS) $(qt4_semaphore_LDADD) $(LIBS)
recursive_mutex$(EXEEXT): $(recursive_mutex_OBJECTS) $(recursive_mutex_DEPENDENCIES) 
	@rm -f recursive_mutex$(EXEEXT)
	$(LINK) $(recursive_mutex_LDFLAGS) $(recursive_mutex_OBJECTS) $(recursive_mutex_LDADD) $(LIBS)
rwlock_race$(EXEEXT): $(rwlock_race_OBJECTS) $(rwlock_race_DEPENDENCIES) 
	@rm -f rwlock_race$(EXEEXT)
	$(LINK) $(rwlock_race_LDFLAGS) $(rwlock_race_OBJECTS) $(rwlock_race_LDADD) $(LIBS)
rwlock_test$(EXEEXT): $(rwlock_test_OBJECTS) $(rwlock_test_DEPENDENCIES) 
	@rm -f rwlock_test$(EXEEXT)
	$(LINK) $(rwlock_test_LDFLAGS) $(rwlock_test_OBJECTS) $(rwlock_test_LDADD) $(LIBS)
sem_as_mutex$(EXEEXT): $(sem_as_mutex_OBJECTS) $(sem_as_mutex_DEPENDENCIES) 
	@rm -f sem_as_mutex$(EXEEXT)
	$(LINK) $(sem_as_mutex_LDFLAGS) $(sem_as_mutex_OBJECTS) $(sem_as_mutex_LDADD) $(LIBS)
sigalrm$(EXEEXT): $(sigalrm_OBJECTS) $(sigalrm_DEPENDENCIES) 
	@rm -f sigalrm$(EXEEXT)
	$(LINK) $(sigalrm_LDFLAGS) $(sigalrm_OBJECTS) $(sigalrm_LDADD) $(LIBS)
thread_name$(EXEEXT): $(thread_name_OBJECTS) $(thread_name_DEPENDENCIES) 
	@rm -f thread_name$(EXEEXT)
	$(LINK) $(thread_name_LDFLAGS) $(thread_name_OBJECTS) $(thread_name_LDADD) $(LIBS)
trylock$(EXEEXT): $(trylock_OBJECTS) $(trylock_DEPENDENCIES) 
	@rm -f trylock$(EXEEXT)
	$(LINK) $(trylock_LDFLAGS) $(trylock_OBJECTS) $(trylock_LDADD) $(LIBS)
tsan_unittest$(EXEEXT): $(tsan_unittest_OBJECTS) $(tsan_unittest_DEPENDENCIES) 
	@rm -f tsan_unittest$(EXEEXT)
	$(CXXLINK) $(tsan_unittest_LDFLAGS) $(tsan_unittest_OBJECTS) $(tsan_unittest_LDADD) $(LIBS)
unit_bitmap$(EXEEXT): $(unit_bitmap_OBJECTS) $(unit_bitmap_DEPENDENCIES) 
	@rm -f unit_bitmap$(EXEEXT)
	$(LINK) $(unit_bitmap_LDFLAGS) $(unit_bitmap_OBJECTS) $(unit_bitmap_LDADD) $(LIBS)
unit_vc$(EXEEXT): $(unit_vc_OBJECTS) $(unit_vc_DEPENDENCIES) 
	@rm -f unit_vc$(EXEEXT)
	$(LINK) $(unit_vc_LDFLAGS) $(unit_vc_OBJECTS) $(unit_vc_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/annotate_rwlock.Po
include ./$(DEPDIR)/atomic_var.Po
include ./$(DEPDIR)/boost_thread-boost_thread.Po
include ./$(DEPDIR)/circular_buffer.Po
include ./$(DEPDIR)/fp_race.Po
include ./$(DEPDIR)/hold_lock.Po
include ./$(DEPDIR)/linuxthreads_det.Po
include ./$(DEPDIR)/matinv.Po
include ./$(DEPDIR)/memory_allocation.Po
include ./$(DEPDIR)/monitor_example.Po
include ./$(DEPDIR)/new_delete.Po
include ./$(DEPDIR)/omp_matinv-omp_matinv.Po
include ./$(DEPDIR)/omp_prime-omp_prime.Po
include ./$(DEPDIR)/omp_printf-omp_printf.Po
include ./$(DEPDIR)/pth_barrier.Po
include ./$(DEPDIR)/pth_barrier_race.Po
include ./$(DEPDIR)/pth_barrier_reinit.Po
include ./$(DEPDIR)/pth_broadcast.Po
include ./$(DEPDIR)/pth_cancel_locked.Po
include ./$(DEPDIR)/pth_cond_race.Po
include ./$(DEPDIR)/pth_create_chain.Po
include ./$(DEPDIR)/pth_create_glibc_2_0.Po
include ./$(DEPDIR)/pth_detached.Po
include ./$(DEPDIR)/pth_detached_sem.Po
include ./$(DEPDIR)/pth_inconsistent_cond_wait.Po
include ./$(DEPDIR)/pth_mutex_reinit.Po
include ./$(DEPDIR)/pth_process_shared_mutex.Po
include ./$(DEPDIR)/pth_spinlock.Po
include ./$(DEPDIR)/qt4_mutex-qt4_mutex.Po
include ./$(DEPDIR)/qt4_rwlock-qt4_rwlock.Po
include ./$(DEPDIR)/qt4_semaphore-qt4_semaphore.Po
include ./$(DEPDIR)/recursive_mutex.Po
include ./$(DEPDIR)/rwlock_race.Po
include ./$(DEPDIR)/rwlock_test.Po
include ./$(DEPDIR)/sem_as_mutex.Po
include ./$(DEPDIR)/sigalrm.Po
include ./$(DEPDIR)/thread_name.Po
include ./$(DEPDIR)/trylock.Po
include ./$(DEPDIR)/tsan_unittest-tsan_unittest.Po
include ./$(DEPDIR)/unit_bitmap-unit_bitmap.Po
include ./$(DEPDIR)/unit_vc-unit_vc.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

omp_matinv-omp_matinv.o: omp_matinv.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_matinv_CFLAGS) $(CFLAGS) -MT omp_matinv-omp_matinv.o -MD -MP -MF "$(DEPDIR)/omp_matinv-omp_matinv.Tpo" -c -o omp_matinv-omp_matinv.o `test -f 'omp_matinv.c' || echo '$(srcdir)/'`omp_matinv.c; \
	then mv -f "$(DEPDIR)/omp_matinv-omp_matinv.Tpo" "$(DEPDIR)/omp_matinv-omp_matinv.Po"; else rm -f "$(DEPDIR)/omp_matinv-omp_matinv.Tpo"; exit 1; fi
#	source='omp_matinv.c' object='omp_matinv-omp_matinv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_matinv_CFLAGS) $(CFLAGS) -c -o omp_matinv-omp_matinv.o `test -f 'omp_matinv.c' || echo '$(srcdir)/'`omp_matinv.c

omp_matinv-omp_matinv.obj: omp_matinv.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_matinv_CFLAGS) $(CFLAGS) -MT omp_matinv-omp_matinv.obj -MD -MP -MF "$(DEPDIR)/omp_matinv-omp_matinv.Tpo" -c -o omp_matinv-omp_matinv.obj `if test -f 'omp_matinv.c'; then $(CYGPATH_W) 'omp_matinv.c'; else $(CYGPATH_W) '$(srcdir)/omp_matinv.c'; fi`; \
	then mv -f "$(DEPDIR)/omp_matinv-omp_matinv.Tpo" "$(DEPDIR)/omp_matinv-omp_matinv.Po"; else rm -f "$(DEPDIR)/omp_matinv-omp_matinv.Tpo"; exit 1; fi
#	source='omp_matinv.c' object='omp_matinv-omp_matinv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_matinv_CFLAGS) $(CFLAGS) -c -o omp_matinv-omp_matinv.obj `if test -f 'omp_matinv.c'; then $(CYGPATH_W) 'omp_matinv.c'; else $(CYGPATH_W) '$(srcdir)/omp_matinv.c'; fi`

omp_prime-omp_prime.o: omp_prime.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_prime_CFLAGS) $(CFLAGS) -MT omp_prime-omp_prime.o -MD -MP -MF "$(DEPDIR)/omp_prime-omp_prime.Tpo" -c -o omp_prime-omp_prime.o `test -f 'omp_prime.c' || echo '$(srcdir)/'`omp_prime.c; \
	then mv -f "$(DEPDIR)/omp_prime-omp_prime.Tpo" "$(DEPDIR)/omp_prime-omp_prime.Po"; else rm -f "$(DEPDIR)/omp_prime-omp_prime.Tpo"; exit 1; fi
#	source='omp_prime.c' object='omp_prime-omp_prime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_prime_CFLAGS) $(CFLAGS) -c -o omp_prime-omp_prime.o `test -f 'omp_prime.c' || echo '$(srcdir)/'`omp_prime.c

omp_prime-omp_prime.obj: omp_prime.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_prime_CFLAGS) $(CFLAGS) -MT omp_prime-omp_prime.obj -MD -MP -MF "$(DEPDIR)/omp_prime-omp_prime.Tpo" -c -o omp_prime-omp_prime.obj `if test -f 'omp_prime.c'; then $(CYGPATH_W) 'omp_prime.c'; else $(CYGPATH_W) '$(srcdir)/omp_prime.c'; fi`; \
	then mv -f "$(DEPDIR)/omp_prime-omp_prime.Tpo" "$(DEPDIR)/omp_prime-omp_prime.Po"; else rm -f "$(DEPDIR)/omp_prime-omp_prime.Tpo"; exit 1; fi
#	source='omp_prime.c' object='omp_prime-omp_prime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_prime_CFLAGS) $(CFLAGS) -c -o omp_prime-omp_prime.obj `if test -f 'omp_prime.c'; then $(CYGPATH_W) 'omp_prime.c'; else $(CYGPATH_W) '$(srcdir)/omp_prime.c'; fi`

omp_printf-omp_printf.o: omp_printf.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_printf_CFLAGS) $(CFLAGS) -MT omp_printf-omp_printf.o -MD -MP -MF "$(DEPDIR)/omp_printf-omp_printf.Tpo" -c -o omp_printf-omp_printf.o `test -f 'omp_printf.c' || echo '$(srcdir)/'`omp_printf.c; \
	then mv -f "$(DEPDIR)/omp_printf-omp_printf.Tpo" "$(DEPDIR)/omp_printf-omp_printf.Po"; else rm -f "$(DEPDIR)/omp_printf-omp_printf.Tpo"; exit 1; fi
#	source='omp_printf.c' object='omp_printf-omp_printf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_printf_CFLAGS) $(CFLAGS) -c -o omp_printf-omp_printf.o `test -f 'omp_printf.c' || echo '$(srcdir)/'`omp_printf.c

omp_printf-omp_printf.obj: omp_printf.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_printf_CFLAGS) $(CFLAGS) -MT omp_printf-omp_printf.obj -MD -MP -MF "$(DEPDIR)/omp_printf-omp_printf.Tpo" -c -o omp_printf-omp_printf.obj `if test -f 'omp_printf.c'; then $(CYGPATH_W) 'omp_printf.c'; else $(CYGPATH_W) '$(srcdir)/omp_printf.c'; fi`; \
	then mv -f "$(DEPDIR)/omp_printf-omp_printf.Tpo" "$(DEPDIR)/omp_printf-omp_printf.Po"; else rm -f "$(DEPDIR)/omp_printf-omp_printf.Tpo"; exit 1; fi
#	source='omp_printf.c' object='omp_printf-omp_printf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omp_printf_CFLAGS) $(CFLAGS) -c -o omp_printf-omp_printf.obj `if test -f 'omp_printf.c'; then $(CYGPATH_W) 'omp_printf.c'; else $(CYGPATH_W) '$(srcdir)/omp_printf.c'; fi`

unit_bitmap-unit_bitmap.o: unit_bitmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unit_bitmap_CFLAGS) $(CFLAGS) -MT unit_bitmap-unit_bitmap.o -MD -MP -MF "$(DEPDIR)/unit_bitmap-unit_bitmap.Tpo" -c -o unit_bitmap-unit_bitmap.o `test -f 'unit_bitmap.c' || echo '$(srcdir)/'`unit_bitmap.c; \
	then mv -f "$(DEPDIR)/unit_bitmap-unit_bitmap.Tpo" "$(DEPDIR)/unit_bitmap-unit_bitmap.Po"; else rm -f "$(DEPDIR)/unit_bitmap-unit_bitmap.Tpo"; exit 1; fi
#	source='unit_bitmap.c' object='unit_bitmap-unit_bitmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unit_bitmap_CFLAGS) $(CFLAGS) -c -o unit_bitmap-unit_bitmap.o `test -f 'unit_bitmap.c' || echo '$(srcdir)/'`unit_bitmap.c

unit_bitmap-unit_bitmap.obj: unit_bitmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unit_bitmap_CFLAGS) $(CFLAGS) -MT unit_bitmap-unit_bitmap.obj -MD -MP -MF "$(DEPDIR)/unit_bitmap-unit_bitmap.Tpo" -c -o unit_bitmap-unit_bitmap.obj `if test -f 'unit_bitmap.c'; then $(CYGPATH_W) 'unit_bitmap.c'; else $(CYGPATH_W) '$(srcdir)/unit_bitmap.c'; fi`; \
	then mv -f "$(DEPDIR)/unit_bitmap-unit_bitmap.Tpo" "$(DEPDIR)/unit_bitmap-unit_bitmap.Po"; else rm -f "$(DEPDIR)/unit_bitmap-unit_bitmap.Tpo"; exit 1; fi
#	source='unit_bitmap.c' object='unit_bitmap-unit_bitmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unit_bitmap_CFLAGS) $(CFLAGS) -c -o unit_bitmap-unit_bitmap.obj `if test -f 'unit_bitmap.c'; then $(CYGPATH_W) 'unit_bitmap.c'; else $(CYGPATH_W) '$(srcdir)/unit_bitmap.c'; fi`

unit_vc-unit_vc.o: unit_vc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unit_vc_CFLAGS) $(CFLAGS) -MT unit_vc-unit_vc.o -MD -MP -MF "$(DEPDIR)/unit_vc-unit_vc.Tpo" -c -o unit_vc-unit_vc.o `test -f 'unit_vc.c' || echo '$(srcdir)/'`unit_vc.c; \
	then mv -f "$(DEPDIR)/unit_vc-unit_vc.Tpo" "$(DEPDIR)/unit_vc-unit_vc.Po"; else rm -f "$(DEPDIR)/unit_vc-unit_vc.Tpo"; exit 1; fi
#	source='unit_vc.c' object='unit_vc-unit_vc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unit_vc_CFLAGS) $(CFLAGS) -c -o unit_vc-unit_vc.o `test -f 'unit_vc.c' || echo '$(srcdir)/'`unit_vc.c

unit_vc-unit_vc.obj: unit_vc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unit_vc_CFLAGS) $(CFLAGS) -MT unit_vc-unit_vc.obj -MD -MP -MF "$(DEPDIR)/unit_vc-unit_vc.Tpo" -c -o unit_vc-unit_vc.obj `if test -f 'unit_vc.c'; then $(CYGPATH_W) 'unit_vc.c'; else $(CYGPATH_W) '$(srcdir)/unit_vc.c'; fi`; \
	then mv -f "$(DEPDIR)/unit_vc-unit_vc.Tpo" "$(DEPDIR)/unit_vc-unit_vc.Po"; else rm -f "$(DEPDIR)/unit_vc-unit_vc.Tpo"; exit 1; fi
#	source='unit_vc.c' object='unit_vc-unit_vc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unit_vc_CFLAGS) $(CFLAGS) -c -o unit_vc-unit_vc.obj `if test -f 'unit_vc.c'; then $(CYGPATH_W) 'unit_vc.c'; else $(CYGPATH_W) '$(srcdir)/unit_vc.c'; fi`

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

boost_thread-boost_thread.o: boost_thread.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(boost_thread_CXXFLAGS) $(CXXFLAGS) -MT boost_thread-boost_thread.o -MD -MP -MF "$(DEPDIR)/boost_thread-boost_thread.Tpo" -c -o boost_thread-boost_thread.o `test -f 'boost_thread.cpp' || echo '$(srcdir)/'`boost_thread.cpp; \
	then mv -f "$(DEPDIR)/boost_thread-boost_thread.Tpo" "$(DEPDIR)/boost_thread-boost_thread.Po"; else rm -f "$(DEPDIR)/boost_thread-boost_thread.Tpo"; exit 1; fi
#	source='boost_thread.cpp' object='boost_thread-boost_thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(boost_thread_CXXFLAGS) $(CXXFLAGS) -c -o boost_thread-boost_thread.o `test -f 'boost_thread.cpp' || echo '$(srcdir)/'`boost_thread.cpp

boost_thread-boost_thread.obj: boost_thread.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(boost_thread_CXXFLAGS) $(CXXFLAGS) -MT boost_thread-boost_thread.obj -MD -MP -MF "$(DEPDIR)/boost_thread-boost_thread.Tpo" -c -o boost_thread-boost_thread.obj `if test -f 'boost_thread.cpp'; then $(CYGPATH_W) 'boost_thread.cpp'; else $(CYGPATH_W) '$(srcdir)/boost_thread.cpp'; fi`; \
	then mv -f "$(DEPDIR)/boost_thread-boost_thread.Tpo" "$(DEPDIR)/boost_thread-boost_thread.Po"; else rm -f "$(DEPDIR)/boost_thread-boost_thread.Tpo"; exit 1; fi
#	source='boost_thread.cpp' object='boost_thread-boost_thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(boost_thread_CXXFLAGS) $(CXXFLAGS) -c -o boost_thread-boost_thread.obj `if test -f 'boost_thread.cpp'; then $(CYGPATH_W) 'boost_thread.cpp'; else $(CYGPATH_W) '$(srcdir)/boost_thread.cpp'; fi`

qt4_mutex-qt4_mutex.o: qt4_mutex.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_mutex_CXXFLAGS) $(CXXFLAGS) -MT qt4_mutex-qt4_mutex.o -MD -MP -MF "$(DEPDIR)/qt4_mutex-qt4_mutex.Tpo" -c -o qt4_mutex-qt4_mutex.o `test -f 'qt4_mutex.cpp' || echo '$(srcdir)/'`qt4_mutex.cpp; \
	then mv -f "$(DEPDIR)/qt4_mutex-qt4_mutex.Tpo" "$(DEPDIR)/qt4_mutex-qt4_mutex.Po"; else rm -f "$(DEPDIR)/qt4_mutex-qt4_mutex.Tpo"; exit 1; fi
#	source='qt4_mutex.cpp' object='qt4_mutex-qt4_mutex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_mutex_CXXFLAGS) $(CXXFLAGS) -c -o qt4_mutex-qt4_mutex.o `test -f 'qt4_mutex.cpp' || echo '$(srcdir)/'`qt4_mutex.cpp

qt4_mutex-qt4_mutex.obj: qt4_mutex.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_mutex_CXXFLAGS) $(CXXFLAGS) -MT qt4_mutex-qt4_mutex.obj -MD -MP -MF "$(DEPDIR)/qt4_mutex-qt4_mutex.Tpo" -c -o qt4_mutex-qt4_mutex.obj `if test -f 'qt4_mutex.cpp'; then $(CYGPATH_W) 'qt4_mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/qt4_mutex.cpp'; fi`; \
	then mv -f "$(DEPDIR)/qt4_mutex-qt4_mutex.Tpo" "$(DEPDIR)/qt4_mutex-qt4_mutex.Po"; else rm -f "$(DEPDIR)/qt4_mutex-qt4_mutex.Tpo"; exit 1; fi
#	source='qt4_mutex.cpp' object='qt4_mutex-qt4_mutex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_mutex_CXXFLAGS) $(CXXFLAGS) -c -o qt4_mutex-qt4_mutex.obj `if test -f 'qt4_mutex.cpp'; then $(CYGPATH_W) 'qt4_mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/qt4_mutex.cpp'; fi`

qt4_rwlock-qt4_rwlock.o: qt4_rwlock.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_rwlock_CXXFLAGS) $(CXXFLAGS) -MT qt4_rwlock-qt4_rwlock.o -MD -MP -MF "$(DEPDIR)/qt4_rwlock-qt4_rwlock.Tpo" -c -o qt4_rwlock-qt4_rwlock.o `test -f 'qt4_rwlock.cpp' || echo '$(srcdir)/'`qt4_rwlock.cpp; \
	then mv -f "$(DEPDIR)/qt4_rwlock-qt4_rwlock.Tpo" "$(DEPDIR)/qt4_rwlock-qt4_rwlock.Po"; else rm -f "$(DEPDIR)/qt4_rwlock-qt4_rwlock.Tpo"; exit 1; fi
#	source='qt4_rwlock.cpp' object='qt4_rwlock-qt4_rwlock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_rwlock_CXXFLAGS) $(CXXFLAGS) -c -o qt4_rwlock-qt4_rwlock.o `test -f 'qt4_rwlock.cpp' || echo '$(srcdir)/'`qt4_rwlock.cpp

qt4_rwlock-qt4_rwlock.obj: qt4_rwlock.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_rwlock_CXXFLAGS) $(CXXFLAGS) -MT qt4_rwlock-qt4_rwlock.obj -MD -MP -MF "$(DEPDIR)/qt4_rwlock-qt4_rwlock.Tpo" -c -o qt4_rwlock-qt4_rwlock.obj `if test -f 'qt4_rwlock.cpp'; then $(CYGPATH_W) 'qt4_rwlock.cpp'; else $(CYGPATH_W) '$(srcdir)/qt4_rwlock.cpp'; fi`; \
	then mv -f "$(DEPDIR)/qt4_rwlock-qt4_rwlock.Tpo" "$(DEPDIR)/qt4_rwlock-qt4_rwlock.Po"; else rm -f "$(DEPDIR)/qt4_rwlock-qt4_rwlock.Tpo"; exit 1; fi
#	source='qt4_rwlock.cpp' object='qt4_rwlock-qt4_rwlock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_rwlock_CXXFLAGS) $(CXXFLAGS) -c -o qt4_rwlock-qt4_rwlock.obj `if test -f 'qt4_rwlock.cpp'; then $(CYGPATH_W) 'qt4_rwlock.cpp'; else $(CYGPATH_W) '$(srcdir)/qt4_rwlock.cpp'; fi`

qt4_semaphore-qt4_semaphore.o: qt4_semaphore.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_semaphore_CXXFLAGS) $(CXXFLAGS) -MT qt4_semaphore-qt4_semaphore.o -MD -MP -MF "$(DEPDIR)/qt4_semaphore-qt4_semaphore.Tpo" -c -o qt4_semaphore-qt4_semaphore.o `test -f 'qt4_semaphore.cpp' || echo '$(srcdir)/'`qt4_semaphore.cpp; \
	then mv -f "$(DEPDIR)/qt4_semaphore-qt4_semaphore.Tpo" "$(DEPDIR)/qt4_semaphore-qt4_semaphore.Po"; else rm -f "$(DEPDIR)/qt4_semaphore-qt4_semaphore.Tpo"; exit 1; fi
#	source='qt4_semaphore.cpp' object='qt4_semaphore-qt4_semaphore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_semaphore_CXXFLAGS) $(CXXFLAGS) -c -o qt4_semaphore-qt4_semaphore.o `test -f 'qt4_semaphore.cpp' || echo '$(srcdir)/'`qt4_semaphore.cpp

qt4_semaphore-qt4_semaphore.obj: qt4_semaphore.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_semaphore_CXXFLAGS) $(CXXFLAGS) -MT qt4_semaphore-qt4_semaphore.obj -MD -MP -MF "$(DEPDIR)/qt4_semaphore-qt4_semaphore.Tpo" -c -o qt4_semaphore-qt4_semaphore.obj `if test -f 'qt4_semaphore.cpp'; then $(CYGPATH_W) 'qt4_semaphore.cpp'; else $(CYGPATH_W) '$(srcdir)/qt4_semaphore.cpp'; fi`; \
	then mv -f "$(DEPDIR)/qt4_semaphore-qt4_semaphore.Tpo" "$(DEPDIR)/qt4_semaphore-qt4_semaphore.Po"; else rm -f "$(DEPDIR)/qt4_semaphore-qt4_semaphore.Tpo"; exit 1; fi
#	source='qt4_semaphore.cpp' object='qt4_semaphore-qt4_semaphore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qt4_semaphore_CXXFLAGS) $(CXXFLAGS) -c -o qt4_semaphore-qt4_semaphore.obj `if test -f 'qt4_semaphore.cpp'; then $(CYGPATH_W) 'qt4_semaphore.cpp'; else $(CYGPATH_W) '$(srcdir)/qt4_semaphore.cpp'; fi`

tsan_unittest-tsan_unittest.o: tsan_unittest.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsan_unittest_CXXFLAGS) $(CXXFLAGS) -MT tsan_unittest-tsan_unittest.o -MD -MP -MF "$(DEPDIR)/tsan_unittest-tsan_unittest.Tpo" -c -o tsan_unittest-tsan_unittest.o `test -f 'tsan_unittest.cpp' || echo '$(srcdir)/'`tsan_unittest.cpp; \
	then mv -f "$(DEPDIR)/tsan_unittest-tsan_unittest.Tpo" "$(DEPDIR)/tsan_unittest-tsan_unittest.Po"; else rm -f "$(DEPDIR)/tsan_unittest-tsan_unittest.Tpo"; exit 1; fi
#	source='tsan_unittest.cpp' object='tsan_unittest-tsan_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsan_unittest_CXXFLAGS) $(CXXFLAGS) -c -o tsan_unittest-tsan_unittest.o `test -f 'tsan_unittest.cpp' || echo '$(srcdir)/'`tsan_unittest.cpp

tsan_unittest-tsan_unittest.obj: tsan_unittest.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsan_unittest_CXXFLAGS) $(CXXFLAGS) -MT tsan_unittest-tsan_unittest.obj -MD -MP -MF "$(DEPDIR)/tsan_unittest-tsan_unittest.Tpo" -c -o tsan_unittest-tsan_unittest.obj `if test -f 'tsan_unittest.cpp'; then $(CYGPATH_W) 'tsan_unittest.cpp'; else $(CYGPATH_W) '$(srcdir)/tsan_unittest.cpp'; fi`; \
	then mv -f "$(DEPDIR)/tsan_unittest-tsan_unittest.Tpo" "$(DEPDIR)/tsan_unittest-tsan_unittest.Po"; else rm -f "$(DEPDIR)/tsan_unittest-tsan_unittest.Tpo"; exit 1; fi
#	source='tsan_unittest.cpp' object='tsan_unittest-tsan_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsan_unittest_CXXFLAGS) $(CXXFLAGS) -c -o tsan_unittest-tsan_unittest.obj `if test -f 'tsan_unittest.cpp'; then $(CYGPATH_W) 'tsan_unittest.cpp'; else $(CYGPATH_W) '$(srcdir)/tsan_unittest.cpp'; fi`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(SCRIPTS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-local:
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	check-local clean clean-checkPROGRAMS clean-generic \
	clean-local clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am


# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
#check-local:
#	for f in $(check_PROGRAMS) ; do \
#	    if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
#	        echo "dsymutil $$f"; \
#	        dsymutil $$f; \
#	    fi \
#	done

#clean-local:
#	for f in $(check_PROGRAMS) ; do \
#	    rm -rf $$f.dSYM; \
#	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
