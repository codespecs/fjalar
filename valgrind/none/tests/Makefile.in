# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
ARCH_CORE_AM_CCASFLAGS = @ARCH_CORE_AM_CCASFLAGS@
ARCH_CORE_AM_CFLAGS = @ARCH_CORE_AM_CFLAGS@
ARCH_TOOL_AM_CFLAGS = @ARCH_TOOL_AM_CFLAGS@
AS = @AS@
ASFLAGS = @ASFLAGS@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CPP = @CPP@
CXX = @CXX@
DEFAULT_SUPP = @DEFAULT_SUPP@
DEPDIR = @DEPDIR@
GDB = @GDB@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KICKSTART_BASE = @KICKSTART_BASE@
LN_S = @LN_S@
MAINT = @MAINT@
PACKAGE = @PACKAGE@
PERL = @PERL@
PREFERRED_STACK_BOUNDARY = @PREFERRED_STACK_BOUNDARY@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
VEX_DIR = @VEX_DIR@
VG_ARCH = @VG_ARCH@
VG_ARCH_ALL = @VG_ARCH_ALL@
VG_OS = @VG_OS@
VG_OS_ALL = @VG_OS_ALL@
VG_PLATFORM = @VG_PLATFORM@
VG_PLATFORM_ALL = @VG_PLATFORM_ALL@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
SUBDIRS = ${VG_ARCH}     .
DIST_SUBDIRS = ${VG_ARCH_ALL} .

noinst_SCRIPTS = filter_none_discards filter_stderr

EXTRA_DIST = $(noinst_SCRIPTS) \
	args.stderr.exp args.stdout.exp args.vgtest \
	async-sigs.stderr.exp async-sigs.stdout.exp async-sigs.vgtest \
	bitfield1.stderr.exp bitfield1.vgtest \
	blockfault.vgtest blockfault.stderr.exp blockfault.stdout.exp \
	closeall.stderr.exp closeall.vgtest \
	cmdline1.stderr.exp cmdline1.stdout.exp cmdline1.vgtest \
	cmdline2.stderr.exp cmdline2.stdout.exp cmdline2.vgtest \
	cmdline3.stderr.exp cmdline3.vgtest \
	cmdline4.stderr.exp cmdline4.vgtest \
	cmdline5.stderr.exp cmdline5.vgtest \
	cmdline6.stderr.exp cmdline6.vgtest \
	coolo_sigaction.stderr.exp \
	coolo_sigaction.stdout.exp coolo_sigaction.vgtest \
	coolo_strlen.stderr.exp coolo_strlen.vgtest \
	discard.stderr.exp discard.stdout.exp \
	discard.vgtest \
	exec-sigmask.vgtest exec-sigmask.stdout.exp \
	exec-sigmask.stdout.exp2 exec-sigmask.stderr.exp \
	execve.vgtest execve.stdout.exp execve.stderr.exp \
	faultstatus.vgtest faultstatus.stderr.exp \
	fcntl_setown.vgtest fcntl_setown.stdout.exp fcntl_setown.stderr.exp \
	floored.stderr.exp floored.stdout.exp \
	floored.vgtest \
	fork.stderr.exp fork.stdout.exp fork.vgtest \
	fucomip.stderr.exp fucomip.vgtest \
	gxx304.stderr.exp gxx304.vgtest \
	manythreads.stdout.exp manythreads.stderr.exp manythreads.vgtest \
	map_unaligned.stderr.exp map_unaligned.vgtest \
	map_unmap.stderr.exp map_unmap.stdout.exp map_unmap.vgtest \
	mq.stderr.exp mq.vgtest \
	mremap.stderr.exp mremap.stdout.exp mremap.vgtest \
	munmap_exe.stderr.exp munmap_exe.vgtest \
	pending.stdout.exp pending.stderr.exp pending.vgtest \
	pth_blockedsig.stderr.exp \
	pth_blockedsig.stdout.exp pth_blockedsig.vgtest \
	pth_stackalign.stderr.exp \
	pth_stackalign.stdout.exp pth_stackalign.vgtest \
	rcrl.stderr.exp rcrl.stdout.exp rcrl.vgtest \
	readline1.stderr.exp readline1.stdout.exp \
	readline1.vgtest \
	resolv.stderr.exp resolv.stdout.exp resolv.vgtest \
	rlimit_nofile.stderr.exp rlimit_nofile.stdout.exp rlimit_nofile.vgtest \
	selfrun.stderr.exp selfrun.stdout.exp selfrun.vgtest \
	sem.stderr.exp sem.stdout.exp sem.vgtest \
	semlimit.stderr.exp semlimit.stdout.exp semlimit.vgtest \
	susphello.stdout.exp susphello.stderr.exp susphello.vgtest \
	sha1_test.stderr.exp sha1_test.vgtest \
	shortpush.stderr.exp shortpush.vgtest \
	shorts.stderr.exp shorts.vgtest \
	sigstackgrowth.stdout.exp sigstackgrowth.stderr.exp sigstackgrowth.vgtest \
	smc1.stderr.exp smc1.stdout.exp smc1.vgtest \
	stackgrowth.stdout.exp stackgrowth.stderr.exp stackgrowth.vgtest \
	syscall-restart1.vgtest syscall-restart1.stdout.exp syscall-restart1.stderr.exp \
	syscall-restart2.vgtest syscall-restart2.stdout.exp syscall-restart2.stderr.exp \
	system.stderr.exp system.vgtest \
	thread-exits.stderr.exp thread-exits.stdout.exp thread-exits.vgtest \
	threaded-fork.stderr.exp threaded-fork.stdout.exp threaded-fork.vgtest \
	tls.stderr.exp tls.stdout.exp  \
	yield.stderr.exp yield.stdout.exp yield.vgtest


check_PROGRAMS = \
	args async-sigs bitfield1 blockfault closeall coolo_strlen \
	discard exec-sigmask execve faultstatus fcntl_setown floored fork \
	fucomip \
	manythreads \
	munmap_exe map_unaligned map_unmap mq mremap rcrl readline1 \
	resolv rlimit_nofile selfrun sem semlimit sha1_test \
	shortpush shorts \
	stackgrowth sigstackgrowth \
	smc1 susphello pending pth_blockedsig pth_stackalign \
	syscall-restart1 syscall-restart2 system \
	thread-exits threaded-fork \
	tls tls.so tls2.so \
	coolo_sigaction gxx304 yield


AM_CFLAGS = $(WERROR) -Winline -Wall -Wshadow -g
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/include -I$(top_builddir)/include
AM_CXXFLAGS = $(AM_CFLAGS)

# generic C ones
args_SOURCES = args.c
async_sigs_SOURCES = async-sigs.c
bitfield1_SOURCES = bitfield1.c
blockfault_SOURCES = blockfault.c
closeall_SOURCES = closeall.c
coolo_strlen_SOURCES = coolo_strlen.c
discard_SOURCES = discard.c
exec_sigmask_SOURCES = exec-sigmask.c
execve_SOURCES = execve.c
faultstatus_SOURCES = faultstatus.c
fcntl_setown_SOURCES = fcntl_setown.c
fork_SOURCES = fork.c
floored_SOURCES = floored.c
floored_LDADD = -lm
fucomip_SOURCES = fucomip.c
pending_SOURCES = pending.c
manythreads_SOURCES = manythreads.c
manythreads_LDADD = -lpthread
map_unaligned_SOURCES = map_unaligned.c
map_unmap_SOURCES = map_unmap.c
mq_SOURCES = mq.c
mq_LDADD = -lrt
mremap_SOURCES = mremap.c
munmap_exe_SOURCES = munmap_exe.c
pth_blockedsig_SOURCES = pth_blockedsig.c
pth_blockedsig_LDADD = -lpthread
pth_stackalign_SOURCES = pth_stackalign.c
pth_stackalign_LDADD = -lpthread
rcrl_SOURCES = rcrl.c
readline1_SOURCES = readline1.c
resolv_SOURCES = resolv.c
rlimit_nofile_SOURCES = rlimit_nofile.c
selfrun_SOURCES = selfrun.c
sem_SOURCES = sem.c
semlimit_SOURCES = semlimit.c
semlimit_LDADD = -lpthread
smc1_SOURCES = smc1.c
sha1_test_SOURCES = sha1_test.c
shortpush_SOURCES = shortpush.c
shorts_SOURCES = shorts.c
sigstackgrowth_SOURCES = sigstackgrowth.c
susphello_SOURCES = susphello.c
susphello_LDADD = -lpthread
stackgrowth_SOURCES = stackgrowth.c
syscall_restart1_SOURCES = syscall-restart1.c
syscall_restart2_SOURCES = syscall-restart2.c
system_SOURCES = system.c
thread_exits_SOURCES = thread-exits.c
thread_exits_LDADD = -lpthread
threaded_fork_SOURCES = threaded-fork.c
threaded_fork_LDADD = -lpthread
tls_SOURCES = tls.c tls2.c
tls_DEPENDENCIES = tls.so
tls_LDFLAGS = -Wl,-rpath,$(top_builddir)/none/tests
tls_LDADD = tls.so -lpthread
tls_so_SOURCES = tls_so.c
tls_so_LDADD = tls2.so
tls_so_DEPENDENCIES = tls2.so
tls_so_LDFLAGS = -Wl,-rpath,$(top_builddir)/none/tests -shared -fPIC
tls_so_CFLAGS = -fPIC
tls2_so_SOURCES = tls2_so.c
tls2_so_LDFLAGS = -shared
yield_SOURCES = yield.c
yield_CFLAGS = $(AM_CFLAGS) -D__$(VG_ARCH)__
yield_LDADD = -lpthread

# generic C++ ones
coolo_sigaction_SOURCES = coolo_sigaction.cpp
gxx304_SOURCES = gxx304.cpp
subdir = none/tests
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
check_PROGRAMS = args$(EXEEXT) async-sigs$(EXEEXT) bitfield1$(EXEEXT) \
	blockfault$(EXEEXT) closeall$(EXEEXT) coolo_strlen$(EXEEXT) \
	discard$(EXEEXT) exec-sigmask$(EXEEXT) execve$(EXEEXT) \
	faultstatus$(EXEEXT) fcntl_setown$(EXEEXT) floored$(EXEEXT) \
	fork$(EXEEXT) fucomip$(EXEEXT) manythreads$(EXEEXT) \
	munmap_exe$(EXEEXT) map_unaligned$(EXEEXT) map_unmap$(EXEEXT) \
	mq$(EXEEXT) mremap$(EXEEXT) rcrl$(EXEEXT) readline1$(EXEEXT) \
	resolv$(EXEEXT) rlimit_nofile$(EXEEXT) selfrun$(EXEEXT) \
	sem$(EXEEXT) semlimit$(EXEEXT) sha1_test$(EXEEXT) \
	shortpush$(EXEEXT) shorts$(EXEEXT) stackgrowth$(EXEEXT) \
	sigstackgrowth$(EXEEXT) smc1$(EXEEXT) susphello$(EXEEXT) \
	pending$(EXEEXT) pth_blockedsig$(EXEEXT) \
	pth_stackalign$(EXEEXT) syscall-restart1$(EXEEXT) \
	syscall-restart2$(EXEEXT) system$(EXEEXT) thread-exits$(EXEEXT) \
	threaded-fork$(EXEEXT) tls$(EXEEXT) tls.so$(EXEEXT) \
	tls2.so$(EXEEXT) coolo_sigaction$(EXEEXT) gxx304$(EXEEXT) \
	yield$(EXEEXT)
am_args_OBJECTS = args.$(OBJEXT)
args_OBJECTS = $(am_args_OBJECTS)
args_LDADD = $(LDADD)
args_DEPENDENCIES =
args_LDFLAGS =
am_async_sigs_OBJECTS = async-sigs.$(OBJEXT)
async_sigs_OBJECTS = $(am_async_sigs_OBJECTS)
async_sigs_LDADD = $(LDADD)
async_sigs_DEPENDENCIES =
async_sigs_LDFLAGS =
am_bitfield1_OBJECTS = bitfield1.$(OBJEXT)
bitfield1_OBJECTS = $(am_bitfield1_OBJECTS)
bitfield1_LDADD = $(LDADD)
bitfield1_DEPENDENCIES =
bitfield1_LDFLAGS =
am_blockfault_OBJECTS = blockfault.$(OBJEXT)
blockfault_OBJECTS = $(am_blockfault_OBJECTS)
blockfault_LDADD = $(LDADD)
blockfault_DEPENDENCIES =
blockfault_LDFLAGS =
am_closeall_OBJECTS = closeall.$(OBJEXT)
closeall_OBJECTS = $(am_closeall_OBJECTS)
closeall_LDADD = $(LDADD)
closeall_DEPENDENCIES =
closeall_LDFLAGS =
am_coolo_sigaction_OBJECTS = coolo_sigaction.$(OBJEXT)
coolo_sigaction_OBJECTS = $(am_coolo_sigaction_OBJECTS)
coolo_sigaction_LDADD = $(LDADD)
coolo_sigaction_DEPENDENCIES =
coolo_sigaction_LDFLAGS =
am_coolo_strlen_OBJECTS = coolo_strlen.$(OBJEXT)
coolo_strlen_OBJECTS = $(am_coolo_strlen_OBJECTS)
coolo_strlen_LDADD = $(LDADD)
coolo_strlen_DEPENDENCIES =
coolo_strlen_LDFLAGS =
am_discard_OBJECTS = discard.$(OBJEXT)
discard_OBJECTS = $(am_discard_OBJECTS)
discard_LDADD = $(LDADD)
discard_DEPENDENCIES =
discard_LDFLAGS =
am_exec_sigmask_OBJECTS = exec-sigmask.$(OBJEXT)
exec_sigmask_OBJECTS = $(am_exec_sigmask_OBJECTS)
exec_sigmask_LDADD = $(LDADD)
exec_sigmask_DEPENDENCIES =
exec_sigmask_LDFLAGS =
am_execve_OBJECTS = execve.$(OBJEXT)
execve_OBJECTS = $(am_execve_OBJECTS)
execve_LDADD = $(LDADD)
execve_DEPENDENCIES =
execve_LDFLAGS =
am_faultstatus_OBJECTS = faultstatus.$(OBJEXT)
faultstatus_OBJECTS = $(am_faultstatus_OBJECTS)
faultstatus_LDADD = $(LDADD)
faultstatus_DEPENDENCIES =
faultstatus_LDFLAGS =
am_fcntl_setown_OBJECTS = fcntl_setown.$(OBJEXT)
fcntl_setown_OBJECTS = $(am_fcntl_setown_OBJECTS)
fcntl_setown_LDADD = $(LDADD)
fcntl_setown_DEPENDENCIES =
fcntl_setown_LDFLAGS =
am_floored_OBJECTS = floored.$(OBJEXT)
floored_OBJECTS = $(am_floored_OBJECTS)
floored_DEPENDENCIES =
floored_LDFLAGS =
am_fork_OBJECTS = fork.$(OBJEXT)
fork_OBJECTS = $(am_fork_OBJECTS)
fork_LDADD = $(LDADD)
fork_DEPENDENCIES =
fork_LDFLAGS =
am_fucomip_OBJECTS = fucomip.$(OBJEXT)
fucomip_OBJECTS = $(am_fucomip_OBJECTS)
fucomip_LDADD = $(LDADD)
fucomip_DEPENDENCIES =
fucomip_LDFLAGS =
am_gxx304_OBJECTS = gxx304.$(OBJEXT)
gxx304_OBJECTS = $(am_gxx304_OBJECTS)
gxx304_LDADD = $(LDADD)
gxx304_DEPENDENCIES =
gxx304_LDFLAGS =
am_manythreads_OBJECTS = manythreads.$(OBJEXT)
manythreads_OBJECTS = $(am_manythreads_OBJECTS)
manythreads_DEPENDENCIES =
manythreads_LDFLAGS =
am_map_unaligned_OBJECTS = map_unaligned.$(OBJEXT)
map_unaligned_OBJECTS = $(am_map_unaligned_OBJECTS)
map_unaligned_LDADD = $(LDADD)
map_unaligned_DEPENDENCIES =
map_unaligned_LDFLAGS =
am_map_unmap_OBJECTS = map_unmap.$(OBJEXT)
map_unmap_OBJECTS = $(am_map_unmap_OBJECTS)
map_unmap_LDADD = $(LDADD)
map_unmap_DEPENDENCIES =
map_unmap_LDFLAGS =
am_mq_OBJECTS = mq.$(OBJEXT)
mq_OBJECTS = $(am_mq_OBJECTS)
mq_DEPENDENCIES =
mq_LDFLAGS =
am_mremap_OBJECTS = mremap.$(OBJEXT)
mremap_OBJECTS = $(am_mremap_OBJECTS)
mremap_LDADD = $(LDADD)
mremap_DEPENDENCIES =
mremap_LDFLAGS =
am_munmap_exe_OBJECTS = munmap_exe.$(OBJEXT)
munmap_exe_OBJECTS = $(am_munmap_exe_OBJECTS)
munmap_exe_LDADD = $(LDADD)
munmap_exe_DEPENDENCIES =
munmap_exe_LDFLAGS =
am_pending_OBJECTS = pending.$(OBJEXT)
pending_OBJECTS = $(am_pending_OBJECTS)
pending_LDADD = $(LDADD)
pending_DEPENDENCIES =
pending_LDFLAGS =
am_pth_blockedsig_OBJECTS = pth_blockedsig.$(OBJEXT)
pth_blockedsig_OBJECTS = $(am_pth_blockedsig_OBJECTS)
pth_blockedsig_DEPENDENCIES =
pth_blockedsig_LDFLAGS =
am_pth_stackalign_OBJECTS = pth_stackalign.$(OBJEXT)
pth_stackalign_OBJECTS = $(am_pth_stackalign_OBJECTS)
pth_stackalign_DEPENDENCIES =
pth_stackalign_LDFLAGS =
am_rcrl_OBJECTS = rcrl.$(OBJEXT)
rcrl_OBJECTS = $(am_rcrl_OBJECTS)
rcrl_LDADD = $(LDADD)
rcrl_DEPENDENCIES =
rcrl_LDFLAGS =
am_readline1_OBJECTS = readline1.$(OBJEXT)
readline1_OBJECTS = $(am_readline1_OBJECTS)
readline1_LDADD = $(LDADD)
readline1_DEPENDENCIES =
readline1_LDFLAGS =
am_resolv_OBJECTS = resolv.$(OBJEXT)
resolv_OBJECTS = $(am_resolv_OBJECTS)
resolv_LDADD = $(LDADD)
resolv_DEPENDENCIES =
resolv_LDFLAGS =
am_rlimit_nofile_OBJECTS = rlimit_nofile.$(OBJEXT)
rlimit_nofile_OBJECTS = $(am_rlimit_nofile_OBJECTS)
rlimit_nofile_LDADD = $(LDADD)
rlimit_nofile_DEPENDENCIES =
rlimit_nofile_LDFLAGS =
am_selfrun_OBJECTS = selfrun.$(OBJEXT)
selfrun_OBJECTS = $(am_selfrun_OBJECTS)
selfrun_LDADD = $(LDADD)
selfrun_DEPENDENCIES =
selfrun_LDFLAGS =
am_sem_OBJECTS = sem.$(OBJEXT)
sem_OBJECTS = $(am_sem_OBJECTS)
sem_LDADD = $(LDADD)
sem_DEPENDENCIES =
sem_LDFLAGS =
am_semlimit_OBJECTS = semlimit.$(OBJEXT)
semlimit_OBJECTS = $(am_semlimit_OBJECTS)
semlimit_DEPENDENCIES =
semlimit_LDFLAGS =
am_sha1_test_OBJECTS = sha1_test.$(OBJEXT)
sha1_test_OBJECTS = $(am_sha1_test_OBJECTS)
sha1_test_LDADD = $(LDADD)
sha1_test_DEPENDENCIES =
sha1_test_LDFLAGS =
am_shortpush_OBJECTS = shortpush.$(OBJEXT)
shortpush_OBJECTS = $(am_shortpush_OBJECTS)
shortpush_LDADD = $(LDADD)
shortpush_DEPENDENCIES =
shortpush_LDFLAGS =
am_shorts_OBJECTS = shorts.$(OBJEXT)
shorts_OBJECTS = $(am_shorts_OBJECTS)
shorts_LDADD = $(LDADD)
shorts_DEPENDENCIES =
shorts_LDFLAGS =
am_sigstackgrowth_OBJECTS = sigstackgrowth.$(OBJEXT)
sigstackgrowth_OBJECTS = $(am_sigstackgrowth_OBJECTS)
sigstackgrowth_LDADD = $(LDADD)
sigstackgrowth_DEPENDENCIES =
sigstackgrowth_LDFLAGS =
am_smc1_OBJECTS = smc1.$(OBJEXT)
smc1_OBJECTS = $(am_smc1_OBJECTS)
smc1_LDADD = $(LDADD)
smc1_DEPENDENCIES =
smc1_LDFLAGS =
am_stackgrowth_OBJECTS = stackgrowth.$(OBJEXT)
stackgrowth_OBJECTS = $(am_stackgrowth_OBJECTS)
stackgrowth_LDADD = $(LDADD)
stackgrowth_DEPENDENCIES =
stackgrowth_LDFLAGS =
am_susphello_OBJECTS = susphello.$(OBJEXT)
susphello_OBJECTS = $(am_susphello_OBJECTS)
susphello_DEPENDENCIES =
susphello_LDFLAGS =
am_syscall_restart1_OBJECTS = syscall-restart1.$(OBJEXT)
syscall_restart1_OBJECTS = $(am_syscall_restart1_OBJECTS)
syscall_restart1_LDADD = $(LDADD)
syscall_restart1_DEPENDENCIES =
syscall_restart1_LDFLAGS =
am_syscall_restart2_OBJECTS = syscall-restart2.$(OBJEXT)
syscall_restart2_OBJECTS = $(am_syscall_restart2_OBJECTS)
syscall_restart2_LDADD = $(LDADD)
syscall_restart2_DEPENDENCIES =
syscall_restart2_LDFLAGS =
am_system_OBJECTS = system.$(OBJEXT)
system_OBJECTS = $(am_system_OBJECTS)
system_LDADD = $(LDADD)
system_DEPENDENCIES =
system_LDFLAGS =
am_thread_exits_OBJECTS = thread-exits.$(OBJEXT)
thread_exits_OBJECTS = $(am_thread_exits_OBJECTS)
thread_exits_DEPENDENCIES =
thread_exits_LDFLAGS =
am_threaded_fork_OBJECTS = threaded-fork.$(OBJEXT)
threaded_fork_OBJECTS = $(am_threaded_fork_OBJECTS)
threaded_fork_DEPENDENCIES =
threaded_fork_LDFLAGS =
am_tls_OBJECTS = tls.$(OBJEXT) tls2.$(OBJEXT)
tls_OBJECTS = $(am_tls_OBJECTS)
am_tls_so_OBJECTS = tls_so-tls_so.$(OBJEXT)
tls_so_OBJECTS = $(am_tls_so_OBJECTS)
am_tls2_so_OBJECTS = tls2_so.$(OBJEXT)
tls2_so_OBJECTS = $(am_tls2_so_OBJECTS)
tls2_so_LDADD = $(LDADD)
tls2_so_DEPENDENCIES =
am_yield_OBJECTS = yield-yield.$(OBJEXT)
yield_OBJECTS = $(am_yield_OBJECTS)
yield_DEPENDENCIES =
yield_LDFLAGS =
SCRIPTS = $(noinst_SCRIPTS)


DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/args.Po ./$(DEPDIR)/async-sigs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/bitfield1.Po ./$(DEPDIR)/blockfault.Po \
@AMDEP_TRUE@	./$(DEPDIR)/closeall.Po \
@AMDEP_TRUE@	./$(DEPDIR)/coolo_sigaction.Po \
@AMDEP_TRUE@	./$(DEPDIR)/coolo_strlen.Po ./$(DEPDIR)/discard.Po \
@AMDEP_TRUE@	./$(DEPDIR)/exec-sigmask.Po ./$(DEPDIR)/execve.Po \
@AMDEP_TRUE@	./$(DEPDIR)/faultstatus.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fcntl_setown.Po ./$(DEPDIR)/floored.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fork.Po ./$(DEPDIR)/fucomip.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gxx304.Po ./$(DEPDIR)/manythreads.Po \
@AMDEP_TRUE@	./$(DEPDIR)/map_unaligned.Po \
@AMDEP_TRUE@	./$(DEPDIR)/map_unmap.Po ./$(DEPDIR)/mq.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mremap.Po ./$(DEPDIR)/munmap_exe.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pending.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pth_blockedsig.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pth_stackalign.Po ./$(DEPDIR)/rcrl.Po \
@AMDEP_TRUE@	./$(DEPDIR)/readline1.Po ./$(DEPDIR)/resolv.Po \
@AMDEP_TRUE@	./$(DEPDIR)/rlimit_nofile.Po ./$(DEPDIR)/selfrun.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sem.Po ./$(DEPDIR)/semlimit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sha1_test.Po ./$(DEPDIR)/shortpush.Po \
@AMDEP_TRUE@	./$(DEPDIR)/shorts.Po ./$(DEPDIR)/sigstackgrowth.Po \
@AMDEP_TRUE@	./$(DEPDIR)/smc1.Po ./$(DEPDIR)/stackgrowth.Po \
@AMDEP_TRUE@	./$(DEPDIR)/susphello.Po \
@AMDEP_TRUE@	./$(DEPDIR)/syscall-restart1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/syscall-restart2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/system.Po ./$(DEPDIR)/thread-exits.Po \
@AMDEP_TRUE@	./$(DEPDIR)/threaded-fork.Po ./$(DEPDIR)/tls.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tls2.Po ./$(DEPDIR)/tls2_so.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tls_so-tls_so.Po \
@AMDEP_TRUE@	./$(DEPDIR)/yield-yield.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(args_SOURCES) $(async_sigs_SOURCES) \
	$(bitfield1_SOURCES) $(blockfault_SOURCES) $(closeall_SOURCES) \
	$(coolo_sigaction_SOURCES) $(coolo_strlen_SOURCES) \
	$(discard_SOURCES) $(exec_sigmask_SOURCES) $(execve_SOURCES) \
	$(faultstatus_SOURCES) $(fcntl_setown_SOURCES) \
	$(floored_SOURCES) $(fork_SOURCES) $(fucomip_SOURCES) \
	$(gxx304_SOURCES) $(manythreads_SOURCES) \
	$(map_unaligned_SOURCES) $(map_unmap_SOURCES) $(mq_SOURCES) \
	$(mremap_SOURCES) $(munmap_exe_SOURCES) $(pending_SOURCES) \
	$(pth_blockedsig_SOURCES) $(pth_stackalign_SOURCES) \
	$(rcrl_SOURCES) $(readline1_SOURCES) $(resolv_SOURCES) \
	$(rlimit_nofile_SOURCES) $(selfrun_SOURCES) $(sem_SOURCES) \
	$(semlimit_SOURCES) $(sha1_test_SOURCES) $(shortpush_SOURCES) \
	$(shorts_SOURCES) $(sigstackgrowth_SOURCES) $(smc1_SOURCES) \
	$(stackgrowth_SOURCES) $(susphello_SOURCES) \
	$(syscall_restart1_SOURCES) $(syscall_restart2_SOURCES) \
	$(system_SOURCES) $(thread_exits_SOURCES) \
	$(threaded_fork_SOURCES) $(tls_SOURCES) $(tls_so_SOURCES) \
	$(tls2_so_SOURCES) $(yield_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(args_SOURCES) $(async_sigs_SOURCES) $(bitfield1_SOURCES) $(blockfault_SOURCES) $(closeall_SOURCES) $(coolo_sigaction_SOURCES) $(coolo_strlen_SOURCES) $(discard_SOURCES) $(exec_sigmask_SOURCES) $(execve_SOURCES) $(faultstatus_SOURCES) $(fcntl_setown_SOURCES) $(floored_SOURCES) $(fork_SOURCES) $(fucomip_SOURCES) $(gxx304_SOURCES) $(manythreads_SOURCES) $(map_unaligned_SOURCES) $(map_unmap_SOURCES) $(mq_SOURCES) $(mremap_SOURCES) $(munmap_exe_SOURCES) $(pending_SOURCES) $(pth_blockedsig_SOURCES) $(pth_stackalign_SOURCES) $(rcrl_SOURCES) $(readline1_SOURCES) $(resolv_SOURCES) $(rlimit_nofile_SOURCES) $(selfrun_SOURCES) $(sem_SOURCES) $(semlimit_SOURCES) $(sha1_test_SOURCES) $(shortpush_SOURCES) $(shorts_SOURCES) $(sigstackgrowth_SOURCES) $(smc1_SOURCES) $(stackgrowth_SOURCES) $(susphello_SOURCES) $(syscall_restart1_SOURCES) $(syscall_restart2_SOURCES) $(system_SOURCES) $(thread_exits_SOURCES) $(threaded_fork_SOURCES) $(tls_SOURCES) $(tls_so_SOURCES) $(tls2_so_SOURCES) $(yield_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  none/tests/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
args$(EXEEXT): $(args_OBJECTS) $(args_DEPENDENCIES) 
	@rm -f args$(EXEEXT)
	$(LINK) $(args_LDFLAGS) $(args_OBJECTS) $(args_LDADD) $(LIBS)
async-sigs$(EXEEXT): $(async_sigs_OBJECTS) $(async_sigs_DEPENDENCIES) 
	@rm -f async-sigs$(EXEEXT)
	$(LINK) $(async_sigs_LDFLAGS) $(async_sigs_OBJECTS) $(async_sigs_LDADD) $(LIBS)
bitfield1$(EXEEXT): $(bitfield1_OBJECTS) $(bitfield1_DEPENDENCIES) 
	@rm -f bitfield1$(EXEEXT)
	$(LINK) $(bitfield1_LDFLAGS) $(bitfield1_OBJECTS) $(bitfield1_LDADD) $(LIBS)
blockfault$(EXEEXT): $(blockfault_OBJECTS) $(blockfault_DEPENDENCIES) 
	@rm -f blockfault$(EXEEXT)
	$(LINK) $(blockfault_LDFLAGS) $(blockfault_OBJECTS) $(blockfault_LDADD) $(LIBS)
closeall$(EXEEXT): $(closeall_OBJECTS) $(closeall_DEPENDENCIES) 
	@rm -f closeall$(EXEEXT)
	$(LINK) $(closeall_LDFLAGS) $(closeall_OBJECTS) $(closeall_LDADD) $(LIBS)
coolo_sigaction$(EXEEXT): $(coolo_sigaction_OBJECTS) $(coolo_sigaction_DEPENDENCIES) 
	@rm -f coolo_sigaction$(EXEEXT)
	$(CXXLINK) $(coolo_sigaction_LDFLAGS) $(coolo_sigaction_OBJECTS) $(coolo_sigaction_LDADD) $(LIBS)
coolo_strlen$(EXEEXT): $(coolo_strlen_OBJECTS) $(coolo_strlen_DEPENDENCIES) 
	@rm -f coolo_strlen$(EXEEXT)
	$(LINK) $(coolo_strlen_LDFLAGS) $(coolo_strlen_OBJECTS) $(coolo_strlen_LDADD) $(LIBS)
discard$(EXEEXT): $(discard_OBJECTS) $(discard_DEPENDENCIES) 
	@rm -f discard$(EXEEXT)
	$(LINK) $(discard_LDFLAGS) $(discard_OBJECTS) $(discard_LDADD) $(LIBS)
exec-sigmask$(EXEEXT): $(exec_sigmask_OBJECTS) $(exec_sigmask_DEPENDENCIES) 
	@rm -f exec-sigmask$(EXEEXT)
	$(LINK) $(exec_sigmask_LDFLAGS) $(exec_sigmask_OBJECTS) $(exec_sigmask_LDADD) $(LIBS)
execve$(EXEEXT): $(execve_OBJECTS) $(execve_DEPENDENCIES) 
	@rm -f execve$(EXEEXT)
	$(LINK) $(execve_LDFLAGS) $(execve_OBJECTS) $(execve_LDADD) $(LIBS)
faultstatus$(EXEEXT): $(faultstatus_OBJECTS) $(faultstatus_DEPENDENCIES) 
	@rm -f faultstatus$(EXEEXT)
	$(LINK) $(faultstatus_LDFLAGS) $(faultstatus_OBJECTS) $(faultstatus_LDADD) $(LIBS)
fcntl_setown$(EXEEXT): $(fcntl_setown_OBJECTS) $(fcntl_setown_DEPENDENCIES) 
	@rm -f fcntl_setown$(EXEEXT)
	$(LINK) $(fcntl_setown_LDFLAGS) $(fcntl_setown_OBJECTS) $(fcntl_setown_LDADD) $(LIBS)
floored$(EXEEXT): $(floored_OBJECTS) $(floored_DEPENDENCIES) 
	@rm -f floored$(EXEEXT)
	$(LINK) $(floored_LDFLAGS) $(floored_OBJECTS) $(floored_LDADD) $(LIBS)
fork$(EXEEXT): $(fork_OBJECTS) $(fork_DEPENDENCIES) 
	@rm -f fork$(EXEEXT)
	$(LINK) $(fork_LDFLAGS) $(fork_OBJECTS) $(fork_LDADD) $(LIBS)
fucomip$(EXEEXT): $(fucomip_OBJECTS) $(fucomip_DEPENDENCIES) 
	@rm -f fucomip$(EXEEXT)
	$(LINK) $(fucomip_LDFLAGS) $(fucomip_OBJECTS) $(fucomip_LDADD) $(LIBS)
gxx304$(EXEEXT): $(gxx304_OBJECTS) $(gxx304_DEPENDENCIES) 
	@rm -f gxx304$(EXEEXT)
	$(CXXLINK) $(gxx304_LDFLAGS) $(gxx304_OBJECTS) $(gxx304_LDADD) $(LIBS)
manythreads$(EXEEXT): $(manythreads_OBJECTS) $(manythreads_DEPENDENCIES) 
	@rm -f manythreads$(EXEEXT)
	$(LINK) $(manythreads_LDFLAGS) $(manythreads_OBJECTS) $(manythreads_LDADD) $(LIBS)
map_unaligned$(EXEEXT): $(map_unaligned_OBJECTS) $(map_unaligned_DEPENDENCIES) 
	@rm -f map_unaligned$(EXEEXT)
	$(LINK) $(map_unaligned_LDFLAGS) $(map_unaligned_OBJECTS) $(map_unaligned_LDADD) $(LIBS)
map_unmap$(EXEEXT): $(map_unmap_OBJECTS) $(map_unmap_DEPENDENCIES) 
	@rm -f map_unmap$(EXEEXT)
	$(LINK) $(map_unmap_LDFLAGS) $(map_unmap_OBJECTS) $(map_unmap_LDADD) $(LIBS)
mq$(EXEEXT): $(mq_OBJECTS) $(mq_DEPENDENCIES) 
	@rm -f mq$(EXEEXT)
	$(LINK) $(mq_LDFLAGS) $(mq_OBJECTS) $(mq_LDADD) $(LIBS)
mremap$(EXEEXT): $(mremap_OBJECTS) $(mremap_DEPENDENCIES) 
	@rm -f mremap$(EXEEXT)
	$(LINK) $(mremap_LDFLAGS) $(mremap_OBJECTS) $(mremap_LDADD) $(LIBS)
munmap_exe$(EXEEXT): $(munmap_exe_OBJECTS) $(munmap_exe_DEPENDENCIES) 
	@rm -f munmap_exe$(EXEEXT)
	$(LINK) $(munmap_exe_LDFLAGS) $(munmap_exe_OBJECTS) $(munmap_exe_LDADD) $(LIBS)
pending$(EXEEXT): $(pending_OBJECTS) $(pending_DEPENDENCIES) 
	@rm -f pending$(EXEEXT)
	$(LINK) $(pending_LDFLAGS) $(pending_OBJECTS) $(pending_LDADD) $(LIBS)
pth_blockedsig$(EXEEXT): $(pth_blockedsig_OBJECTS) $(pth_blockedsig_DEPENDENCIES) 
	@rm -f pth_blockedsig$(EXEEXT)
	$(LINK) $(pth_blockedsig_LDFLAGS) $(pth_blockedsig_OBJECTS) $(pth_blockedsig_LDADD) $(LIBS)
pth_stackalign$(EXEEXT): $(pth_stackalign_OBJECTS) $(pth_stackalign_DEPENDENCIES) 
	@rm -f pth_stackalign$(EXEEXT)
	$(LINK) $(pth_stackalign_LDFLAGS) $(pth_stackalign_OBJECTS) $(pth_stackalign_LDADD) $(LIBS)
rcrl$(EXEEXT): $(rcrl_OBJECTS) $(rcrl_DEPENDENCIES) 
	@rm -f rcrl$(EXEEXT)
	$(LINK) $(rcrl_LDFLAGS) $(rcrl_OBJECTS) $(rcrl_LDADD) $(LIBS)
readline1$(EXEEXT): $(readline1_OBJECTS) $(readline1_DEPENDENCIES) 
	@rm -f readline1$(EXEEXT)
	$(LINK) $(readline1_LDFLAGS) $(readline1_OBJECTS) $(readline1_LDADD) $(LIBS)
resolv$(EXEEXT): $(resolv_OBJECTS) $(resolv_DEPENDENCIES) 
	@rm -f resolv$(EXEEXT)
	$(LINK) $(resolv_LDFLAGS) $(resolv_OBJECTS) $(resolv_LDADD) $(LIBS)
rlimit_nofile$(EXEEXT): $(rlimit_nofile_OBJECTS) $(rlimit_nofile_DEPENDENCIES) 
	@rm -f rlimit_nofile$(EXEEXT)
	$(LINK) $(rlimit_nofile_LDFLAGS) $(rlimit_nofile_OBJECTS) $(rlimit_nofile_LDADD) $(LIBS)
selfrun$(EXEEXT): $(selfrun_OBJECTS) $(selfrun_DEPENDENCIES) 
	@rm -f selfrun$(EXEEXT)
	$(LINK) $(selfrun_LDFLAGS) $(selfrun_OBJECTS) $(selfrun_LDADD) $(LIBS)
sem$(EXEEXT): $(sem_OBJECTS) $(sem_DEPENDENCIES) 
	@rm -f sem$(EXEEXT)
	$(LINK) $(sem_LDFLAGS) $(sem_OBJECTS) $(sem_LDADD) $(LIBS)
semlimit$(EXEEXT): $(semlimit_OBJECTS) $(semlimit_DEPENDENCIES) 
	@rm -f semlimit$(EXEEXT)
	$(LINK) $(semlimit_LDFLAGS) $(semlimit_OBJECTS) $(semlimit_LDADD) $(LIBS)
sha1_test$(EXEEXT): $(sha1_test_OBJECTS) $(sha1_test_DEPENDENCIES) 
	@rm -f sha1_test$(EXEEXT)
	$(LINK) $(sha1_test_LDFLAGS) $(sha1_test_OBJECTS) $(sha1_test_LDADD) $(LIBS)
shortpush$(EXEEXT): $(shortpush_OBJECTS) $(shortpush_DEPENDENCIES) 
	@rm -f shortpush$(EXEEXT)
	$(LINK) $(shortpush_LDFLAGS) $(shortpush_OBJECTS) $(shortpush_LDADD) $(LIBS)
shorts$(EXEEXT): $(shorts_OBJECTS) $(shorts_DEPENDENCIES) 
	@rm -f shorts$(EXEEXT)
	$(LINK) $(shorts_LDFLAGS) $(shorts_OBJECTS) $(shorts_LDADD) $(LIBS)
sigstackgrowth$(EXEEXT): $(sigstackgrowth_OBJECTS) $(sigstackgrowth_DEPENDENCIES) 
	@rm -f sigstackgrowth$(EXEEXT)
	$(LINK) $(sigstackgrowth_LDFLAGS) $(sigstackgrowth_OBJECTS) $(sigstackgrowth_LDADD) $(LIBS)
smc1$(EXEEXT): $(smc1_OBJECTS) $(smc1_DEPENDENCIES) 
	@rm -f smc1$(EXEEXT)
	$(LINK) $(smc1_LDFLAGS) $(smc1_OBJECTS) $(smc1_LDADD) $(LIBS)
stackgrowth$(EXEEXT): $(stackgrowth_OBJECTS) $(stackgrowth_DEPENDENCIES) 
	@rm -f stackgrowth$(EXEEXT)
	$(LINK) $(stackgrowth_LDFLAGS) $(stackgrowth_OBJECTS) $(stackgrowth_LDADD) $(LIBS)
susphello$(EXEEXT): $(susphello_OBJECTS) $(susphello_DEPENDENCIES) 
	@rm -f susphello$(EXEEXT)
	$(LINK) $(susphello_LDFLAGS) $(susphello_OBJECTS) $(susphello_LDADD) $(LIBS)
syscall-restart1$(EXEEXT): $(syscall_restart1_OBJECTS) $(syscall_restart1_DEPENDENCIES) 
	@rm -f syscall-restart1$(EXEEXT)
	$(LINK) $(syscall_restart1_LDFLAGS) $(syscall_restart1_OBJECTS) $(syscall_restart1_LDADD) $(LIBS)
syscall-restart2$(EXEEXT): $(syscall_restart2_OBJECTS) $(syscall_restart2_DEPENDENCIES) 
	@rm -f syscall-restart2$(EXEEXT)
	$(LINK) $(syscall_restart2_LDFLAGS) $(syscall_restart2_OBJECTS) $(syscall_restart2_LDADD) $(LIBS)
system$(EXEEXT): $(system_OBJECTS) $(system_DEPENDENCIES) 
	@rm -f system$(EXEEXT)
	$(LINK) $(system_LDFLAGS) $(system_OBJECTS) $(system_LDADD) $(LIBS)
thread-exits$(EXEEXT): $(thread_exits_OBJECTS) $(thread_exits_DEPENDENCIES) 
	@rm -f thread-exits$(EXEEXT)
	$(LINK) $(thread_exits_LDFLAGS) $(thread_exits_OBJECTS) $(thread_exits_LDADD) $(LIBS)
threaded-fork$(EXEEXT): $(threaded_fork_OBJECTS) $(threaded_fork_DEPENDENCIES) 
	@rm -f threaded-fork$(EXEEXT)
	$(LINK) $(threaded_fork_LDFLAGS) $(threaded_fork_OBJECTS) $(threaded_fork_LDADD) $(LIBS)
tls$(EXEEXT): $(tls_OBJECTS) $(tls_DEPENDENCIES) 
	@rm -f tls$(EXEEXT)
	$(LINK) $(tls_LDFLAGS) $(tls_OBJECTS) $(tls_LDADD) $(LIBS)
tls_so-tls_so.$(OBJEXT): tls_so.c
tls.so$(EXEEXT): $(tls_so_OBJECTS) $(tls_so_DEPENDENCIES) 
	@rm -f tls.so$(EXEEXT)
	$(LINK) $(tls_so_LDFLAGS) $(tls_so_OBJECTS) $(tls_so_LDADD) $(LIBS)
tls2.so$(EXEEXT): $(tls2_so_OBJECTS) $(tls2_so_DEPENDENCIES) 
	@rm -f tls2.so$(EXEEXT)
	$(LINK) $(tls2_so_LDFLAGS) $(tls2_so_OBJECTS) $(tls2_so_LDADD) $(LIBS)
yield-yield.$(OBJEXT): yield.c
yield$(EXEEXT): $(yield_OBJECTS) $(yield_DEPENDENCIES) 
	@rm -f yield$(EXEEXT)
	$(LINK) $(yield_LDFLAGS) $(yield_OBJECTS) $(yield_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/args.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/async-sigs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bitfield1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blockfault.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/closeall.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coolo_sigaction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coolo_strlen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/discard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exec-sigmask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/execve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/faultstatus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fcntl_setown.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/floored.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fucomip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gxx304.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/manythreads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/map_unaligned.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/map_unmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mremap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/munmap_exe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pending.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pth_blockedsig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pth_stackalign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rcrl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readline1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resolv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rlimit_nofile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/selfrun.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/semlimit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sha1_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shortpush.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shorts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sigstackgrowth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smc1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stackgrowth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/susphello.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/syscall-restart1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/syscall-restart2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/system.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread-exits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/threaded-fork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tls2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tls2_so.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tls_so-tls_so.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/yield-yield.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

tls_so-tls_so.o: tls_so.c
@AMDEP_TRUE@	source='tls_so.c' object='tls_so-tls_so.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tls_so-tls_so.Po' tmpdepfile='$(DEPDIR)/tls_so-tls_so.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_so_CFLAGS) $(CFLAGS) -c -o tls_so-tls_so.o `test -f 'tls_so.c' || echo '$(srcdir)/'`tls_so.c

tls_so-tls_so.obj: tls_so.c
@AMDEP_TRUE@	source='tls_so.c' object='tls_so-tls_so.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tls_so-tls_so.Po' tmpdepfile='$(DEPDIR)/tls_so-tls_so.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_so_CFLAGS) $(CFLAGS) -c -o tls_so-tls_so.obj `cygpath -w tls_so.c`

yield-yield.o: yield.c
@AMDEP_TRUE@	source='yield.c' object='yield-yield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/yield-yield.Po' tmpdepfile='$(DEPDIR)/yield-yield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yield_CFLAGS) $(CFLAGS) -c -o yield-yield.o `test -f 'yield.c' || echo '$(srcdir)/'`yield.c

yield-yield.obj: yield.c
@AMDEP_TRUE@	source='yield.c' object='yield-yield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/yield-yield.Po' tmpdepfile='$(DEPDIR)/yield-yield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yield_CFLAGS) $(CFLAGS) -c -o yield-yield.obj `cygpath -w yield.c`
CCDEPMODE = @CCDEPMODE@

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-recursive
all-am: Makefile $(SCRIPTS)
installdirs: installdirs-recursive
installdirs-am:

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-recursive distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-recursive distclean-tags distdir dvi dvi-am \
	dvi-recursive info info-am info-recursive install install-am \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive install-man \
	install-recursive install-strip installcheck installcheck-am \
	installdirs installdirs-am installdirs-recursive \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive tags tags-recursive \
	uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-recursive


# must be built with these flags -- bug only occurred with them
fpu_lazy_eflags.o: CFLAGS += -O2 -mcpu=pentiumpro -march=pentiumpro
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
