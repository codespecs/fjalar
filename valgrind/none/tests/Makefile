# Makefile.in generated by automake 1.9.6 from Makefile.am.
# none/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file is used for tool tests, and also in perf/Makefile.am.


srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/valgrind
pkglibdir = $(libdir)/valgrind
pkgincludedir = $(includedir)/valgrind
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux
host_triplet = i686-pc-linux
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/Makefile.flags.am \
	$(top_srcdir)/Makefile.tool-tests.am

# Arch-specific tests.
am__append_1 = x86
#am__append_2 = amd64
#am__append_3 = ppc32
#am__append_4 = ppc64

# OS-specific tests
am__append_5 = linux
#am__append_6 = darwin

# Platform-specific tests
am__append_7 = x86-linux
check_PROGRAMS = ansi$(EXEEXT) args$(EXEEXT) async-sigs$(EXEEXT) \
	bitfield1$(EXEEXT) bug129866$(EXEEXT) closeall$(EXEEXT) \
	coolo_strlen$(EXEEXT) discard$(EXEEXT) exec-sigmask$(EXEEXT) \
	execve$(EXEEXT) faultstatus$(EXEEXT) fcntl_setown$(EXEEXT) \
	fdleak_cmsg$(EXEEXT) fdleak_creat$(EXEEXT) fdleak_dup$(EXEEXT) \
	fdleak_dup2$(EXEEXT) fdleak_fcntl$(EXEEXT) \
	fdleak_ipv4$(EXEEXT) fdleak_open$(EXEEXT) fdleak_pipe$(EXEEXT) \
	fdleak_socketpair$(EXEEXT) floored$(EXEEXT) fork$(EXEEXT) \
	fucomip$(EXEEXT) munmap_exe$(EXEEXT) map_unaligned$(EXEEXT) \
	map_unmap$(EXEEXT) mq$(EXEEXT) nestedfns$(EXEEXT) \
	pending$(EXEEXT) pth_atfork1$(EXEEXT) pth_blockedsig$(EXEEXT) \
	pth_cancel1$(EXEEXT) pth_cancel2$(EXEEXT) \
	pth_cvsimple$(EXEEXT) pth_empty$(EXEEXT) pth_exit$(EXEEXT) \
	pth_exit2$(EXEEXT) pth_mutexspeed$(EXEEXT) pth_once$(EXEEXT) \
	pth_rwlock$(EXEEXT) pth_stackalign$(EXEEXT) rcrl$(EXEEXT) \
	readline1$(EXEEXT) res_search$(EXEEXT) resolv$(EXEEXT) \
	rlimit_nofile$(EXEEXT) selfrun$(EXEEXT) sem$(EXEEXT) \
	semlimit$(EXEEXT) sha1_test$(EXEEXT) shortpush$(EXEEXT) \
	shorts$(EXEEXT) stackgrowth$(EXEEXT) sigstackgrowth$(EXEEXT) \
	syscall-restart1$(EXEEXT) syscall-restart2$(EXEEXT) \
	system$(EXEEXT) threaded-fork$(EXEEXT) threadederrno$(EXEEXT) \
	tls$(EXEEXT) tls.so$(EXEEXT) tls2.so$(EXEEXT) \
	vgprintf$(EXEEXT) coolo_sigaction$(EXEEXT) gxx304$(EXEEXT) \
	$(am__EXEEXT_1)

# DDD:
# - manythreads and thread-exits have lots of this:
# --61831:0:aspacem  sync_check_mapping_callback: segment mismatch:
#                    kernel's seg:
# --61831:0:aspacem  start=0x102538000 end=0x1025b7fff prot=3 dev=0 ino=0 
#                    offset=0 name="(none)"
# --61831:0:aspacem  sync_check_mapping_callback: segment mismatch: V's seg:
# --61831:0:aspacem  NSegment{    , start=0x10067a000, end=0x109a1efff,
#                    smode=SmFixed, dev=0, ino=0, offset=0, fnIdx=-1, hasR=0,
#                    hasW=0, hasX=0, hasT=0, mark=0, name="(none)"}
am__append_8 = \
	manythreads \
	thread-exits

subdir = none/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__EXEEXT_1 = manythreads$(EXEEXT) \
	thread-exits$(EXEEXT)
ansi_SOURCES = ansi.c
ansi_OBJECTS = ansi-ansi.$(OBJEXT)
ansi_LDADD = $(LDADD)
args_SOURCES = args.c
args_OBJECTS = args.$(OBJEXT)
args_LDADD = $(LDADD)
async_sigs_SOURCES = async-sigs.c
async_sigs_OBJECTS = async-sigs.$(OBJEXT)
async_sigs_LDADD = $(LDADD)
bitfield1_SOURCES = bitfield1.c
bitfield1_OBJECTS = bitfield1.$(OBJEXT)
bitfield1_LDADD = $(LDADD)
bug129866_SOURCES = bug129866.c
bug129866_OBJECTS = bug129866.$(OBJEXT)
bug129866_LDADD = $(LDADD)
closeall_SOURCES = closeall.c
closeall_OBJECTS = closeall.$(OBJEXT)
closeall_LDADD = $(LDADD)
am_coolo_sigaction_OBJECTS = coolo_sigaction.$(OBJEXT)
coolo_sigaction_OBJECTS = $(am_coolo_sigaction_OBJECTS)
coolo_sigaction_LDADD = $(LDADD)
coolo_strlen_SOURCES = coolo_strlen.c
coolo_strlen_OBJECTS = coolo_strlen.$(OBJEXT)
coolo_strlen_LDADD = $(LDADD)
discard_SOURCES = discard.c
discard_OBJECTS = discard.$(OBJEXT)
discard_LDADD = $(LDADD)
exec_sigmask_SOURCES = exec-sigmask.c
exec_sigmask_OBJECTS = exec-sigmask.$(OBJEXT)
exec_sigmask_LDADD = $(LDADD)
execve_SOURCES = execve.c
execve_OBJECTS = execve.$(OBJEXT)
execve_LDADD = $(LDADD)
faultstatus_SOURCES = faultstatus.c
faultstatus_OBJECTS = faultstatus.$(OBJEXT)
faultstatus_LDADD = $(LDADD)
fcntl_setown_SOURCES = fcntl_setown.c
fcntl_setown_OBJECTS = fcntl_setown.$(OBJEXT)
fcntl_setown_LDADD = $(LDADD)
fdleak_cmsg_SOURCES = fdleak_cmsg.c
fdleak_cmsg_OBJECTS = fdleak_cmsg.$(OBJEXT)
fdleak_cmsg_LDADD = $(LDADD)
fdleak_creat_SOURCES = fdleak_creat.c
fdleak_creat_OBJECTS = fdleak_creat.$(OBJEXT)
fdleak_creat_LDADD = $(LDADD)
fdleak_dup_SOURCES = fdleak_dup.c
fdleak_dup_OBJECTS = fdleak_dup.$(OBJEXT)
fdleak_dup_LDADD = $(LDADD)
fdleak_dup2_SOURCES = fdleak_dup2.c
fdleak_dup2_OBJECTS = fdleak_dup2.$(OBJEXT)
fdleak_dup2_LDADD = $(LDADD)
fdleak_fcntl_SOURCES = fdleak_fcntl.c
fdleak_fcntl_OBJECTS = fdleak_fcntl.$(OBJEXT)
fdleak_fcntl_LDADD = $(LDADD)
fdleak_ipv4_SOURCES = fdleak_ipv4.c
fdleak_ipv4_OBJECTS = fdleak_ipv4.$(OBJEXT)
fdleak_ipv4_LDADD = $(LDADD)
fdleak_open_SOURCES = fdleak_open.c
fdleak_open_OBJECTS = fdleak_open.$(OBJEXT)
fdleak_open_LDADD = $(LDADD)
fdleak_pipe_SOURCES = fdleak_pipe.c
fdleak_pipe_OBJECTS = fdleak_pipe.$(OBJEXT)
fdleak_pipe_LDADD = $(LDADD)
fdleak_socketpair_SOURCES = fdleak_socketpair.c
fdleak_socketpair_OBJECTS = fdleak_socketpair.$(OBJEXT)
fdleak_socketpair_LDADD = $(LDADD)
floored_SOURCES = floored.c
floored_OBJECTS = floored.$(OBJEXT)
floored_DEPENDENCIES =
fork_SOURCES = fork.c
fork_OBJECTS = fork.$(OBJEXT)
fork_LDADD = $(LDADD)
fucomip_SOURCES = fucomip.c
fucomip_OBJECTS = fucomip.$(OBJEXT)
fucomip_LDADD = $(LDADD)
am_gxx304_OBJECTS = gxx304.$(OBJEXT)
gxx304_OBJECTS = $(am_gxx304_OBJECTS)
gxx304_LDADD = $(LDADD)
manythreads_SOURCES = manythreads.c
manythreads_OBJECTS = manythreads.$(OBJEXT)
manythreads_DEPENDENCIES =
map_unaligned_SOURCES = map_unaligned.c
map_unaligned_OBJECTS = map_unaligned.$(OBJEXT)
map_unaligned_LDADD = $(LDADD)
map_unmap_SOURCES = map_unmap.c
map_unmap_OBJECTS = map_unmap.$(OBJEXT)
map_unmap_LDADD = $(LDADD)
mq_SOURCES = mq.c
mq_OBJECTS = mq.$(OBJEXT)
mq_DEPENDENCIES =
munmap_exe_SOURCES = munmap_exe.c
munmap_exe_OBJECTS = munmap_exe.$(OBJEXT)
munmap_exe_LDADD = $(LDADD)
nestedfns_SOURCES = nestedfns.c
nestedfns_OBJECTS = nestedfns-nestedfns.$(OBJEXT)
nestedfns_LDADD = $(LDADD)
pending_SOURCES = pending.c
pending_OBJECTS = pending.$(OBJEXT)
pending_LDADD = $(LDADD)
pth_atfork1_SOURCES = pth_atfork1.c
pth_atfork1_OBJECTS = pth_atfork1.$(OBJEXT)
pth_atfork1_DEPENDENCIES =
pth_blockedsig_SOURCES = pth_blockedsig.c
pth_blockedsig_OBJECTS = pth_blockedsig.$(OBJEXT)
pth_blockedsig_DEPENDENCIES =
pth_cancel1_SOURCES = pth_cancel1.c
pth_cancel1_OBJECTS = pth_cancel1-pth_cancel1.$(OBJEXT)
pth_cancel1_DEPENDENCIES =
pth_cancel2_SOURCES = pth_cancel2.c
pth_cancel2_OBJECTS = pth_cancel2.$(OBJEXT)
pth_cancel2_DEPENDENCIES =
pth_cvsimple_SOURCES = pth_cvsimple.c
pth_cvsimple_OBJECTS = pth_cvsimple.$(OBJEXT)
pth_cvsimple_DEPENDENCIES =
pth_empty_SOURCES = pth_empty.c
pth_empty_OBJECTS = pth_empty.$(OBJEXT)
pth_empty_DEPENDENCIES =
pth_exit_SOURCES = pth_exit.c
pth_exit_OBJECTS = pth_exit.$(OBJEXT)
pth_exit_DEPENDENCIES =
pth_exit2_SOURCES = pth_exit2.c
pth_exit2_OBJECTS = pth_exit2.$(OBJEXT)
pth_exit2_DEPENDENCIES =
pth_mutexspeed_SOURCES = pth_mutexspeed.c
pth_mutexspeed_OBJECTS = pth_mutexspeed.$(OBJEXT)
pth_mutexspeed_DEPENDENCIES =
pth_once_SOURCES = pth_once.c
pth_once_OBJECTS = pth_once.$(OBJEXT)
pth_once_DEPENDENCIES =
pth_rwlock_SOURCES = pth_rwlock.c
pth_rwlock_OBJECTS = pth_rwlock.$(OBJEXT)
pth_rwlock_DEPENDENCIES =
pth_stackalign_SOURCES = pth_stackalign.c
pth_stackalign_OBJECTS = pth_stackalign.$(OBJEXT)
pth_stackalign_DEPENDENCIES =
rcrl_SOURCES = rcrl.c
rcrl_OBJECTS = rcrl.$(OBJEXT)
rcrl_LDADD = $(LDADD)
readline1_SOURCES = readline1.c
readline1_OBJECTS = readline1.$(OBJEXT)
readline1_LDADD = $(LDADD)
res_search_SOURCES = res_search.c
res_search_OBJECTS = res_search.$(OBJEXT)
res_search_DEPENDENCIES =
resolv_SOURCES = resolv.c
resolv_OBJECTS = resolv.$(OBJEXT)
resolv_DEPENDENCIES =
rlimit_nofile_SOURCES = rlimit_nofile.c
rlimit_nofile_OBJECTS = rlimit_nofile.$(OBJEXT)
rlimit_nofile_LDADD = $(LDADD)
selfrun_SOURCES = selfrun.c
selfrun_OBJECTS = selfrun.$(OBJEXT)
selfrun_LDADD = $(LDADD)
sem_SOURCES = sem.c
sem_OBJECTS = sem.$(OBJEXT)
sem_LDADD = $(LDADD)
semlimit_SOURCES = semlimit.c
semlimit_OBJECTS = semlimit.$(OBJEXT)
semlimit_DEPENDENCIES =
sha1_test_SOURCES = sha1_test.c
sha1_test_OBJECTS = sha1_test.$(OBJEXT)
sha1_test_LDADD = $(LDADD)
shortpush_SOURCES = shortpush.c
shortpush_OBJECTS = shortpush.$(OBJEXT)
shortpush_LDADD = $(LDADD)
shorts_SOURCES = shorts.c
shorts_OBJECTS = shorts.$(OBJEXT)
shorts_LDADD = $(LDADD)
sigstackgrowth_SOURCES = sigstackgrowth.c
sigstackgrowth_OBJECTS = sigstackgrowth.$(OBJEXT)
sigstackgrowth_LDADD = $(LDADD)
stackgrowth_SOURCES = stackgrowth.c
stackgrowth_OBJECTS = stackgrowth.$(OBJEXT)
stackgrowth_LDADD = $(LDADD)
syscall_restart1_SOURCES = syscall-restart1.c
syscall_restart1_OBJECTS = syscall-restart1.$(OBJEXT)
syscall_restart1_LDADD = $(LDADD)
syscall_restart2_SOURCES = syscall-restart2.c
syscall_restart2_OBJECTS = syscall-restart2.$(OBJEXT)
syscall_restart2_LDADD = $(LDADD)
system_SOURCES = system.c
system_OBJECTS = system.$(OBJEXT)
system_LDADD = $(LDADD)
thread_exits_SOURCES = thread-exits.c
thread_exits_OBJECTS = thread-exits.$(OBJEXT)
thread_exits_DEPENDENCIES =
threaded_fork_SOURCES = threaded-fork.c
threaded_fork_OBJECTS = threaded-fork.$(OBJEXT)
threaded_fork_DEPENDENCIES =
threadederrno_SOURCES = threadederrno.c
threadederrno_OBJECTS = threadederrno.$(OBJEXT)
threadederrno_DEPENDENCIES =
am_tls_OBJECTS = tls.$(OBJEXT) tls2.$(OBJEXT)
tls_OBJECTS = $(am_tls_OBJECTS)
am_tls_so_OBJECTS = tls_so-tls_so.$(OBJEXT)
tls_so_OBJECTS = $(am_tls_so_OBJECTS)
am_tls2_so_OBJECTS = tls2_so.$(OBJEXT)
tls2_so_OBJECTS = $(am_tls2_so_OBJECTS)
tls2_so_LDADD = $(LDADD)
vgprintf_SOURCES = vgprintf.c
vgprintf_OBJECTS = vgprintf.$(OBJEXT)
vgprintf_LDADD = $(LDADD)
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = ansi.c args.c async-sigs.c bitfield1.c bug129866.c \
	closeall.c $(coolo_sigaction_SOURCES) coolo_strlen.c discard.c \
	exec-sigmask.c execve.c faultstatus.c fcntl_setown.c \
	fdleak_cmsg.c fdleak_creat.c fdleak_dup.c fdleak_dup2.c \
	fdleak_fcntl.c fdleak_ipv4.c fdleak_open.c fdleak_pipe.c \
	fdleak_socketpair.c floored.c fork.c fucomip.c \
	$(gxx304_SOURCES) manythreads.c map_unaligned.c map_unmap.c \
	mq.c munmap_exe.c nestedfns.c pending.c pth_atfork1.c \
	pth_blockedsig.c pth_cancel1.c pth_cancel2.c pth_cvsimple.c \
	pth_empty.c pth_exit.c pth_exit2.c pth_mutexspeed.c pth_once.c \
	pth_rwlock.c pth_stackalign.c rcrl.c readline1.c res_search.c \
	resolv.c rlimit_nofile.c selfrun.c sem.c semlimit.c \
	sha1_test.c shortpush.c shorts.c sigstackgrowth.c \
	stackgrowth.c syscall-restart1.c syscall-restart2.c system.c \
	thread-exits.c threaded-fork.c threadederrno.c $(tls_SOURCES) \
	$(tls_so_SOURCES) $(tls2_so_SOURCES) vgprintf.c
DIST_SOURCES = ansi.c args.c async-sigs.c bitfield1.c bug129866.c \
	closeall.c $(coolo_sigaction_SOURCES) coolo_strlen.c discard.c \
	exec-sigmask.c execve.c faultstatus.c fcntl_setown.c \
	fdleak_cmsg.c fdleak_creat.c fdleak_dup.c fdleak_dup2.c \
	fdleak_fcntl.c fdleak_ipv4.c fdleak_open.c fdleak_pipe.c \
	fdleak_socketpair.c floored.c fork.c fucomip.c \
	$(gxx304_SOURCES) manythreads.c map_unaligned.c map_unmap.c \
	mq.c munmap_exe.c nestedfns.c pending.c pth_atfork1.c \
	pth_blockedsig.c pth_cancel1.c pth_cancel2.c pth_cvsimple.c \
	pth_empty.c pth_exit.c pth_exit2.c pth_mutexspeed.c pth_once.c \
	pth_rwlock.c pth_stackalign.c rcrl.c readline1.c res_search.c \
	resolv.c rlimit_nofile.c selfrun.c sem.c semlimit.c \
	sha1_test.c shortpush.c shorts.c sigstackgrowth.c \
	stackgrowth.c syscall-restart1.c syscall-restart2.c system.c \
	thread-exits.c threaded-fork.c threadederrno.c $(tls_SOURCES) \
	$(tls_so_SOURCES) $(tls2_so_SOURCES) vgprintf.c
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = tar
AR = /usr/bin/ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.9
AWK = gawk
BOOST_CFLAGS = 
BOOST_LIBS = 
BUILD_MPIWRAP_PRI_FALSE = #
BUILD_MPIWRAP_PRI_TRUE = 
BUILD_MPIWRAP_SEC_FALSE = 
BUILD_MPIWRAP_SEC_TRUE = #
BUILD_SSE3_TESTS_FALSE = #
BUILD_SSE3_TESTS_TRUE = 
BUILD_SSSE3_TESTS_FALSE = 
BUILD_SSSE3_TESTS_TRUE = #
CC = gcc
CCAS = gcc
CCASFLAGS = -Wno-long-long
CCDEPMODE = depmode=gcc3
CFLAGS = -Wno-long-long -Wno-pointer-sign -Wdeclaration-after-statement -fno-stack-protector
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFAULT_SUPP = exp-ptrcheck.supp xfree-3.supp xfree-4.supp glibc-2.X-drd.supp glibc-2.34567-NPTL-helgrind.supp glibc-2.3.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
DISTCHECK_CONFIGURE_FLAGS = --with-vex=$(top_srcdir)/VEX
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_M32 = -m32
FLAG_M64 = -m64
FLAG_MAIX32 = 
FLAG_MAIX64 = 
FLAG_MMMX = -mmmx
FLAG_MSSE = -msse
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_WDECL_AFTER_STMT = -Wdeclaration-after-statement
FLAG_W_EXTRA = -Wextra
FLAG_W_NO_FORMAT_ZERO_LENGTH = -Wno-format-zero-length
GDB = /usr/bin/gdb
GLIBC_VERSION = 2.3
GREP = /bin/grep
HAS_ALTIVEC_FALSE = 
HAS_ALTIVEC_TRUE = #
HAVE_ALTIVEC_H_FALSE = 
HAVE_ALTIVEC_H_TRUE = #
HAVE_BOOST_1_35_FALSE = 
HAVE_BOOST_1_35_TRUE = #
HAVE_BUILTIN_ATOMIC_FALSE = #
HAVE_BUILTIN_ATOMIC_TRUE = 
HAVE_OPENMP_FALSE = 
HAVE_OPENMP_TRUE = #
HAVE_PTHREAD_BARRIER_FALSE = #
HAVE_PTHREAD_BARRIER_TRUE = 
HAVE_PTHREAD_CREATE_GLIBC_2_0_FALSE = #
HAVE_PTHREAD_CREATE_GLIBC_2_0_TRUE = 
HAVE_PTHREAD_MUTEX_TIMEDLOCK_FALSE = #
HAVE_PTHREAD_MUTEX_TIMEDLOCK_TRUE = 
HAVE_PTHREAD_SPINLOCK_FALSE = #
HAVE_PTHREAD_SPINLOCK_TRUE = 
HAVE_QTCORE_FALSE = #
HAVE_QTCORE_TRUE = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = makeinfo
MPI_CC = mpicc
OBJC = gcc
OBJCFLAGS = -g -O2
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.5.0.SVN
PACKAGE_TARNAME = valgrind
PACKAGE_VERSION = 3.5.0.SVN
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PREFERRED_STACK_BOUNDARY = -mpreferred-stack-boundary=2
QTCORE_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtCore  
QTCORE_LIBS = -L/build/buildd/qt4-x11-4.2.1/lib -lQtCore -lfontconfig -lz -lm -lglib-2.0 -lpthread -ldl  
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VALT_LOAD_ADDRESS = 0x38000000
VERSION = 3.5.0.SVN
VEX_DIR = $(top_srcdir)/VEX
VGCONF_ARCHS_INCLUDE_AMD64_FALSE = 
VGCONF_ARCHS_INCLUDE_AMD64_TRUE = #
VGCONF_ARCHS_INCLUDE_PPC32_FALSE = 
VGCONF_ARCHS_INCLUDE_PPC32_TRUE = #
VGCONF_ARCHS_INCLUDE_PPC64_FALSE = 
VGCONF_ARCHS_INCLUDE_PPC64_TRUE = #
VGCONF_ARCHS_INCLUDE_X86_FALSE = #
VGCONF_ARCHS_INCLUDE_X86_TRUE = 
VGCONF_ARCH_PRI = x86
VGCONF_ARCH_SEC = 
VGCONF_HAVE_PLATFORM_SEC_FALSE = 
VGCONF_HAVE_PLATFORM_SEC_TRUE = #
VGCONF_OS = linux
VGCONF_OS_IS_AIX5_FALSE = 
VGCONF_OS_IS_AIX5_TRUE = #
VGCONF_OS_IS_DARWIN_FALSE = 
VGCONF_OS_IS_DARWIN_TRUE = #
VGCONF_OS_IS_LINUX_FALSE = #
VGCONF_OS_IS_LINUX_TRUE = 
VGCONF_PLATFORMS_INCLUDE_AMD64_DARWIN_FALSE = 
VGCONF_PLATFORMS_INCLUDE_AMD64_DARWIN_TRUE = #
VGCONF_PLATFORMS_INCLUDE_AMD64_LINUX_FALSE = 
VGCONF_PLATFORMS_INCLUDE_AMD64_LINUX_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC32_AIX5_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC32_AIX5_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC32_LINUX_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC32_LINUX_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC64_AIX5_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC64_AIX5_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC64_LINUX_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC64_LINUX_TRUE = #
VGCONF_PLATFORMS_INCLUDE_X86_DARWIN_FALSE = 
VGCONF_PLATFORMS_INCLUDE_X86_DARWIN_TRUE = #
VGCONF_PLATFORMS_INCLUDE_X86_LINUX_FALSE = #
VGCONF_PLATFORMS_INCLUDE_X86_LINUX_TRUE = 
VGCONF_PLATFORM_PRI_CAPS = X86_LINUX
VGCONF_PLATFORM_SEC_CAPS = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_OBJC = gcc
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux
build_alias = 
build_cpu = i686
build_os = linux
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux
host_alias = 
host_cpu = i686
host_os = linux
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /afs/csail.mit.edu/u/r/rudd/research/invariants/valgrind-bak/valgrind/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /afs/csail.mit.edu/u/r/rudd/research/invariants/valgrind-bak/valgrind/inst
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
AM_CFLAGS_BASE = -O2 -g -Wmissing-prototypes -Wall -Wshadow \
                 -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
		 -Wno-format-zero-length \
                 -fno-strict-aliasing

AM_CFLAGS_PIC = -fpic -O -g -fno-omit-frame-pointer -fno-strict-aliasing

# These flags are used for building the preload shared objects.
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.
#AM_CFLAGS_PIC = -dynamic -O -g -fno-omit-frame-pointer -fno-strict-aliasing -mno-dynamic-no-pic

# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
#
# Also: in newer versions of automake (1.10 onwards?) asm files ending with
# '.S' are considered "pre-processed" (as opposed to those ending in '.s')
# and so the CPPFLAGS are passed to the assembler.  But this is not true for
# older automakes (e.g. 1.8.5, 1.9.6), sigh.  So we include
# AM_CPPFLAGS_<PLATFORM> in each AM_CCASFLAGS_<PLATFORM> variable.  This
# means some of the flags are duplicated on systems with newer versions of
# automake, but this does not really matter and seems hard to avoid.
AM_CPPFLAGS_COMMON = \
		-I$(top_srcdir) \
		-I$(top_srcdir)/include \
		-I$(top_srcdir)/VEX/pub

AM_FLAG_M3264_X86_LINUX = -m32
AM_CPPFLAGS_X86_LINUX = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_x86=1 \
			    -DVGO_linux=1 \
			    -DVGP_x86_linux=1

AM_CFLAGS_X86_LINUX = -m32 -mpreferred-stack-boundary=2 \
			 	$(AM_CFLAGS_BASE)

AM_CCASFLAGS_X86_LINUX = $(AM_CPPFLAGS_X86_LINUX) -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CPPFLAGS_AMD64_LINUX = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_amd64=1 \
			    -DVGO_linux=1 \
			    -DVGP_amd64_linux=1

AM_CFLAGS_AMD64_LINUX = -m64 -fomit-frame-pointer \
				-mpreferred-stack-boundary=2 $(AM_CFLAGS_BASE)

AM_CCASFLAGS_AMD64_LINUX = $(AM_CPPFLAGS_AMD64_LINUX) -m64 -g
AM_FLAG_M3264_PPC32_LINUX = -m32
AM_CPPFLAGS_PPC32_LINUX = $(AM_CPPFLAGS_COMMON) \
		-DVGA_ppc32=1 \
		-DVGO_linux=1 \
		-DVGP_ppc32_linux=1

AM_CFLAGS_PPC32_LINUX = -m32 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_LINUX = $(AM_CPPFLAGS_PPC32_LINUX) -m32 -g
AM_FLAG_M3264_PPC64_LINUX = -m64
AM_CPPFLAGS_PPC64_LINUX = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_ppc64=1 \
			    -DVGO_linux=1 \
			    -DVGP_ppc64_linux=1

AM_CFLAGS_PPC64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_LINUX = $(AM_CPPFLAGS_PPC64_LINUX) -m64 -g
AM_FLAG_M3264_PPC32_AIX5 = 
AM_CPPFLAGS_PPC32_AIX5 = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_ppc32=1 \
			    -DVGO_aix5=1 \
			    -DVGP_ppc32_aix5=1

AM_CFLAGS_PPC32_AIX5 =  -mcpu=powerpc $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_AIX5 = $(AM_CPPFLAGS_PPC32_AIX5) \
			     -mcpu=powerpc -g

AM_FLAG_M3264_PPC64_AIX5 = 
AM_CPPFLAGS_PPC64_AIX5 = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_ppc64=1 \
			    -DVGO_aix5=1 \
			    -DVGP_ppc64_aix5=1

AM_CFLAGS_PPC64_AIX5 =  -mcpu=powerpc64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_AIX5 = $(AM_CPPFLAGS_PPC64_AIX5) \
			     -mcpu=powerpc64 -g

AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CPPFLAGS_X86_DARWIN = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_x86=1 \
			    -DVGO_darwin=1 \
			    -DVGP_x86_darwin=1

AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector \
			    -mdynamic-no-pic

AM_CCASFLAGS_X86_DARWIN = $(AM_CPPFLAGS_X86_DARWIN) -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CPPFLAGS_AMD64_DARWIN = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_amd64=1 \
			    -DVGO_darwin=1 \
			    -DVGP_amd64_darwin=1

AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector

AM_CCASFLAGS_AMD64_DARWIN = $(AM_CPPFLAGS_AMD64_DARWIN) -arch x86_64 -g

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_X86_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_X86_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_X86_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_X86_LINUX)
AM_FLAG_M3264_SEC = 
#AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_)

# Baseline link flags for making dynamic shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_COMMON_AIX5 = -nodefaultlibs -shared -Wl,-G -Wl,-bnogc
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_PPC64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  
PRELOAD_LDFLAGS_PPC64_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/include \
		-I$(top_srcdir)/coregrind -I$(top_builddir)/include \
		-I$(top_srcdir)/VEX/pub \
		-DVGA_$(VGCONF_ARCH_PRI)=1 \
		-DVGO_$(VGCONF_OS)=1 \
		-DVGP_$(VGCONF_ARCH_PRI)_$(VGCONF_OS)=1

# Nb: Tools need to augment these flags with an arch-selection option, such
# as $(AM_FLAG_M3264_PRI).
AM_CFLAGS = -Winline -Wall -Wshadow -g $(AM_FLAG_M3264_PRI)
AM_CXXFLAGS = -Winline -Wall -Wshadow -g $(AM_FLAG_M3264_PRI)
# Include AM_CPPFLAGS in AM_CCASFLAGS to allow for older versions of
# automake;  see comments in Makefile.flags.am for more detail.
AM_CCASFLAGS = $(AM_CPPFLAGS)
SUBDIRS = . $(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5) $(am__append_6) \
	$(am__append_7)
DIST_SUBDIRS = x86 amd64 ppc32 ppc64 linux darwin x86-linux .
noinst_SCRIPTS = \
	filter_cmdline0 filter_linenos \
	filter_fdleak filter_none_discards filter_stderr

noinst_HEADERS = fdleak.h
EXTRA_DIST = $(noinst_SCRIPTS) \
	ansi.stderr.exp ansi.vgtest \
	args.stderr.exp args.stdout.exp args.vgtest \
	async-sigs.stderr.exp async-sigs.vgtest \
	bitfield1.stderr.exp bitfield1.vgtest \
	bug129866.vgtest bug129866.stderr.exp bug129866.stdout.exp \
	closeall.stderr.exp closeall.vgtest \
	cmdline0.stderr.exp cmdline0.stdout.exp cmdline0.vgtest \
	cmdline1.stderr.exp cmdline1.stdout.exp cmdline1.vgtest \
	cmdline2.stderr.exp cmdline2.stdout.exp cmdline2.vgtest \
	cmdline3.stderr.exp cmdline3.vgtest \
	cmdline4.stderr.exp cmdline4.vgtest \
	cmdline5.stderr.exp cmdline5.vgtest \
	cmdline6.stderr.exp cmdline6.vgtest \
	coolo_sigaction.stderr.exp \
	coolo_sigaction.stdout.exp coolo_sigaction.vgtest \
	coolo_strlen.stderr.exp coolo_strlen.vgtest \
	discard.stderr.exp discard.stdout.exp \
	discard.vgtest \
	exec-sigmask.vgtest exec-sigmask.stdout.exp \
	exec-sigmask.stdout.exp2 exec-sigmask.stdout.exp3 exec-sigmask.stderr.exp \
	execve.vgtest execve.stdout.exp execve.stderr.exp \
	faultstatus.vgtest faultstatus.stderr.exp \
	fcntl_setown.vgtest fcntl_setown.stdout.exp fcntl_setown.stderr.exp \
	fdleak_cmsg.stderr.exp fdleak_cmsg.vgtest \
	fdleak_creat.stderr.exp fdleak_creat.vgtest \
	fdleak_dup.stderr.exp fdleak_dup.vgtest \
	fdleak_dup2.stderr.exp fdleak_dup2.vgtest \
	fdleak_fcntl.stderr.exp fdleak_fcntl.vgtest \
	fdleak_ipv4.stderr.exp fdleak_ipv4.stdout.exp fdleak_ipv4.vgtest \
	fdleak_open.stderr.exp fdleak_open.vgtest \
	fdleak_pipe.stderr.exp fdleak_pipe.vgtest \
	fdleak_socketpair.stderr.exp fdleak_socketpair.vgtest \
	floored.stderr.exp floored.stdout.exp floored.vgtest \
	fork.stderr.exp fork.stdout.exp fork.vgtest \
	fucomip.stderr.exp fucomip.vgtest \
	gxx304.stderr.exp gxx304.vgtest \
	manythreads.stdout.exp manythreads.stderr.exp manythreads.vgtest \
	map_unaligned.stderr.exp map_unaligned.vgtest \
	map_unmap.stderr.exp map_unmap.stdout.exp map_unmap.vgtest \
	mq.stderr.exp mq.vgtest \
	munmap_exe.stderr.exp munmap_exe.vgtest \
	nestedfns.stderr.exp nestedfns.stdout.exp nestedfns.vgtest \
	pending.stdout.exp pending.stderr.exp pending.vgtest \
	pth_atfork1.stderr.exp pth_atfork1.stdout.exp pth_atfork1.vgtest \
	pth_blockedsig.stderr.exp \
	pth_blockedsig.stdout.exp pth_blockedsig.vgtest \
	pth_cancel1.stderr.exp pth_cancel1.stdout.exp pth_cancel1.vgtest \
	pth_cancel2.stderr.exp pth_cancel2.vgtest \
	pth_cvsimple.stderr.exp pth_cvsimple.stdout.exp pth_cvsimple.vgtest \
	pth_empty.stderr.exp pth_empty.vgtest \
	pth_exit.stderr.exp pth_exit.vgtest \
	pth_exit2.stderr.exp pth_exit2.vgtest \
	pth_mutexspeed.stderr.exp \
	pth_mutexspeed.stdout.exp pth_mutexspeed.vgtest \
	pth_once.stderr.exp pth_once.stdout.exp pth_once.vgtest \
	pth_rwlock.stderr.exp pth_rwlock.vgtest \
	pth_stackalign.stderr.exp \
	pth_stackalign.stdout.exp pth_stackalign.vgtest \
	rcrl.stderr.exp rcrl.stdout.exp rcrl.vgtest \
	readline1.stderr.exp readline1.stdout.exp \
	readline1.vgtest \
	res_search.stderr.exp res_search.stdout.exp res_search.vgtest \
	resolv.stderr.exp resolv.stdout.exp resolv.vgtest \
	rlimit_nofile.stderr.exp rlimit_nofile.stdout.exp rlimit_nofile.vgtest \
	selfrun.stderr.exp selfrun.stdout.exp selfrun.vgtest \
	sem.stderr.exp sem.stdout.exp sem.vgtest \
	semlimit.stderr.exp semlimit.stdout.exp semlimit.vgtest \
	shell shell.vgtest shell.stderr.exp shell.stderr.exp-dash \
	    shell.stdout.exp \
	shell_badinterp shell_badinterp.vgtest shell_badinterp.stderr.exp \
	shell_binaryfile shell_binaryfile.vgtest shell_binaryfile.stderr.exp \
	shell_dir.vgtest shell_dir.stderr.exp \
	shell_nonexec.vgtest shell_nonexec.stderr.exp \
	shell_nosuchfile.vgtest shell_nosuchfile.stderr.exp \
	shell_valid1 shell_valid1.vgtest shell_valid1.stderr.exp \
	shell_valid2 shell_valid2.vgtest shell_valid2.stderr.exp \
	shell_valid3 shell_valid3.vgtest shell_valid3.stderr.exp \
	shell_zerolength shell_zerolength.vgtest shell_zerolength.stderr.exp \
	    shell_zerolength.stderr.exp-dash \
	sha1_test.stderr.exp sha1_test.vgtest \
	shortpush.stderr.exp shortpush.vgtest \
	shorts.stderr.exp shorts.vgtest \
	sigstackgrowth.stdout.exp sigstackgrowth.stderr.exp sigstackgrowth.vgtest \
	stackgrowth.stdout.exp stackgrowth.stderr.exp stackgrowth.vgtest \
	syscall-restart1.vgtest syscall-restart1.stdout.exp syscall-restart1.stderr.exp \
	syscall-restart2.vgtest syscall-restart2.stdout.exp syscall-restart2.stderr.exp \
	system.stderr.exp system.vgtest \
	thread-exits.stderr.exp thread-exits.stdout.exp thread-exits.vgtest \
	threaded-fork.stderr.exp threaded-fork.stdout.exp threaded-fork.vgtest \
	threadederrno.stderr.exp threadederrno.stdout.exp \
	threadederrno.vgtest \
	tls.vgtest tls.stderr.exp tls.stdout.exp  \
	vgprintf.stderr.exp vgprintf.stdout.exp vgprintf.vgtest


# Extra stuff for C tests
ansi_CFLAGS = $(AM_CFLAGS) -ansi
floored_LDADD = -lm
manythreads_LDADD = -lpthread
nestedfns_CFLAGS = $(AM_CFLAGS)
#nestedfns_CFLAGS = $(AM_CFLAGS) -fnested-functions
mq_LDADD = -lrt
pth_atfork1_LDADD = -lpthread
pth_blockedsig_LDADD = -lpthread
pth_cancel1_CFLAGS = $(AM_CFLAGS) -Wno-shadow
pth_cancel1_LDADD = -lpthread
pth_cancel2_LDADD = -lpthread
pth_cvsimple_LDADD = -lpthread
pth_empty_LDADD = -lpthread
pth_exit_LDADD = -lpthread
pth_exit2_LDADD = -lpthread
pth_mutexspeed_LDADD = -lpthread
pth_once_LDADD = -lpthread
pth_rwlock_LDADD = -lpthread
pth_stackalign_LDADD = -lpthread
res_search_LDADD = -lresolv -lpthread
#res_search_LDADD = -lpthread
resolv_LDADD = -lresolv -lpthread
semlimit_LDADD = -lpthread
thread_exits_LDADD = -lpthread
threaded_fork_LDADD = -lpthread
threadederrno_LDADD = -lpthread
tls_SOURCES = tls.c tls2.c
tls_DEPENDENCIES = tls.so
tls_LDFLAGS = -Wl,-rpath,$(top_builddir)/none/tests
#tls_LDFLAGS = 
tls_LDADD = tls.so -lpthread
tls_so_SOURCES = tls_so.c
tls_so_DEPENDENCIES = tls2.so
tls_so_LDFLAGS = -Wl,-rpath,$(top_builddir)/none/tests -shared -fPIC
#tls_so_LDFLAGS = -dynamic -dynamiclib -all_load -fpic
#tls_so_LDFLAGS = -shared -fPIC
tls_so_LDADD = tls2.so
#tls_so_LDADD = `pwd`/tls2.so
#tls_so_LDADD = `pwd`/tls2.so
tls_so_CFLAGS = $(AM_CFLAGS) -fPIC
tls2_so_SOURCES = tls2_so.c
tls2_so_LDFLAGS = -shared
#tls2_so_LDFLAGS = -dynamic -dynamiclib -all_load

# C++ tests
coolo_sigaction_SOURCES = coolo_sigaction.cpp
gxx304_SOURCES = gxx304.cpp
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/Makefile.flags.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  none/tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  none/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
ansi$(EXEEXT): $(ansi_OBJECTS) $(ansi_DEPENDENCIES) 
	@rm -f ansi$(EXEEXT)
	$(LINK) $(ansi_LDFLAGS) $(ansi_OBJECTS) $(ansi_LDADD) $(LIBS)
args$(EXEEXT): $(args_OBJECTS) $(args_DEPENDENCIES) 
	@rm -f args$(EXEEXT)
	$(LINK) $(args_LDFLAGS) $(args_OBJECTS) $(args_LDADD) $(LIBS)
async-sigs$(EXEEXT): $(async_sigs_OBJECTS) $(async_sigs_DEPENDENCIES) 
	@rm -f async-sigs$(EXEEXT)
	$(LINK) $(async_sigs_LDFLAGS) $(async_sigs_OBJECTS) $(async_sigs_LDADD) $(LIBS)
bitfield1$(EXEEXT): $(bitfield1_OBJECTS) $(bitfield1_DEPENDENCIES) 
	@rm -f bitfield1$(EXEEXT)
	$(LINK) $(bitfield1_LDFLAGS) $(bitfield1_OBJECTS) $(bitfield1_LDADD) $(LIBS)
bug129866$(EXEEXT): $(bug129866_OBJECTS) $(bug129866_DEPENDENCIES) 
	@rm -f bug129866$(EXEEXT)
	$(LINK) $(bug129866_LDFLAGS) $(bug129866_OBJECTS) $(bug129866_LDADD) $(LIBS)
closeall$(EXEEXT): $(closeall_OBJECTS) $(closeall_DEPENDENCIES) 
	@rm -f closeall$(EXEEXT)
	$(LINK) $(closeall_LDFLAGS) $(closeall_OBJECTS) $(closeall_LDADD) $(LIBS)
coolo_sigaction$(EXEEXT): $(coolo_sigaction_OBJECTS) $(coolo_sigaction_DEPENDENCIES) 
	@rm -f coolo_sigaction$(EXEEXT)
	$(CXXLINK) $(coolo_sigaction_LDFLAGS) $(coolo_sigaction_OBJECTS) $(coolo_sigaction_LDADD) $(LIBS)
coolo_strlen$(EXEEXT): $(coolo_strlen_OBJECTS) $(coolo_strlen_DEPENDENCIES) 
	@rm -f coolo_strlen$(EXEEXT)
	$(LINK) $(coolo_strlen_LDFLAGS) $(coolo_strlen_OBJECTS) $(coolo_strlen_LDADD) $(LIBS)
discard$(EXEEXT): $(discard_OBJECTS) $(discard_DEPENDENCIES) 
	@rm -f discard$(EXEEXT)
	$(LINK) $(discard_LDFLAGS) $(discard_OBJECTS) $(discard_LDADD) $(LIBS)
exec-sigmask$(EXEEXT): $(exec_sigmask_OBJECTS) $(exec_sigmask_DEPENDENCIES) 
	@rm -f exec-sigmask$(EXEEXT)
	$(LINK) $(exec_sigmask_LDFLAGS) $(exec_sigmask_OBJECTS) $(exec_sigmask_LDADD) $(LIBS)
execve$(EXEEXT): $(execve_OBJECTS) $(execve_DEPENDENCIES) 
	@rm -f execve$(EXEEXT)
	$(LINK) $(execve_LDFLAGS) $(execve_OBJECTS) $(execve_LDADD) $(LIBS)
faultstatus$(EXEEXT): $(faultstatus_OBJECTS) $(faultstatus_DEPENDENCIES) 
	@rm -f faultstatus$(EXEEXT)
	$(LINK) $(faultstatus_LDFLAGS) $(faultstatus_OBJECTS) $(faultstatus_LDADD) $(LIBS)
fcntl_setown$(EXEEXT): $(fcntl_setown_OBJECTS) $(fcntl_setown_DEPENDENCIES) 
	@rm -f fcntl_setown$(EXEEXT)
	$(LINK) $(fcntl_setown_LDFLAGS) $(fcntl_setown_OBJECTS) $(fcntl_setown_LDADD) $(LIBS)
fdleak_cmsg$(EXEEXT): $(fdleak_cmsg_OBJECTS) $(fdleak_cmsg_DEPENDENCIES) 
	@rm -f fdleak_cmsg$(EXEEXT)
	$(LINK) $(fdleak_cmsg_LDFLAGS) $(fdleak_cmsg_OBJECTS) $(fdleak_cmsg_LDADD) $(LIBS)
fdleak_creat$(EXEEXT): $(fdleak_creat_OBJECTS) $(fdleak_creat_DEPENDENCIES) 
	@rm -f fdleak_creat$(EXEEXT)
	$(LINK) $(fdleak_creat_LDFLAGS) $(fdleak_creat_OBJECTS) $(fdleak_creat_LDADD) $(LIBS)
fdleak_dup$(EXEEXT): $(fdleak_dup_OBJECTS) $(fdleak_dup_DEPENDENCIES) 
	@rm -f fdleak_dup$(EXEEXT)
	$(LINK) $(fdleak_dup_LDFLAGS) $(fdleak_dup_OBJECTS) $(fdleak_dup_LDADD) $(LIBS)
fdleak_dup2$(EXEEXT): $(fdleak_dup2_OBJECTS) $(fdleak_dup2_DEPENDENCIES) 
	@rm -f fdleak_dup2$(EXEEXT)
	$(LINK) $(fdleak_dup2_LDFLAGS) $(fdleak_dup2_OBJECTS) $(fdleak_dup2_LDADD) $(LIBS)
fdleak_fcntl$(EXEEXT): $(fdleak_fcntl_OBJECTS) $(fdleak_fcntl_DEPENDENCIES) 
	@rm -f fdleak_fcntl$(EXEEXT)
	$(LINK) $(fdleak_fcntl_LDFLAGS) $(fdleak_fcntl_OBJECTS) $(fdleak_fcntl_LDADD) $(LIBS)
fdleak_ipv4$(EXEEXT): $(fdleak_ipv4_OBJECTS) $(fdleak_ipv4_DEPENDENCIES) 
	@rm -f fdleak_ipv4$(EXEEXT)
	$(LINK) $(fdleak_ipv4_LDFLAGS) $(fdleak_ipv4_OBJECTS) $(fdleak_ipv4_LDADD) $(LIBS)
fdleak_open$(EXEEXT): $(fdleak_open_OBJECTS) $(fdleak_open_DEPENDENCIES) 
	@rm -f fdleak_open$(EXEEXT)
	$(LINK) $(fdleak_open_LDFLAGS) $(fdleak_open_OBJECTS) $(fdleak_open_LDADD) $(LIBS)
fdleak_pipe$(EXEEXT): $(fdleak_pipe_OBJECTS) $(fdleak_pipe_DEPENDENCIES) 
	@rm -f fdleak_pipe$(EXEEXT)
	$(LINK) $(fdleak_pipe_LDFLAGS) $(fdleak_pipe_OBJECTS) $(fdleak_pipe_LDADD) $(LIBS)
fdleak_socketpair$(EXEEXT): $(fdleak_socketpair_OBJECTS) $(fdleak_socketpair_DEPENDENCIES) 
	@rm -f fdleak_socketpair$(EXEEXT)
	$(LINK) $(fdleak_socketpair_LDFLAGS) $(fdleak_socketpair_OBJECTS) $(fdleak_socketpair_LDADD) $(LIBS)
floored$(EXEEXT): $(floored_OBJECTS) $(floored_DEPENDENCIES) 
	@rm -f floored$(EXEEXT)
	$(LINK) $(floored_LDFLAGS) $(floored_OBJECTS) $(floored_LDADD) $(LIBS)
fork$(EXEEXT): $(fork_OBJECTS) $(fork_DEPENDENCIES) 
	@rm -f fork$(EXEEXT)
	$(LINK) $(fork_LDFLAGS) $(fork_OBJECTS) $(fork_LDADD) $(LIBS)
fucomip$(EXEEXT): $(fucomip_OBJECTS) $(fucomip_DEPENDENCIES) 
	@rm -f fucomip$(EXEEXT)
	$(LINK) $(fucomip_LDFLAGS) $(fucomip_OBJECTS) $(fucomip_LDADD) $(LIBS)
gxx304$(EXEEXT): $(gxx304_OBJECTS) $(gxx304_DEPENDENCIES) 
	@rm -f gxx304$(EXEEXT)
	$(CXXLINK) $(gxx304_LDFLAGS) $(gxx304_OBJECTS) $(gxx304_LDADD) $(LIBS)
manythreads$(EXEEXT): $(manythreads_OBJECTS) $(manythreads_DEPENDENCIES) 
	@rm -f manythreads$(EXEEXT)
	$(LINK) $(manythreads_LDFLAGS) $(manythreads_OBJECTS) $(manythreads_LDADD) $(LIBS)
map_unaligned$(EXEEXT): $(map_unaligned_OBJECTS) $(map_unaligned_DEPENDENCIES) 
	@rm -f map_unaligned$(EXEEXT)
	$(LINK) $(map_unaligned_LDFLAGS) $(map_unaligned_OBJECTS) $(map_unaligned_LDADD) $(LIBS)
map_unmap$(EXEEXT): $(map_unmap_OBJECTS) $(map_unmap_DEPENDENCIES) 
	@rm -f map_unmap$(EXEEXT)
	$(LINK) $(map_unmap_LDFLAGS) $(map_unmap_OBJECTS) $(map_unmap_LDADD) $(LIBS)
mq$(EXEEXT): $(mq_OBJECTS) $(mq_DEPENDENCIES) 
	@rm -f mq$(EXEEXT)
	$(LINK) $(mq_LDFLAGS) $(mq_OBJECTS) $(mq_LDADD) $(LIBS)
munmap_exe$(EXEEXT): $(munmap_exe_OBJECTS) $(munmap_exe_DEPENDENCIES) 
	@rm -f munmap_exe$(EXEEXT)
	$(LINK) $(munmap_exe_LDFLAGS) $(munmap_exe_OBJECTS) $(munmap_exe_LDADD) $(LIBS)
nestedfns$(EXEEXT): $(nestedfns_OBJECTS) $(nestedfns_DEPENDENCIES) 
	@rm -f nestedfns$(EXEEXT)
	$(LINK) $(nestedfns_LDFLAGS) $(nestedfns_OBJECTS) $(nestedfns_LDADD) $(LIBS)
pending$(EXEEXT): $(pending_OBJECTS) $(pending_DEPENDENCIES) 
	@rm -f pending$(EXEEXT)
	$(LINK) $(pending_LDFLAGS) $(pending_OBJECTS) $(pending_LDADD) $(LIBS)
pth_atfork1$(EXEEXT): $(pth_atfork1_OBJECTS) $(pth_atfork1_DEPENDENCIES) 
	@rm -f pth_atfork1$(EXEEXT)
	$(LINK) $(pth_atfork1_LDFLAGS) $(pth_atfork1_OBJECTS) $(pth_atfork1_LDADD) $(LIBS)
pth_blockedsig$(EXEEXT): $(pth_blockedsig_OBJECTS) $(pth_blockedsig_DEPENDENCIES) 
	@rm -f pth_blockedsig$(EXEEXT)
	$(LINK) $(pth_blockedsig_LDFLAGS) $(pth_blockedsig_OBJECTS) $(pth_blockedsig_LDADD) $(LIBS)
pth_cancel1$(EXEEXT): $(pth_cancel1_OBJECTS) $(pth_cancel1_DEPENDENCIES) 
	@rm -f pth_cancel1$(EXEEXT)
	$(LINK) $(pth_cancel1_LDFLAGS) $(pth_cancel1_OBJECTS) $(pth_cancel1_LDADD) $(LIBS)
pth_cancel2$(EXEEXT): $(pth_cancel2_OBJECTS) $(pth_cancel2_DEPENDENCIES) 
	@rm -f pth_cancel2$(EXEEXT)
	$(LINK) $(pth_cancel2_LDFLAGS) $(pth_cancel2_OBJECTS) $(pth_cancel2_LDADD) $(LIBS)
pth_cvsimple$(EXEEXT): $(pth_cvsimple_OBJECTS) $(pth_cvsimple_DEPENDENCIES) 
	@rm -f pth_cvsimple$(EXEEXT)
	$(LINK) $(pth_cvsimple_LDFLAGS) $(pth_cvsimple_OBJECTS) $(pth_cvsimple_LDADD) $(LIBS)
pth_empty$(EXEEXT): $(pth_empty_OBJECTS) $(pth_empty_DEPENDENCIES) 
	@rm -f pth_empty$(EXEEXT)
	$(LINK) $(pth_empty_LDFLAGS) $(pth_empty_OBJECTS) $(pth_empty_LDADD) $(LIBS)
pth_exit$(EXEEXT): $(pth_exit_OBJECTS) $(pth_exit_DEPENDENCIES) 
	@rm -f pth_exit$(EXEEXT)
	$(LINK) $(pth_exit_LDFLAGS) $(pth_exit_OBJECTS) $(pth_exit_LDADD) $(LIBS)
pth_exit2$(EXEEXT): $(pth_exit2_OBJECTS) $(pth_exit2_DEPENDENCIES) 
	@rm -f pth_exit2$(EXEEXT)
	$(LINK) $(pth_exit2_LDFLAGS) $(pth_exit2_OBJECTS) $(pth_exit2_LDADD) $(LIBS)
pth_mutexspeed$(EXEEXT): $(pth_mutexspeed_OBJECTS) $(pth_mutexspeed_DEPENDENCIES) 
	@rm -f pth_mutexspeed$(EXEEXT)
	$(LINK) $(pth_mutexspeed_LDFLAGS) $(pth_mutexspeed_OBJECTS) $(pth_mutexspeed_LDADD) $(LIBS)
pth_once$(EXEEXT): $(pth_once_OBJECTS) $(pth_once_DEPENDENCIES) 
	@rm -f pth_once$(EXEEXT)
	$(LINK) $(pth_once_LDFLAGS) $(pth_once_OBJECTS) $(pth_once_LDADD) $(LIBS)
pth_rwlock$(EXEEXT): $(pth_rwlock_OBJECTS) $(pth_rwlock_DEPENDENCIES) 
	@rm -f pth_rwlock$(EXEEXT)
	$(LINK) $(pth_rwlock_LDFLAGS) $(pth_rwlock_OBJECTS) $(pth_rwlock_LDADD) $(LIBS)
pth_stackalign$(EXEEXT): $(pth_stackalign_OBJECTS) $(pth_stackalign_DEPENDENCIES) 
	@rm -f pth_stackalign$(EXEEXT)
	$(LINK) $(pth_stackalign_LDFLAGS) $(pth_stackalign_OBJECTS) $(pth_stackalign_LDADD) $(LIBS)
rcrl$(EXEEXT): $(rcrl_OBJECTS) $(rcrl_DEPENDENCIES) 
	@rm -f rcrl$(EXEEXT)
	$(LINK) $(rcrl_LDFLAGS) $(rcrl_OBJECTS) $(rcrl_LDADD) $(LIBS)
readline1$(EXEEXT): $(readline1_OBJECTS) $(readline1_DEPENDENCIES) 
	@rm -f readline1$(EXEEXT)
	$(LINK) $(readline1_LDFLAGS) $(readline1_OBJECTS) $(readline1_LDADD) $(LIBS)
res_search$(EXEEXT): $(res_search_OBJECTS) $(res_search_DEPENDENCIES) 
	@rm -f res_search$(EXEEXT)
	$(LINK) $(res_search_LDFLAGS) $(res_search_OBJECTS) $(res_search_LDADD) $(LIBS)
resolv$(EXEEXT): $(resolv_OBJECTS) $(resolv_DEPENDENCIES) 
	@rm -f resolv$(EXEEXT)
	$(LINK) $(resolv_LDFLAGS) $(resolv_OBJECTS) $(resolv_LDADD) $(LIBS)
rlimit_nofile$(EXEEXT): $(rlimit_nofile_OBJECTS) $(rlimit_nofile_DEPENDENCIES) 
	@rm -f rlimit_nofile$(EXEEXT)
	$(LINK) $(rlimit_nofile_LDFLAGS) $(rlimit_nofile_OBJECTS) $(rlimit_nofile_LDADD) $(LIBS)
selfrun$(EXEEXT): $(selfrun_OBJECTS) $(selfrun_DEPENDENCIES) 
	@rm -f selfrun$(EXEEXT)
	$(LINK) $(selfrun_LDFLAGS) $(selfrun_OBJECTS) $(selfrun_LDADD) $(LIBS)
sem$(EXEEXT): $(sem_OBJECTS) $(sem_DEPENDENCIES) 
	@rm -f sem$(EXEEXT)
	$(LINK) $(sem_LDFLAGS) $(sem_OBJECTS) $(sem_LDADD) $(LIBS)
semlimit$(EXEEXT): $(semlimit_OBJECTS) $(semlimit_DEPENDENCIES) 
	@rm -f semlimit$(EXEEXT)
	$(LINK) $(semlimit_LDFLAGS) $(semlimit_OBJECTS) $(semlimit_LDADD) $(LIBS)
sha1_test$(EXEEXT): $(sha1_test_OBJECTS) $(sha1_test_DEPENDENCIES) 
	@rm -f sha1_test$(EXEEXT)
	$(LINK) $(sha1_test_LDFLAGS) $(sha1_test_OBJECTS) $(sha1_test_LDADD) $(LIBS)
shortpush$(EXEEXT): $(shortpush_OBJECTS) $(shortpush_DEPENDENCIES) 
	@rm -f shortpush$(EXEEXT)
	$(LINK) $(shortpush_LDFLAGS) $(shortpush_OBJECTS) $(shortpush_LDADD) $(LIBS)
shorts$(EXEEXT): $(shorts_OBJECTS) $(shorts_DEPENDENCIES) 
	@rm -f shorts$(EXEEXT)
	$(LINK) $(shorts_LDFLAGS) $(shorts_OBJECTS) $(shorts_LDADD) $(LIBS)
sigstackgrowth$(EXEEXT): $(sigstackgrowth_OBJECTS) $(sigstackgrowth_DEPENDENCIES) 
	@rm -f sigstackgrowth$(EXEEXT)
	$(LINK) $(sigstackgrowth_LDFLAGS) $(sigstackgrowth_OBJECTS) $(sigstackgrowth_LDADD) $(LIBS)
stackgrowth$(EXEEXT): $(stackgrowth_OBJECTS) $(stackgrowth_DEPENDENCIES) 
	@rm -f stackgrowth$(EXEEXT)
	$(LINK) $(stackgrowth_LDFLAGS) $(stackgrowth_OBJECTS) $(stackgrowth_LDADD) $(LIBS)
syscall-restart1$(EXEEXT): $(syscall_restart1_OBJECTS) $(syscall_restart1_DEPENDENCIES) 
	@rm -f syscall-restart1$(EXEEXT)
	$(LINK) $(syscall_restart1_LDFLAGS) $(syscall_restart1_OBJECTS) $(syscall_restart1_LDADD) $(LIBS)
syscall-restart2$(EXEEXT): $(syscall_restart2_OBJECTS) $(syscall_restart2_DEPENDENCIES) 
	@rm -f syscall-restart2$(EXEEXT)
	$(LINK) $(syscall_restart2_LDFLAGS) $(syscall_restart2_OBJECTS) $(syscall_restart2_LDADD) $(LIBS)
system$(EXEEXT): $(system_OBJECTS) $(system_DEPENDENCIES) 
	@rm -f system$(EXEEXT)
	$(LINK) $(system_LDFLAGS) $(system_OBJECTS) $(system_LDADD) $(LIBS)
thread-exits$(EXEEXT): $(thread_exits_OBJECTS) $(thread_exits_DEPENDENCIES) 
	@rm -f thread-exits$(EXEEXT)
	$(LINK) $(thread_exits_LDFLAGS) $(thread_exits_OBJECTS) $(thread_exits_LDADD) $(LIBS)
threaded-fork$(EXEEXT): $(threaded_fork_OBJECTS) $(threaded_fork_DEPENDENCIES) 
	@rm -f threaded-fork$(EXEEXT)
	$(LINK) $(threaded_fork_LDFLAGS) $(threaded_fork_OBJECTS) $(threaded_fork_LDADD) $(LIBS)
threadederrno$(EXEEXT): $(threadederrno_OBJECTS) $(threadederrno_DEPENDENCIES) 
	@rm -f threadederrno$(EXEEXT)
	$(LINK) $(threadederrno_LDFLAGS) $(threadederrno_OBJECTS) $(threadederrno_LDADD) $(LIBS)
tls$(EXEEXT): $(tls_OBJECTS) $(tls_DEPENDENCIES) 
	@rm -f tls$(EXEEXT)
	$(LINK) $(tls_LDFLAGS) $(tls_OBJECTS) $(tls_LDADD) $(LIBS)
tls.so$(EXEEXT): $(tls_so_OBJECTS) $(tls_so_DEPENDENCIES) 
	@rm -f tls.so$(EXEEXT)
	$(LINK) $(tls_so_LDFLAGS) $(tls_so_OBJECTS) $(tls_so_LDADD) $(LIBS)
tls2.so$(EXEEXT): $(tls2_so_OBJECTS) $(tls2_so_DEPENDENCIES) 
	@rm -f tls2.so$(EXEEXT)
	$(LINK) $(tls2_so_LDFLAGS) $(tls2_so_OBJECTS) $(tls2_so_LDADD) $(LIBS)
vgprintf$(EXEEXT): $(vgprintf_OBJECTS) $(vgprintf_DEPENDENCIES) 
	@rm -f vgprintf$(EXEEXT)
	$(LINK) $(vgprintf_LDFLAGS) $(vgprintf_OBJECTS) $(vgprintf_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ansi-ansi.Po
include ./$(DEPDIR)/args.Po
include ./$(DEPDIR)/async-sigs.Po
include ./$(DEPDIR)/bitfield1.Po
include ./$(DEPDIR)/bug129866.Po
include ./$(DEPDIR)/closeall.Po
include ./$(DEPDIR)/coolo_sigaction.Po
include ./$(DEPDIR)/coolo_strlen.Po
include ./$(DEPDIR)/discard.Po
include ./$(DEPDIR)/exec-sigmask.Po
include ./$(DEPDIR)/execve.Po
include ./$(DEPDIR)/faultstatus.Po
include ./$(DEPDIR)/fcntl_setown.Po
include ./$(DEPDIR)/fdleak_cmsg.Po
include ./$(DEPDIR)/fdleak_creat.Po
include ./$(DEPDIR)/fdleak_dup.Po
include ./$(DEPDIR)/fdleak_dup2.Po
include ./$(DEPDIR)/fdleak_fcntl.Po
include ./$(DEPDIR)/fdleak_ipv4.Po
include ./$(DEPDIR)/fdleak_open.Po
include ./$(DEPDIR)/fdleak_pipe.Po
include ./$(DEPDIR)/fdleak_socketpair.Po
include ./$(DEPDIR)/floored.Po
include ./$(DEPDIR)/fork.Po
include ./$(DEPDIR)/fucomip.Po
include ./$(DEPDIR)/gxx304.Po
include ./$(DEPDIR)/manythreads.Po
include ./$(DEPDIR)/map_unaligned.Po
include ./$(DEPDIR)/map_unmap.Po
include ./$(DEPDIR)/mq.Po
include ./$(DEPDIR)/munmap_exe.Po
include ./$(DEPDIR)/nestedfns-nestedfns.Po
include ./$(DEPDIR)/pending.Po
include ./$(DEPDIR)/pth_atfork1.Po
include ./$(DEPDIR)/pth_blockedsig.Po
include ./$(DEPDIR)/pth_cancel1-pth_cancel1.Po
include ./$(DEPDIR)/pth_cancel2.Po
include ./$(DEPDIR)/pth_cvsimple.Po
include ./$(DEPDIR)/pth_empty.Po
include ./$(DEPDIR)/pth_exit.Po
include ./$(DEPDIR)/pth_exit2.Po
include ./$(DEPDIR)/pth_mutexspeed.Po
include ./$(DEPDIR)/pth_once.Po
include ./$(DEPDIR)/pth_rwlock.Po
include ./$(DEPDIR)/pth_stackalign.Po
include ./$(DEPDIR)/rcrl.Po
include ./$(DEPDIR)/readline1.Po
include ./$(DEPDIR)/res_search.Po
include ./$(DEPDIR)/resolv.Po
include ./$(DEPDIR)/rlimit_nofile.Po
include ./$(DEPDIR)/selfrun.Po
include ./$(DEPDIR)/sem.Po
include ./$(DEPDIR)/semlimit.Po
include ./$(DEPDIR)/sha1_test.Po
include ./$(DEPDIR)/shortpush.Po
include ./$(DEPDIR)/shorts.Po
include ./$(DEPDIR)/sigstackgrowth.Po
include ./$(DEPDIR)/stackgrowth.Po
include ./$(DEPDIR)/syscall-restart1.Po
include ./$(DEPDIR)/syscall-restart2.Po
include ./$(DEPDIR)/system.Po
include ./$(DEPDIR)/thread-exits.Po
include ./$(DEPDIR)/threaded-fork.Po
include ./$(DEPDIR)/threadederrno.Po
include ./$(DEPDIR)/tls.Po
include ./$(DEPDIR)/tls2.Po
include ./$(DEPDIR)/tls2_so.Po
include ./$(DEPDIR)/tls_so-tls_so.Po
include ./$(DEPDIR)/vgprintf.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

ansi-ansi.o: ansi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ansi_CFLAGS) $(CFLAGS) -MT ansi-ansi.o -MD -MP -MF "$(DEPDIR)/ansi-ansi.Tpo" -c -o ansi-ansi.o `test -f 'ansi.c' || echo '$(srcdir)/'`ansi.c; \
	then mv -f "$(DEPDIR)/ansi-ansi.Tpo" "$(DEPDIR)/ansi-ansi.Po"; else rm -f "$(DEPDIR)/ansi-ansi.Tpo"; exit 1; fi
#	source='ansi.c' object='ansi-ansi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ansi_CFLAGS) $(CFLAGS) -c -o ansi-ansi.o `test -f 'ansi.c' || echo '$(srcdir)/'`ansi.c

ansi-ansi.obj: ansi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ansi_CFLAGS) $(CFLAGS) -MT ansi-ansi.obj -MD -MP -MF "$(DEPDIR)/ansi-ansi.Tpo" -c -o ansi-ansi.obj `if test -f 'ansi.c'; then $(CYGPATH_W) 'ansi.c'; else $(CYGPATH_W) '$(srcdir)/ansi.c'; fi`; \
	then mv -f "$(DEPDIR)/ansi-ansi.Tpo" "$(DEPDIR)/ansi-ansi.Po"; else rm -f "$(DEPDIR)/ansi-ansi.Tpo"; exit 1; fi
#	source='ansi.c' object='ansi-ansi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ansi_CFLAGS) $(CFLAGS) -c -o ansi-ansi.obj `if test -f 'ansi.c'; then $(CYGPATH_W) 'ansi.c'; else $(CYGPATH_W) '$(srcdir)/ansi.c'; fi`

nestedfns-nestedfns.o: nestedfns.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nestedfns_CFLAGS) $(CFLAGS) -MT nestedfns-nestedfns.o -MD -MP -MF "$(DEPDIR)/nestedfns-nestedfns.Tpo" -c -o nestedfns-nestedfns.o `test -f 'nestedfns.c' || echo '$(srcdir)/'`nestedfns.c; \
	then mv -f "$(DEPDIR)/nestedfns-nestedfns.Tpo" "$(DEPDIR)/nestedfns-nestedfns.Po"; else rm -f "$(DEPDIR)/nestedfns-nestedfns.Tpo"; exit 1; fi
#	source='nestedfns.c' object='nestedfns-nestedfns.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nestedfns_CFLAGS) $(CFLAGS) -c -o nestedfns-nestedfns.o `test -f 'nestedfns.c' || echo '$(srcdir)/'`nestedfns.c

nestedfns-nestedfns.obj: nestedfns.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nestedfns_CFLAGS) $(CFLAGS) -MT nestedfns-nestedfns.obj -MD -MP -MF "$(DEPDIR)/nestedfns-nestedfns.Tpo" -c -o nestedfns-nestedfns.obj `if test -f 'nestedfns.c'; then $(CYGPATH_W) 'nestedfns.c'; else $(CYGPATH_W) '$(srcdir)/nestedfns.c'; fi`; \
	then mv -f "$(DEPDIR)/nestedfns-nestedfns.Tpo" "$(DEPDIR)/nestedfns-nestedfns.Po"; else rm -f "$(DEPDIR)/nestedfns-nestedfns.Tpo"; exit 1; fi
#	source='nestedfns.c' object='nestedfns-nestedfns.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nestedfns_CFLAGS) $(CFLAGS) -c -o nestedfns-nestedfns.obj `if test -f 'nestedfns.c'; then $(CYGPATH_W) 'nestedfns.c'; else $(CYGPATH_W) '$(srcdir)/nestedfns.c'; fi`

pth_cancel1-pth_cancel1.o: pth_cancel1.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pth_cancel1_CFLAGS) $(CFLAGS) -MT pth_cancel1-pth_cancel1.o -MD -MP -MF "$(DEPDIR)/pth_cancel1-pth_cancel1.Tpo" -c -o pth_cancel1-pth_cancel1.o `test -f 'pth_cancel1.c' || echo '$(srcdir)/'`pth_cancel1.c; \
	then mv -f "$(DEPDIR)/pth_cancel1-pth_cancel1.Tpo" "$(DEPDIR)/pth_cancel1-pth_cancel1.Po"; else rm -f "$(DEPDIR)/pth_cancel1-pth_cancel1.Tpo"; exit 1; fi
#	source='pth_cancel1.c' object='pth_cancel1-pth_cancel1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pth_cancel1_CFLAGS) $(CFLAGS) -c -o pth_cancel1-pth_cancel1.o `test -f 'pth_cancel1.c' || echo '$(srcdir)/'`pth_cancel1.c

pth_cancel1-pth_cancel1.obj: pth_cancel1.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pth_cancel1_CFLAGS) $(CFLAGS) -MT pth_cancel1-pth_cancel1.obj -MD -MP -MF "$(DEPDIR)/pth_cancel1-pth_cancel1.Tpo" -c -o pth_cancel1-pth_cancel1.obj `if test -f 'pth_cancel1.c'; then $(CYGPATH_W) 'pth_cancel1.c'; else $(CYGPATH_W) '$(srcdir)/pth_cancel1.c'; fi`; \
	then mv -f "$(DEPDIR)/pth_cancel1-pth_cancel1.Tpo" "$(DEPDIR)/pth_cancel1-pth_cancel1.Po"; else rm -f "$(DEPDIR)/pth_cancel1-pth_cancel1.Tpo"; exit 1; fi
#	source='pth_cancel1.c' object='pth_cancel1-pth_cancel1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pth_cancel1_CFLAGS) $(CFLAGS) -c -o pth_cancel1-pth_cancel1.obj `if test -f 'pth_cancel1.c'; then $(CYGPATH_W) 'pth_cancel1.c'; else $(CYGPATH_W) '$(srcdir)/pth_cancel1.c'; fi`

tls_so-tls_so.o: tls_so.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_so_CFLAGS) $(CFLAGS) -MT tls_so-tls_so.o -MD -MP -MF "$(DEPDIR)/tls_so-tls_so.Tpo" -c -o tls_so-tls_so.o `test -f 'tls_so.c' || echo '$(srcdir)/'`tls_so.c; \
	then mv -f "$(DEPDIR)/tls_so-tls_so.Tpo" "$(DEPDIR)/tls_so-tls_so.Po"; else rm -f "$(DEPDIR)/tls_so-tls_so.Tpo"; exit 1; fi
#	source='tls_so.c' object='tls_so-tls_so.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_so_CFLAGS) $(CFLAGS) -c -o tls_so-tls_so.o `test -f 'tls_so.c' || echo '$(srcdir)/'`tls_so.c

tls_so-tls_so.obj: tls_so.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_so_CFLAGS) $(CFLAGS) -MT tls_so-tls_so.obj -MD -MP -MF "$(DEPDIR)/tls_so-tls_so.Tpo" -c -o tls_so-tls_so.obj `if test -f 'tls_so.c'; then $(CYGPATH_W) 'tls_so.c'; else $(CYGPATH_W) '$(srcdir)/tls_so.c'; fi`; \
	then mv -f "$(DEPDIR)/tls_so-tls_so.Tpo" "$(DEPDIR)/tls_so-tls_so.Po"; else rm -f "$(DEPDIR)/tls_so-tls_so.Tpo"; exit 1; fi
#	source='tls_so.c' object='tls_so-tls_so.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_so_CFLAGS) $(CFLAGS) -c -o tls_so-tls_so.obj `if test -f 'tls_so.c'; then $(CYGPATH_W) 'tls_so.c'; else $(CYGPATH_W) '$(srcdir)/tls_so.c'; fi`

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(SCRIPTS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-local:
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	check-local clean clean-checkPROGRAMS clean-generic \
	clean-local clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am


# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
#check-local:
#	for f in $(check_PROGRAMS) ; do \
#	    if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
#	        echo "dsymutil $$f"; \
#	        dsymutil $$f; \
#	    fi \
#	done

#clean-local:
#	for f in $(check_PROGRAMS) ; do \
#	    rm -rf $$f.dSYM; \
#	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
