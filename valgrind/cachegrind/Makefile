# Makefile.in generated by automake 1.9.6 from Makefile.am.
# cachegrind/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file contains things shared by coregrind/Makefile.am and tool
# Makefile.am files.  Also auxprogs/Makefile.am.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/valgrind
pkglibdir = $(libdir)/valgrind
pkgincludedir = $(includedir)/valgrind
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux
host_triplet = i686-pc-linux
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/cg_annotate.in \
	$(top_srcdir)/Makefile.all.am \
	$(top_srcdir)/Makefile.core-tool.am \
	$(top_srcdir)/Makefile.flags.am $(top_srcdir)/Makefile.tool.am
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8)
am__append_1 = cachegrind-x86-linux
#am__append_2 = cachegrind-amd64-linux
#am__append_3 = cachegrind-ppc32-linux
#am__append_4 = cachegrind-ppc64-linux
#am__append_5 = cachegrind-ppc32-aix5
#am__append_6 = cachegrind-ppc64-aix5
#am__append_7 = cachegrind-x86-darwin
#am__append_8 = cachegrind-amd64-darwin
bin_PROGRAMS = cg_merge$(EXEEXT)
subdir = cachegrind
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = cg_annotate
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
am__EXEEXT_1 = cachegrind-x86-linux$(EXEEXT)
#am__EXEEXT_2 = cachegrind-amd64-linux$(EXEEXT)
#am__EXEEXT_3 = cachegrind-ppc32-linux$(EXEEXT)
#am__EXEEXT_4 = cachegrind-ppc64-linux$(EXEEXT)
#am__EXEEXT_5 = cachegrind-ppc32-aix5$(EXEEXT)
#am__EXEEXT_6 = cachegrind-ppc64-aix5$(EXEEXT)
#am__EXEEXT_7 = cachegrind-x86-darwin$(EXEEXT)
#am__EXEEXT_8 = cachegrind-amd64-darwin$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__objects_1 = cachegrind_amd64_darwin-cg_main.$(OBJEXT)
am__objects_2 = cachegrind_amd64_darwin-cg-amd64.$(OBJEXT)
am_cachegrind_amd64_darwin_OBJECTS = $(am__objects_1) $(am__objects_2)
cachegrind_amd64_darwin_OBJECTS =  \
	$(am_cachegrind_amd64_darwin_OBJECTS)
am__DEPENDENCIES_1 =  \
	$(top_builddir)/coregrind/libcoregrind-amd64-darwin.a \
	$(top_srcdir)/VEX/libvex-amd64-darwin.a
am__DEPENDENCIES_2 =
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__objects_3 = cachegrind_amd64_linux-cg_main.$(OBJEXT)
am__objects_4 = cachegrind_amd64_linux-cg-amd64.$(OBJEXT)
am_cachegrind_amd64_linux_OBJECTS = $(am__objects_3) $(am__objects_4)
cachegrind_amd64_linux_OBJECTS = $(am_cachegrind_amd64_linux_OBJECTS)
am__DEPENDENCIES_4 =  \
	$(top_builddir)/coregrind/libcoregrind-amd64-linux.a \
	$(top_srcdir)/VEX/libvex-amd64-linux.a
am__DEPENDENCIES_5 = $(am__DEPENDENCIES_4) $(am__DEPENDENCIES_2)
am__objects_5 = cachegrind_ppc32_aix5-cg_main.$(OBJEXT)
am__objects_6 = cachegrind_ppc32_aix5-cg-ppc32.$(OBJEXT)
am_cachegrind_ppc32_aix5_OBJECTS = $(am__objects_5) $(am__objects_6)
cachegrind_ppc32_aix5_OBJECTS = $(am_cachegrind_ppc32_aix5_OBJECTS)
am__DEPENDENCIES_6 =  \
	$(top_builddir)/coregrind/libcoregrind-ppc32-aix5.a \
	$(top_srcdir)/VEX/libvex-ppc32-aix5.a
am__DEPENDENCIES_7 = $(am__DEPENDENCIES_6) $(am__DEPENDENCIES_2)
am__objects_7 = cachegrind_ppc32_linux-cg_main.$(OBJEXT)
am__objects_8 = cachegrind_ppc32_linux-cg-ppc32.$(OBJEXT)
am_cachegrind_ppc32_linux_OBJECTS = $(am__objects_7) $(am__objects_8)
cachegrind_ppc32_linux_OBJECTS = $(am_cachegrind_ppc32_linux_OBJECTS)
am__DEPENDENCIES_8 =  \
	$(top_builddir)/coregrind/libcoregrind-ppc32-linux.a \
	$(top_srcdir)/VEX/libvex-ppc32-linux.a
am__DEPENDENCIES_9 = $(am__DEPENDENCIES_8) $(am__DEPENDENCIES_2)
am__objects_9 = cachegrind_ppc64_aix5-cg_main.$(OBJEXT)
am__objects_10 = cachegrind_ppc64_aix5-cg-ppc64.$(OBJEXT)
am_cachegrind_ppc64_aix5_OBJECTS = $(am__objects_9) $(am__objects_10)
cachegrind_ppc64_aix5_OBJECTS = $(am_cachegrind_ppc64_aix5_OBJECTS)
am__DEPENDENCIES_10 =  \
	$(top_builddir)/coregrind/libcoregrind-ppc64-aix5.a \
	$(top_srcdir)/VEX/libvex-ppc64-aix5.a
am__DEPENDENCIES_11 = $(am__DEPENDENCIES_10) $(am__DEPENDENCIES_2)
am__objects_11 = cachegrind_ppc64_linux-cg_main.$(OBJEXT)
am__objects_12 = cachegrind_ppc64_linux-cg-ppc64.$(OBJEXT)
am_cachegrind_ppc64_linux_OBJECTS = $(am__objects_11) \
	$(am__objects_12)
cachegrind_ppc64_linux_OBJECTS = $(am_cachegrind_ppc64_linux_OBJECTS)
am__DEPENDENCIES_12 =  \
	$(top_builddir)/coregrind/libcoregrind-ppc64-linux.a \
	$(top_srcdir)/VEX/libvex-ppc64-linux.a
am__DEPENDENCIES_13 = $(am__DEPENDENCIES_12) $(am__DEPENDENCIES_2)
am__objects_13 = cachegrind_x86_darwin-cg_main.$(OBJEXT)
am__objects_14 = cachegrind_x86_darwin-cg-x86.$(OBJEXT)
am_cachegrind_x86_darwin_OBJECTS = $(am__objects_13) $(am__objects_14)
cachegrind_x86_darwin_OBJECTS = $(am_cachegrind_x86_darwin_OBJECTS)
am__DEPENDENCIES_14 =  \
	$(top_builddir)/coregrind/libcoregrind-x86-darwin.a \
	$(top_srcdir)/VEX/libvex-x86-darwin.a
am__DEPENDENCIES_15 = $(am__DEPENDENCIES_14) $(am__DEPENDENCIES_2)
am__objects_15 = cachegrind_x86_linux-cg_main.$(OBJEXT)
am__objects_16 = cachegrind_x86_linux-cg-x86.$(OBJEXT)
am_cachegrind_x86_linux_OBJECTS = $(am__objects_15) $(am__objects_16)
cachegrind_x86_linux_OBJECTS = $(am_cachegrind_x86_linux_OBJECTS)
am__DEPENDENCIES_16 =  \
	$(top_builddir)/coregrind/libcoregrind-x86-linux.a \
	$(top_srcdir)/VEX/libvex-x86-linux.a
am__DEPENDENCIES_17 = $(am__DEPENDENCIES_16) $(am__DEPENDENCIES_2)
am_cg_merge_OBJECTS = cg_merge-cg_merge.$(OBJEXT)
cg_merge_OBJECTS = $(am_cg_merge_OBJECTS)
cg_merge_LDADD = $(LDADD)
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(cachegrind_amd64_darwin_SOURCES) \
	$(cachegrind_amd64_linux_SOURCES) \
	$(cachegrind_ppc32_aix5_SOURCES) \
	$(cachegrind_ppc32_linux_SOURCES) \
	$(cachegrind_ppc64_aix5_SOURCES) \
	$(cachegrind_ppc64_linux_SOURCES) \
	$(cachegrind_x86_darwin_SOURCES) \
	$(cachegrind_x86_linux_SOURCES) $(cg_merge_SOURCES)
DIST_SOURCES = $(cachegrind_amd64_darwin_SOURCES) \
	$(cachegrind_amd64_linux_SOURCES) \
	$(cachegrind_ppc32_aix5_SOURCES) \
	$(cachegrind_ppc32_linux_SOURCES) \
	$(cachegrind_ppc64_aix5_SOURCES) \
	$(cachegrind_ppc64_linux_SOURCES) \
	$(cachegrind_x86_darwin_SOURCES) \
	$(cachegrind_x86_linux_SOURCES) $(cg_merge_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = tar
AR = /usr/bin/ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.9
AWK = gawk
BOOST_CFLAGS = 
BOOST_LIBS = 
BUILD_MPIWRAP_PRI_FALSE = #
BUILD_MPIWRAP_PRI_TRUE = 
BUILD_MPIWRAP_SEC_FALSE = 
BUILD_MPIWRAP_SEC_TRUE = #
BUILD_SSE3_TESTS_FALSE = #
BUILD_SSE3_TESTS_TRUE = 
BUILD_SSSE3_TESTS_FALSE = 
BUILD_SSSE3_TESTS_TRUE = #
CC = gcc
CCAS = gcc
CCASFLAGS = -Wno-long-long
CCDEPMODE = depmode=gcc3
CFLAGS = -Wno-long-long -Wno-pointer-sign -Wdeclaration-after-statement -fno-stack-protector
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFAULT_SUPP = exp-ptrcheck.supp xfree-3.supp xfree-4.supp glibc-2.X-drd.supp glibc-2.34567-NPTL-helgrind.supp glibc-2.3.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
DISTCHECK_CONFIGURE_FLAGS = --with-vex=$(top_srcdir)/VEX
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_M32 = -m32
FLAG_M64 = -m64
FLAG_MAIX32 = 
FLAG_MAIX64 = 
FLAG_MMMX = -mmmx
FLAG_MSSE = -msse
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_WDECL_AFTER_STMT = -Wdeclaration-after-statement
FLAG_W_EXTRA = -Wextra
FLAG_W_NO_FORMAT_ZERO_LENGTH = -Wno-format-zero-length
GDB = /usr/bin/gdb
GLIBC_VERSION = 2.3
GREP = /bin/grep
HAS_ALTIVEC_FALSE = 
HAS_ALTIVEC_TRUE = #
HAVE_ALTIVEC_H_FALSE = 
HAVE_ALTIVEC_H_TRUE = #
HAVE_BOOST_1_35_FALSE = 
HAVE_BOOST_1_35_TRUE = #
HAVE_BUILTIN_ATOMIC_FALSE = #
HAVE_BUILTIN_ATOMIC_TRUE = 
HAVE_OPENMP_FALSE = 
HAVE_OPENMP_TRUE = #
HAVE_PTHREAD_BARRIER_FALSE = #
HAVE_PTHREAD_BARRIER_TRUE = 
HAVE_PTHREAD_CREATE_GLIBC_2_0_FALSE = #
HAVE_PTHREAD_CREATE_GLIBC_2_0_TRUE = 
HAVE_PTHREAD_MUTEX_TIMEDLOCK_FALSE = #
HAVE_PTHREAD_MUTEX_TIMEDLOCK_TRUE = 
HAVE_PTHREAD_SPINLOCK_FALSE = #
HAVE_PTHREAD_SPINLOCK_TRUE = 
HAVE_QTCORE_FALSE = #
HAVE_QTCORE_TRUE = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = makeinfo
MPI_CC = mpicc
OBJC = gcc
OBJCFLAGS = -g -O2
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.5.0.SVN
PACKAGE_TARNAME = valgrind
PACKAGE_VERSION = 3.5.0.SVN
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PREFERRED_STACK_BOUNDARY = -mpreferred-stack-boundary=2
QTCORE_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtCore  
QTCORE_LIBS = -L/build/buildd/qt4-x11-4.2.1/lib -lQtCore -lfontconfig -lz -lm -lglib-2.0 -lpthread -ldl  
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VALT_LOAD_ADDRESS = 0x38000000
VERSION = 3.5.0.SVN
VEX_DIR = $(top_srcdir)/VEX
VGCONF_ARCHS_INCLUDE_AMD64_FALSE = 
VGCONF_ARCHS_INCLUDE_AMD64_TRUE = #
VGCONF_ARCHS_INCLUDE_PPC32_FALSE = 
VGCONF_ARCHS_INCLUDE_PPC32_TRUE = #
VGCONF_ARCHS_INCLUDE_PPC64_FALSE = 
VGCONF_ARCHS_INCLUDE_PPC64_TRUE = #
VGCONF_ARCHS_INCLUDE_X86_FALSE = #
VGCONF_ARCHS_INCLUDE_X86_TRUE = 
VGCONF_ARCH_PRI = x86
VGCONF_ARCH_SEC = 
VGCONF_HAVE_PLATFORM_SEC_FALSE = 
VGCONF_HAVE_PLATFORM_SEC_TRUE = #
VGCONF_OS = linux
VGCONF_OS_IS_AIX5_FALSE = 
VGCONF_OS_IS_AIX5_TRUE = #
VGCONF_OS_IS_DARWIN_FALSE = 
VGCONF_OS_IS_DARWIN_TRUE = #
VGCONF_OS_IS_LINUX_FALSE = #
VGCONF_OS_IS_LINUX_TRUE = 
VGCONF_PLATFORMS_INCLUDE_AMD64_DARWIN_FALSE = 
VGCONF_PLATFORMS_INCLUDE_AMD64_DARWIN_TRUE = #
VGCONF_PLATFORMS_INCLUDE_AMD64_LINUX_FALSE = 
VGCONF_PLATFORMS_INCLUDE_AMD64_LINUX_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC32_AIX5_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC32_AIX5_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC32_LINUX_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC32_LINUX_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC64_AIX5_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC64_AIX5_TRUE = #
VGCONF_PLATFORMS_INCLUDE_PPC64_LINUX_FALSE = 
VGCONF_PLATFORMS_INCLUDE_PPC64_LINUX_TRUE = #
VGCONF_PLATFORMS_INCLUDE_X86_DARWIN_FALSE = 
VGCONF_PLATFORMS_INCLUDE_X86_DARWIN_TRUE = #
VGCONF_PLATFORMS_INCLUDE_X86_LINUX_FALSE = #
VGCONF_PLATFORMS_INCLUDE_X86_LINUX_TRUE = 
VGCONF_PLATFORM_PRI_CAPS = X86_LINUX
VGCONF_PLATFORM_SEC_CAPS = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_OBJC = gcc
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux
build_alias = 
build_cpu = i686
build_os = linux
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux
host_alias = 
host_cpu = i686
host_os = linux
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /afs/csail.mit.edu/u/r/rudd/research/invariants/valgrind-bak/valgrind/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /afs/csail.mit.edu/u/r/rudd/research/invariants/valgrind-bak/valgrind/inst
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
SUBDIRS = . tests docs
valdir = $(libdir)/valgrind
inplacedir = $(top_builddir)/.in_place

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
AM_CFLAGS_BASE = -O2 -g -Wmissing-prototypes -Wall -Wshadow \
                 -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
		 -Wno-format-zero-length \
                 -fno-strict-aliasing

AM_CFLAGS_PIC = -fpic -O -g -fno-omit-frame-pointer -fno-strict-aliasing

# These flags are used for building the preload shared objects.
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.
#AM_CFLAGS_PIC = -dynamic -O -g -fno-omit-frame-pointer -fno-strict-aliasing -mno-dynamic-no-pic

# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
#
# Also: in newer versions of automake (1.10 onwards?) asm files ending with
# '.S' are considered "pre-processed" (as opposed to those ending in '.s')
# and so the CPPFLAGS are passed to the assembler.  But this is not true for
# older automakes (e.g. 1.8.5, 1.9.6), sigh.  So we include
# AM_CPPFLAGS_<PLATFORM> in each AM_CCASFLAGS_<PLATFORM> variable.  This
# means some of the flags are duplicated on systems with newer versions of
# automake, but this does not really matter and seems hard to avoid.
AM_CPPFLAGS_COMMON = \
		-I$(top_srcdir) \
		-I$(top_srcdir)/include \
		-I$(top_srcdir)/VEX/pub

AM_FLAG_M3264_X86_LINUX = -m32
AM_CPPFLAGS_X86_LINUX = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_x86=1 \
			    -DVGO_linux=1 \
			    -DVGP_x86_linux=1

AM_CFLAGS_X86_LINUX = -m32 -mpreferred-stack-boundary=2 \
			 	$(AM_CFLAGS_BASE)

AM_CCASFLAGS_X86_LINUX = $(AM_CPPFLAGS_X86_LINUX) -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CPPFLAGS_AMD64_LINUX = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_amd64=1 \
			    -DVGO_linux=1 \
			    -DVGP_amd64_linux=1

AM_CFLAGS_AMD64_LINUX = -m64 -fomit-frame-pointer \
				-mpreferred-stack-boundary=2 $(AM_CFLAGS_BASE)

AM_CCASFLAGS_AMD64_LINUX = $(AM_CPPFLAGS_AMD64_LINUX) -m64 -g
AM_FLAG_M3264_PPC32_LINUX = -m32
AM_CPPFLAGS_PPC32_LINUX = $(AM_CPPFLAGS_COMMON) \
		-DVGA_ppc32=1 \
		-DVGO_linux=1 \
		-DVGP_ppc32_linux=1

AM_CFLAGS_PPC32_LINUX = -m32 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_LINUX = $(AM_CPPFLAGS_PPC32_LINUX) -m32 -g
AM_FLAG_M3264_PPC64_LINUX = -m64
AM_CPPFLAGS_PPC64_LINUX = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_ppc64=1 \
			    -DVGO_linux=1 \
			    -DVGP_ppc64_linux=1

AM_CFLAGS_PPC64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_LINUX = $(AM_CPPFLAGS_PPC64_LINUX) -m64 -g
AM_FLAG_M3264_PPC32_AIX5 = 
AM_CPPFLAGS_PPC32_AIX5 = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_ppc32=1 \
			    -DVGO_aix5=1 \
			    -DVGP_ppc32_aix5=1

AM_CFLAGS_PPC32_AIX5 =  -mcpu=powerpc $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_AIX5 = $(AM_CPPFLAGS_PPC32_AIX5) \
			     -mcpu=powerpc -g

AM_FLAG_M3264_PPC64_AIX5 = 
AM_CPPFLAGS_PPC64_AIX5 = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_ppc64=1 \
			    -DVGO_aix5=1 \
			    -DVGP_ppc64_aix5=1

AM_CFLAGS_PPC64_AIX5 =  -mcpu=powerpc64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_AIX5 = $(AM_CPPFLAGS_PPC64_AIX5) \
			     -mcpu=powerpc64 -g

AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CPPFLAGS_X86_DARWIN = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_x86=1 \
			    -DVGO_darwin=1 \
			    -DVGP_x86_darwin=1

AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector \
			    -mdynamic-no-pic

AM_CCASFLAGS_X86_DARWIN = $(AM_CPPFLAGS_X86_DARWIN) -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CPPFLAGS_AMD64_DARWIN = $(AM_CPPFLAGS_COMMON) \
			    -DVGA_amd64=1 \
			    -DVGO_darwin=1 \
			    -DVGP_amd64_darwin=1

AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector

AM_CCASFLAGS_AMD64_DARWIN = $(AM_CPPFLAGS_AMD64_DARWIN) -arch x86_64 -g

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_X86_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_X86_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_X86_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_X86_LINUX)
AM_FLAG_M3264_SEC = 
#AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_)

# Baseline link flags for making dynamic shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_COMMON_AIX5 = -nodefaultlibs -shared -Wl,-G -Wl,-bnogc
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_PPC64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  
PRELOAD_LDFLAGS_PPC64_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
LIBREPLACEMALLOC_X86_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-linux.a

LIBREPLACEMALLOC_AMD64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-linux.a

LIBREPLACEMALLOC_PPC32_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc32-linux.a

LIBREPLACEMALLOC_PPC64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc64-linux.a

LIBREPLACEMALLOC_PPC32_AIX5 = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc32-aix5.a

LIBREPLACEMALLOC_PPC64_AIX5 = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc64-aix5.a

LIBREPLACEMALLOC_X86_DARWIN = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-darwin.a

LIBREPLACEMALLOC_AMD64_DARWIN = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-darwin.a

COREGRIND_LIBS_X86_LINUX = \
	$(top_builddir)/coregrind/libcoregrind-x86-linux.a \
	$(top_srcdir)/VEX/libvex-x86-linux.a

COREGRIND_LIBS_AMD64_LINUX = \
	$(top_builddir)/coregrind/libcoregrind-amd64-linux.a \
	$(top_srcdir)/VEX/libvex-amd64-linux.a

COREGRIND_LIBS_PPC32_LINUX = \
	$(top_builddir)/coregrind/libcoregrind-ppc32-linux.a \
	$(top_srcdir)/VEX/libvex-ppc32-linux.a

COREGRIND_LIBS_PPC64_LINUX = \
	$(top_builddir)/coregrind/libcoregrind-ppc64-linux.a \
	$(top_srcdir)/VEX/libvex-ppc64-linux.a

COREGRIND_LIBS_PPC32_AIX5 = \
	$(top_builddir)/coregrind/libcoregrind-ppc32-aix5.a \
	$(top_srcdir)/VEX/libvex-ppc32-aix5.a

COREGRIND_LIBS_PPC64_AIX5 = \
	$(top_builddir)/coregrind/libcoregrind-ppc64-aix5.a \
	$(top_srcdir)/VEX/libvex-ppc64-aix5.a

COREGRIND_LIBS_X86_DARWIN = \
	$(top_builddir)/coregrind/libcoregrind-x86-darwin.a \
	$(top_srcdir)/VEX/libvex-x86-darwin.a

COREGRIND_LIBS_AMD64_DARWIN = \
	$(top_builddir)/coregrind/libcoregrind-amd64-darwin.a \
	$(top_srcdir)/VEX/libvex-amd64-darwin.a

TOOL_LDADD_COMMON = -lgcc
TOOL_LDFLAGS_COMMON_LINUX = -static \
	-Wl,-defsym,valt_load_address=0x38000000 \
	-nodefaultlibs -nostartfiles -u _start

TOOL_LDFLAGS_COMMON_AIX5 = -static -Wl,-e_start_valgrind
TOOL_LDFLAGS_COMMON_DARWIN = -nodefaultlibs -nostartfiles \
	-Wl,-u,__start -Wl,-e,__start -Wl,-bind_at_load /usr/lib/dyld

TOOL_LDADD_X86_LINUX = $(COREGRIND_LIBS_X86_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_X86_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m32 \
	-Wl,-T,$(top_builddir)/valt_load_address_x86_linux.lds

TOOL_LDADD_AMD64_LINUX = $(COREGRIND_LIBS_AMD64_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_AMD64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64 \
	-Wl,-T,$(top_builddir)/valt_load_address_amd64_linux.lds

TOOL_LDADD_PPC32_LINUX = $(COREGRIND_LIBS_PPC32_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_PPC32_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m32 \
	-Wl,-T,$(top_builddir)/valt_load_address_ppc32_linux.lds

TOOL_LDADD_PPC64_LINUX = $(COREGRIND_LIBS_PPC64_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_PPC64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64 \
	-Wl,-T,$(top_builddir)/valt_load_address_ppc64_linux.lds

TOOL_LDADD_PPC32_AIX5 = $(COREGRIND_LIBS_PPC32_AIX5) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_PPC32_AIX5 = \
	$(TOOL_LDFLAGS_COMMON_AIX5) 

TOOL_LDADD_PPC64_AIX5 = $(COREGRIND_LIBS_PPC64_AIX5) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_PPC64_AIX5 = \
	$(TOOL_LDFLAGS_COMMON_AIX5)  -Wl,-bbigtoc

TOOL_LDADD_X86_DARWIN = $(COREGRIND_LIBS_X86_DARWIN) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_X86_DARWIN = \
	$(TOOL_LDFLAGS_COMMON_DARWIN) -arch i386 \
	-Wl,-seg1addr,0xf0080000 \
	-Wl,-stack_addr,0xf0080000 -Wl,-stack_size,0x80000 \
	-Wl,-pagezero_size,0xf0000000


# pagezero can't be unmapped and remapped. Use stack instead.
# GrP fixme no stack guard
TOOL_LDADD_AMD64_DARWIN = $(COREGRIND_LIBS_AMD64_DARWIN) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_AMD64_DARWIN = \
	$(TOOL_LDFLAGS_COMMON_DARWIN) -arch x86_64 \
	-Wl,-seg1addr,0x7fff55000000 \
	-Wl,-stack_addr,0x7fff50080000 -Wl,-stack_size,0x7ffe50080000 \
	-Wl,-pagezero_size,0x100000000

LIBREPLACEMALLOC_LDFLAGS_X86_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_X86_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_AMD64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_AMD64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC32_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC32_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC32_AIX5 = \
	$(LIBREPLACEMALLOC_PPC32_AIX5)

LIBREPLACEMALLOC_LDFLAGS_PPC64_AIX5 = \
	$(LIBREPLACEMALLOC_PPC64_AIX5)

LIBREPLACEMALLOC_LDFLAGS_X86_DARWIN = \
	$(LIBREPLACEMALLOC_X86_DARWIN)

LIBREPLACEMALLOC_LDFLAGS_AMD64_DARWIN = \
	$(LIBREPLACEMALLOC_AMD64_DARWIN)

bin_SCRIPTS = cg_annotate
noinst_HEADERS = cg_arch.h cg_sim.c cg_branchpred.c
cg_merge_SOURCES = cg_merge.c
cg_merge_CPPFLAGS = $(AM_CPPFLAGS_PRI)
cg_merge_CFLAGS = $(AM_CFLAGS_PRI)
cg_merge_CCASFLAGS = $(AM_CCASFLAGS_PRI)
cg_merge_LDFLAGS = $(AM_CFLAGS_PRI)
CACHEGRIND_SOURCES_COMMON = cg_main.c
CACHEGRIND_SOURCES_X86 = cg-x86.c
CACHEGRIND_SOURCES_AMD64 = cg-amd64.c
CACHEGRIND_SOURCES_PPC32 = cg-ppc32.c
CACHEGRIND_SOURCES_PPC64 = cg-ppc64.c
cachegrind_x86_linux_SOURCES = $(CACHEGRIND_SOURCES_COMMON) $(CACHEGRIND_SOURCES_X86)
cachegrind_x86_linux_CPPFLAGS = $(AM_CPPFLAGS_X86_LINUX)
cachegrind_x86_linux_CFLAGS = $(AM_CFLAGS_X86_LINUX)
cachegrind_x86_linux_DEPENDENCIES = $(COREGRIND_LIBS_X86_LINUX)
cachegrind_x86_linux_LDADD = $(TOOL_LDADD_X86_LINUX)
cachegrind_x86_linux_LDFLAGS = $(TOOL_LDFLAGS_X86_LINUX)
cachegrind_amd64_linux_SOURCES = $(CACHEGRIND_SOURCES_COMMON) $(CACHEGRIND_SOURCES_AMD64)
cachegrind_amd64_linux_CPPFLAGS = $(AM_CPPFLAGS_AMD64_LINUX)
cachegrind_amd64_linux_CFLAGS = $(AM_CFLAGS_AMD64_LINUX)
cachegrind_amd64_linux_DEPENDENCIES = $(COREGRIND_LIBS_AMD64_LINUX)
cachegrind_amd64_linux_LDADD = $(TOOL_LDADD_AMD64_LINUX)
cachegrind_amd64_linux_LDFLAGS = $(TOOL_LDFLAGS_AMD64_LINUX)
cachegrind_ppc32_linux_SOURCES = $(CACHEGRIND_SOURCES_COMMON) $(CACHEGRIND_SOURCES_PPC32)
cachegrind_ppc32_linux_CPPFLAGS = $(AM_CPPFLAGS_PPC32_LINUX)
cachegrind_ppc32_linux_CFLAGS = $(AM_CFLAGS_PPC32_LINUX)
cachegrind_ppc32_linux_DEPENDENCIES = $(COREGRIND_LIBS_PPC32_LINUX)
cachegrind_ppc32_linux_LDADD = $(TOOL_LDADD_PPC32_LINUX)
cachegrind_ppc32_linux_LDFLAGS = $(TOOL_LDFLAGS_PPC32_LINUX)
cachegrind_ppc64_linux_SOURCES = $(CACHEGRIND_SOURCES_COMMON) $(CACHEGRIND_SOURCES_PPC64)
cachegrind_ppc64_linux_CPPFLAGS = $(AM_CPPFLAGS_PPC64_LINUX)
cachegrind_ppc64_linux_CFLAGS = $(AM_CFLAGS_PPC64_LINUX)
cachegrind_ppc64_linux_DEPENDENCIES = $(COREGRIND_LIBS_PPC64_LINUX)
cachegrind_ppc64_linux_LDADD = $(TOOL_LDADD_PPC64_LINUX)
cachegrind_ppc64_linux_LDFLAGS = $(TOOL_LDFLAGS_PPC64_LINUX)
cachegrind_ppc32_aix5_SOURCES = $(CACHEGRIND_SOURCES_COMMON) $(CACHEGRIND_SOURCES_PPC32)
cachegrind_ppc32_aix5_CPPFLAGS = $(AM_CPPFLAGS_PPC32_AIX5)
cachegrind_ppc32_aix5_CFLAGS = $(AM_CFLAGS_PPC32_AIX5)
cachegrind_ppc32_aix5_DEPENDENCIES = $(COREGRIND_LIBS_PPC32_AIX5)
cachegrind_ppc32_aix5_LDADD = $(TOOL_LDADD_PPC32_AIX5)
cachegrind_ppc32_aix5_LDFLAGS = $(TOOL_LDFLAGS_PPC32_AIX5)
cachegrind_ppc64_aix5_SOURCES = $(CACHEGRIND_SOURCES_COMMON) $(CACHEGRIND_SOURCES_PPC64)
cachegrind_ppc64_aix5_CPPFLAGS = $(AM_CPPFLAGS_PPC64_AIX5)
cachegrind_ppc64_aix5_CFLAGS = $(AM_CFLAGS_PPC64_AIX5)
cachegrind_ppc64_aix5_DEPENDENCIES = $(COREGRIND_LIBS_PPC64_AIX5)
cachegrind_ppc64_aix5_LDADD = $(TOOL_LDADD_PPC64_AIX5)
cachegrind_ppc64_aix5_LDFLAGS = $(TOOL_LDFLAGS_PPC64_AIX5)
cachegrind_x86_darwin_SOURCES = $(CACHEGRIND_SOURCES_COMMON) $(CACHEGRIND_SOURCES_X86)
cachegrind_x86_darwin_CPPFLAGS = $(AM_CPPFLAGS_X86_DARWIN)
cachegrind_x86_darwin_CFLAGS = $(AM_CFLAGS_X86_DARWIN)
cachegrind_x86_darwin_DEPENDENCIES = $(COREGRIND_LIBS_X86_DARWIN)
cachegrind_x86_darwin_LDADD = $(TOOL_LDADD_X86_DARWIN)
cachegrind_x86_darwin_LDFLAGS = $(TOOL_LDFLAGS_X86_DARWIN)
cachegrind_amd64_darwin_SOURCES = $(CACHEGRIND_SOURCES_COMMON) $(CACHEGRIND_SOURCES_AMD64)
cachegrind_amd64_darwin_CPPFLAGS = $(AM_CPPFLAGS_AMD64_DARWIN)
cachegrind_amd64_darwin_CFLAGS = $(AM_CFLAGS_AMD64_DARWIN)
cachegrind_amd64_darwin_DEPENDENCIES = $(COREGRIND_LIBS_AMD64_DARWIN)
cachegrind_amd64_darwin_LDADD = $(TOOL_LDADD_AMD64_DARWIN)
cachegrind_amd64_darwin_LDFLAGS = $(TOOL_LDFLAGS_AMD64_DARWIN)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool.am $(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.flags.am $(top_srcdir)/Makefile.core-tool.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  cachegrind/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  cachegrind/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
cg_annotate: $(top_builddir)/config.status $(srcdir)/cg_annotate.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
cachegrind-amd64-darwin$(EXEEXT): $(cachegrind_amd64_darwin_OBJECTS) $(cachegrind_amd64_darwin_DEPENDENCIES) 
	@rm -f cachegrind-amd64-darwin$(EXEEXT)
	$(LINK) $(cachegrind_amd64_darwin_LDFLAGS) $(cachegrind_amd64_darwin_OBJECTS) $(cachegrind_amd64_darwin_LDADD) $(LIBS)
cachegrind-amd64-linux$(EXEEXT): $(cachegrind_amd64_linux_OBJECTS) $(cachegrind_amd64_linux_DEPENDENCIES) 
	@rm -f cachegrind-amd64-linux$(EXEEXT)
	$(LINK) $(cachegrind_amd64_linux_LDFLAGS) $(cachegrind_amd64_linux_OBJECTS) $(cachegrind_amd64_linux_LDADD) $(LIBS)
cachegrind-ppc32-aix5$(EXEEXT): $(cachegrind_ppc32_aix5_OBJECTS) $(cachegrind_ppc32_aix5_DEPENDENCIES) 
	@rm -f cachegrind-ppc32-aix5$(EXEEXT)
	$(LINK) $(cachegrind_ppc32_aix5_LDFLAGS) $(cachegrind_ppc32_aix5_OBJECTS) $(cachegrind_ppc32_aix5_LDADD) $(LIBS)
cachegrind-ppc32-linux$(EXEEXT): $(cachegrind_ppc32_linux_OBJECTS) $(cachegrind_ppc32_linux_DEPENDENCIES) 
	@rm -f cachegrind-ppc32-linux$(EXEEXT)
	$(LINK) $(cachegrind_ppc32_linux_LDFLAGS) $(cachegrind_ppc32_linux_OBJECTS) $(cachegrind_ppc32_linux_LDADD) $(LIBS)
cachegrind-ppc64-aix5$(EXEEXT): $(cachegrind_ppc64_aix5_OBJECTS) $(cachegrind_ppc64_aix5_DEPENDENCIES) 
	@rm -f cachegrind-ppc64-aix5$(EXEEXT)
	$(LINK) $(cachegrind_ppc64_aix5_LDFLAGS) $(cachegrind_ppc64_aix5_OBJECTS) $(cachegrind_ppc64_aix5_LDADD) $(LIBS)
cachegrind-ppc64-linux$(EXEEXT): $(cachegrind_ppc64_linux_OBJECTS) $(cachegrind_ppc64_linux_DEPENDENCIES) 
	@rm -f cachegrind-ppc64-linux$(EXEEXT)
	$(LINK) $(cachegrind_ppc64_linux_LDFLAGS) $(cachegrind_ppc64_linux_OBJECTS) $(cachegrind_ppc64_linux_LDADD) $(LIBS)
cachegrind-x86-darwin$(EXEEXT): $(cachegrind_x86_darwin_OBJECTS) $(cachegrind_x86_darwin_DEPENDENCIES) 
	@rm -f cachegrind-x86-darwin$(EXEEXT)
	$(LINK) $(cachegrind_x86_darwin_LDFLAGS) $(cachegrind_x86_darwin_OBJECTS) $(cachegrind_x86_darwin_LDADD) $(LIBS)
cachegrind-x86-linux$(EXEEXT): $(cachegrind_x86_linux_OBJECTS) $(cachegrind_x86_linux_DEPENDENCIES) 
	@rm -f cachegrind-x86-linux$(EXEEXT)
	$(LINK) $(cachegrind_x86_linux_LDFLAGS) $(cachegrind_x86_linux_OBJECTS) $(cachegrind_x86_linux_LDADD) $(LIBS)
cg_merge$(EXEEXT): $(cg_merge_OBJECTS) $(cg_merge_DEPENDENCIES) 
	@rm -f cg_merge$(EXEEXT)
	$(LINK) $(cg_merge_LDFLAGS) $(cg_merge_OBJECTS) $(cg_merge_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cachegrind_amd64_darwin-cg-amd64.Po
include ./$(DEPDIR)/cachegrind_amd64_darwin-cg_main.Po
include ./$(DEPDIR)/cachegrind_amd64_linux-cg-amd64.Po
include ./$(DEPDIR)/cachegrind_amd64_linux-cg_main.Po
include ./$(DEPDIR)/cachegrind_ppc32_aix5-cg-ppc32.Po
include ./$(DEPDIR)/cachegrind_ppc32_aix5-cg_main.Po
include ./$(DEPDIR)/cachegrind_ppc32_linux-cg-ppc32.Po
include ./$(DEPDIR)/cachegrind_ppc32_linux-cg_main.Po
include ./$(DEPDIR)/cachegrind_ppc64_aix5-cg-ppc64.Po
include ./$(DEPDIR)/cachegrind_ppc64_aix5-cg_main.Po
include ./$(DEPDIR)/cachegrind_ppc64_linux-cg-ppc64.Po
include ./$(DEPDIR)/cachegrind_ppc64_linux-cg_main.Po
include ./$(DEPDIR)/cachegrind_x86_darwin-cg-x86.Po
include ./$(DEPDIR)/cachegrind_x86_darwin-cg_main.Po
include ./$(DEPDIR)/cachegrind_x86_linux-cg-x86.Po
include ./$(DEPDIR)/cachegrind_x86_linux-cg_main.Po
include ./$(DEPDIR)/cg_merge-cg_merge.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

cachegrind_amd64_darwin-cg_main.o: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_darwin_CFLAGS) $(CFLAGS) -MT cachegrind_amd64_darwin-cg_main.o -MD -MP -MF "$(DEPDIR)/cachegrind_amd64_darwin-cg_main.Tpo" -c -o cachegrind_amd64_darwin-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c; \
	then mv -f "$(DEPDIR)/cachegrind_amd64_darwin-cg_main.Tpo" "$(DEPDIR)/cachegrind_amd64_darwin-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_amd64_darwin-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_amd64_darwin-cg_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_darwin_CFLAGS) $(CFLAGS) -c -o cachegrind_amd64_darwin-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c

cachegrind_amd64_darwin-cg_main.obj: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_darwin_CFLAGS) $(CFLAGS) -MT cachegrind_amd64_darwin-cg_main.obj -MD -MP -MF "$(DEPDIR)/cachegrind_amd64_darwin-cg_main.Tpo" -c -o cachegrind_amd64_darwin-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_amd64_darwin-cg_main.Tpo" "$(DEPDIR)/cachegrind_amd64_darwin-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_amd64_darwin-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_amd64_darwin-cg_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_darwin_CFLAGS) $(CFLAGS) -c -o cachegrind_amd64_darwin-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`

cachegrind_amd64_darwin-cg-amd64.o: cg-amd64.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_darwin_CFLAGS) $(CFLAGS) -MT cachegrind_amd64_darwin-cg-amd64.o -MD -MP -MF "$(DEPDIR)/cachegrind_amd64_darwin-cg-amd64.Tpo" -c -o cachegrind_amd64_darwin-cg-amd64.o `test -f 'cg-amd64.c' || echo '$(srcdir)/'`cg-amd64.c; \
	then mv -f "$(DEPDIR)/cachegrind_amd64_darwin-cg-amd64.Tpo" "$(DEPDIR)/cachegrind_amd64_darwin-cg-amd64.Po"; else rm -f "$(DEPDIR)/cachegrind_amd64_darwin-cg-amd64.Tpo"; exit 1; fi
#	source='cg-amd64.c' object='cachegrind_amd64_darwin-cg-amd64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_darwin_CFLAGS) $(CFLAGS) -c -o cachegrind_amd64_darwin-cg-amd64.o `test -f 'cg-amd64.c' || echo '$(srcdir)/'`cg-amd64.c

cachegrind_amd64_darwin-cg-amd64.obj: cg-amd64.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_darwin_CFLAGS) $(CFLAGS) -MT cachegrind_amd64_darwin-cg-amd64.obj -MD -MP -MF "$(DEPDIR)/cachegrind_amd64_darwin-cg-amd64.Tpo" -c -o cachegrind_amd64_darwin-cg-amd64.obj `if test -f 'cg-amd64.c'; then $(CYGPATH_W) 'cg-amd64.c'; else $(CYGPATH_W) '$(srcdir)/cg-amd64.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_amd64_darwin-cg-amd64.Tpo" "$(DEPDIR)/cachegrind_amd64_darwin-cg-amd64.Po"; else rm -f "$(DEPDIR)/cachegrind_amd64_darwin-cg-amd64.Tpo"; exit 1; fi
#	source='cg-amd64.c' object='cachegrind_amd64_darwin-cg-amd64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_darwin_CFLAGS) $(CFLAGS) -c -o cachegrind_amd64_darwin-cg-amd64.obj `if test -f 'cg-amd64.c'; then $(CYGPATH_W) 'cg-amd64.c'; else $(CYGPATH_W) '$(srcdir)/cg-amd64.c'; fi`

cachegrind_amd64_linux-cg_main.o: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_linux_CFLAGS) $(CFLAGS) -MT cachegrind_amd64_linux-cg_main.o -MD -MP -MF "$(DEPDIR)/cachegrind_amd64_linux-cg_main.Tpo" -c -o cachegrind_amd64_linux-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c; \
	then mv -f "$(DEPDIR)/cachegrind_amd64_linux-cg_main.Tpo" "$(DEPDIR)/cachegrind_amd64_linux-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_amd64_linux-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_amd64_linux-cg_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_amd64_linux-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c

cachegrind_amd64_linux-cg_main.obj: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_linux_CFLAGS) $(CFLAGS) -MT cachegrind_amd64_linux-cg_main.obj -MD -MP -MF "$(DEPDIR)/cachegrind_amd64_linux-cg_main.Tpo" -c -o cachegrind_amd64_linux-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_amd64_linux-cg_main.Tpo" "$(DEPDIR)/cachegrind_amd64_linux-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_amd64_linux-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_amd64_linux-cg_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_amd64_linux-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`

cachegrind_amd64_linux-cg-amd64.o: cg-amd64.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_linux_CFLAGS) $(CFLAGS) -MT cachegrind_amd64_linux-cg-amd64.o -MD -MP -MF "$(DEPDIR)/cachegrind_amd64_linux-cg-amd64.Tpo" -c -o cachegrind_amd64_linux-cg-amd64.o `test -f 'cg-amd64.c' || echo '$(srcdir)/'`cg-amd64.c; \
	then mv -f "$(DEPDIR)/cachegrind_amd64_linux-cg-amd64.Tpo" "$(DEPDIR)/cachegrind_amd64_linux-cg-amd64.Po"; else rm -f "$(DEPDIR)/cachegrind_amd64_linux-cg-amd64.Tpo"; exit 1; fi
#	source='cg-amd64.c' object='cachegrind_amd64_linux-cg-amd64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_amd64_linux-cg-amd64.o `test -f 'cg-amd64.c' || echo '$(srcdir)/'`cg-amd64.c

cachegrind_amd64_linux-cg-amd64.obj: cg-amd64.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_linux_CFLAGS) $(CFLAGS) -MT cachegrind_amd64_linux-cg-amd64.obj -MD -MP -MF "$(DEPDIR)/cachegrind_amd64_linux-cg-amd64.Tpo" -c -o cachegrind_amd64_linux-cg-amd64.obj `if test -f 'cg-amd64.c'; then $(CYGPATH_W) 'cg-amd64.c'; else $(CYGPATH_W) '$(srcdir)/cg-amd64.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_amd64_linux-cg-amd64.Tpo" "$(DEPDIR)/cachegrind_amd64_linux-cg-amd64.Po"; else rm -f "$(DEPDIR)/cachegrind_amd64_linux-cg-amd64.Tpo"; exit 1; fi
#	source='cg-amd64.c' object='cachegrind_amd64_linux-cg-amd64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_amd64_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_amd64_linux-cg-amd64.obj `if test -f 'cg-amd64.c'; then $(CYGPATH_W) 'cg-amd64.c'; else $(CYGPATH_W) '$(srcdir)/cg-amd64.c'; fi`

cachegrind_ppc32_aix5-cg_main.o: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_aix5_CFLAGS) $(CFLAGS) -MT cachegrind_ppc32_aix5-cg_main.o -MD -MP -MF "$(DEPDIR)/cachegrind_ppc32_aix5-cg_main.Tpo" -c -o cachegrind_ppc32_aix5-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c; \
	then mv -f "$(DEPDIR)/cachegrind_ppc32_aix5-cg_main.Tpo" "$(DEPDIR)/cachegrind_ppc32_aix5-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc32_aix5-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_ppc32_aix5-cg_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc32_aix5-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c

cachegrind_ppc32_aix5-cg_main.obj: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_aix5_CFLAGS) $(CFLAGS) -MT cachegrind_ppc32_aix5-cg_main.obj -MD -MP -MF "$(DEPDIR)/cachegrind_ppc32_aix5-cg_main.Tpo" -c -o cachegrind_ppc32_aix5-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_ppc32_aix5-cg_main.Tpo" "$(DEPDIR)/cachegrind_ppc32_aix5-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc32_aix5-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_ppc32_aix5-cg_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc32_aix5-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`

cachegrind_ppc32_aix5-cg-ppc32.o: cg-ppc32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_aix5_CFLAGS) $(CFLAGS) -MT cachegrind_ppc32_aix5-cg-ppc32.o -MD -MP -MF "$(DEPDIR)/cachegrind_ppc32_aix5-cg-ppc32.Tpo" -c -o cachegrind_ppc32_aix5-cg-ppc32.o `test -f 'cg-ppc32.c' || echo '$(srcdir)/'`cg-ppc32.c; \
	then mv -f "$(DEPDIR)/cachegrind_ppc32_aix5-cg-ppc32.Tpo" "$(DEPDIR)/cachegrind_ppc32_aix5-cg-ppc32.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc32_aix5-cg-ppc32.Tpo"; exit 1; fi
#	source='cg-ppc32.c' object='cachegrind_ppc32_aix5-cg-ppc32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc32_aix5-cg-ppc32.o `test -f 'cg-ppc32.c' || echo '$(srcdir)/'`cg-ppc32.c

cachegrind_ppc32_aix5-cg-ppc32.obj: cg-ppc32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_aix5_CFLAGS) $(CFLAGS) -MT cachegrind_ppc32_aix5-cg-ppc32.obj -MD -MP -MF "$(DEPDIR)/cachegrind_ppc32_aix5-cg-ppc32.Tpo" -c -o cachegrind_ppc32_aix5-cg-ppc32.obj `if test -f 'cg-ppc32.c'; then $(CYGPATH_W) 'cg-ppc32.c'; else $(CYGPATH_W) '$(srcdir)/cg-ppc32.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_ppc32_aix5-cg-ppc32.Tpo" "$(DEPDIR)/cachegrind_ppc32_aix5-cg-ppc32.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc32_aix5-cg-ppc32.Tpo"; exit 1; fi
#	source='cg-ppc32.c' object='cachegrind_ppc32_aix5-cg-ppc32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc32_aix5-cg-ppc32.obj `if test -f 'cg-ppc32.c'; then $(CYGPATH_W) 'cg-ppc32.c'; else $(CYGPATH_W) '$(srcdir)/cg-ppc32.c'; fi`

cachegrind_ppc32_linux-cg_main.o: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_linux_CFLAGS) $(CFLAGS) -MT cachegrind_ppc32_linux-cg_main.o -MD -MP -MF "$(DEPDIR)/cachegrind_ppc32_linux-cg_main.Tpo" -c -o cachegrind_ppc32_linux-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c; \
	then mv -f "$(DEPDIR)/cachegrind_ppc32_linux-cg_main.Tpo" "$(DEPDIR)/cachegrind_ppc32_linux-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc32_linux-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_ppc32_linux-cg_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc32_linux-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c

cachegrind_ppc32_linux-cg_main.obj: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_linux_CFLAGS) $(CFLAGS) -MT cachegrind_ppc32_linux-cg_main.obj -MD -MP -MF "$(DEPDIR)/cachegrind_ppc32_linux-cg_main.Tpo" -c -o cachegrind_ppc32_linux-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_ppc32_linux-cg_main.Tpo" "$(DEPDIR)/cachegrind_ppc32_linux-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc32_linux-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_ppc32_linux-cg_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc32_linux-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`

cachegrind_ppc32_linux-cg-ppc32.o: cg-ppc32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_linux_CFLAGS) $(CFLAGS) -MT cachegrind_ppc32_linux-cg-ppc32.o -MD -MP -MF "$(DEPDIR)/cachegrind_ppc32_linux-cg-ppc32.Tpo" -c -o cachegrind_ppc32_linux-cg-ppc32.o `test -f 'cg-ppc32.c' || echo '$(srcdir)/'`cg-ppc32.c; \
	then mv -f "$(DEPDIR)/cachegrind_ppc32_linux-cg-ppc32.Tpo" "$(DEPDIR)/cachegrind_ppc32_linux-cg-ppc32.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc32_linux-cg-ppc32.Tpo"; exit 1; fi
#	source='cg-ppc32.c' object='cachegrind_ppc32_linux-cg-ppc32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc32_linux-cg-ppc32.o `test -f 'cg-ppc32.c' || echo '$(srcdir)/'`cg-ppc32.c

cachegrind_ppc32_linux-cg-ppc32.obj: cg-ppc32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_linux_CFLAGS) $(CFLAGS) -MT cachegrind_ppc32_linux-cg-ppc32.obj -MD -MP -MF "$(DEPDIR)/cachegrind_ppc32_linux-cg-ppc32.Tpo" -c -o cachegrind_ppc32_linux-cg-ppc32.obj `if test -f 'cg-ppc32.c'; then $(CYGPATH_W) 'cg-ppc32.c'; else $(CYGPATH_W) '$(srcdir)/cg-ppc32.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_ppc32_linux-cg-ppc32.Tpo" "$(DEPDIR)/cachegrind_ppc32_linux-cg-ppc32.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc32_linux-cg-ppc32.Tpo"; exit 1; fi
#	source='cg-ppc32.c' object='cachegrind_ppc32_linux-cg-ppc32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc32_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc32_linux-cg-ppc32.obj `if test -f 'cg-ppc32.c'; then $(CYGPATH_W) 'cg-ppc32.c'; else $(CYGPATH_W) '$(srcdir)/cg-ppc32.c'; fi`

cachegrind_ppc64_aix5-cg_main.o: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_aix5_CFLAGS) $(CFLAGS) -MT cachegrind_ppc64_aix5-cg_main.o -MD -MP -MF "$(DEPDIR)/cachegrind_ppc64_aix5-cg_main.Tpo" -c -o cachegrind_ppc64_aix5-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c; \
	then mv -f "$(DEPDIR)/cachegrind_ppc64_aix5-cg_main.Tpo" "$(DEPDIR)/cachegrind_ppc64_aix5-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc64_aix5-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_ppc64_aix5-cg_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc64_aix5-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c

cachegrind_ppc64_aix5-cg_main.obj: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_aix5_CFLAGS) $(CFLAGS) -MT cachegrind_ppc64_aix5-cg_main.obj -MD -MP -MF "$(DEPDIR)/cachegrind_ppc64_aix5-cg_main.Tpo" -c -o cachegrind_ppc64_aix5-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_ppc64_aix5-cg_main.Tpo" "$(DEPDIR)/cachegrind_ppc64_aix5-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc64_aix5-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_ppc64_aix5-cg_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc64_aix5-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`

cachegrind_ppc64_aix5-cg-ppc64.o: cg-ppc64.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_aix5_CFLAGS) $(CFLAGS) -MT cachegrind_ppc64_aix5-cg-ppc64.o -MD -MP -MF "$(DEPDIR)/cachegrind_ppc64_aix5-cg-ppc64.Tpo" -c -o cachegrind_ppc64_aix5-cg-ppc64.o `test -f 'cg-ppc64.c' || echo '$(srcdir)/'`cg-ppc64.c; \
	then mv -f "$(DEPDIR)/cachegrind_ppc64_aix5-cg-ppc64.Tpo" "$(DEPDIR)/cachegrind_ppc64_aix5-cg-ppc64.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc64_aix5-cg-ppc64.Tpo"; exit 1; fi
#	source='cg-ppc64.c' object='cachegrind_ppc64_aix5-cg-ppc64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc64_aix5-cg-ppc64.o `test -f 'cg-ppc64.c' || echo '$(srcdir)/'`cg-ppc64.c

cachegrind_ppc64_aix5-cg-ppc64.obj: cg-ppc64.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_aix5_CFLAGS) $(CFLAGS) -MT cachegrind_ppc64_aix5-cg-ppc64.obj -MD -MP -MF "$(DEPDIR)/cachegrind_ppc64_aix5-cg-ppc64.Tpo" -c -o cachegrind_ppc64_aix5-cg-ppc64.obj `if test -f 'cg-ppc64.c'; then $(CYGPATH_W) 'cg-ppc64.c'; else $(CYGPATH_W) '$(srcdir)/cg-ppc64.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_ppc64_aix5-cg-ppc64.Tpo" "$(DEPDIR)/cachegrind_ppc64_aix5-cg-ppc64.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc64_aix5-cg-ppc64.Tpo"; exit 1; fi
#	source='cg-ppc64.c' object='cachegrind_ppc64_aix5-cg-ppc64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc64_aix5-cg-ppc64.obj `if test -f 'cg-ppc64.c'; then $(CYGPATH_W) 'cg-ppc64.c'; else $(CYGPATH_W) '$(srcdir)/cg-ppc64.c'; fi`

cachegrind_ppc64_linux-cg_main.o: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_linux_CFLAGS) $(CFLAGS) -MT cachegrind_ppc64_linux-cg_main.o -MD -MP -MF "$(DEPDIR)/cachegrind_ppc64_linux-cg_main.Tpo" -c -o cachegrind_ppc64_linux-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c; \
	then mv -f "$(DEPDIR)/cachegrind_ppc64_linux-cg_main.Tpo" "$(DEPDIR)/cachegrind_ppc64_linux-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc64_linux-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_ppc64_linux-cg_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc64_linux-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c

cachegrind_ppc64_linux-cg_main.obj: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_linux_CFLAGS) $(CFLAGS) -MT cachegrind_ppc64_linux-cg_main.obj -MD -MP -MF "$(DEPDIR)/cachegrind_ppc64_linux-cg_main.Tpo" -c -o cachegrind_ppc64_linux-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_ppc64_linux-cg_main.Tpo" "$(DEPDIR)/cachegrind_ppc64_linux-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc64_linux-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_ppc64_linux-cg_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc64_linux-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`

cachegrind_ppc64_linux-cg-ppc64.o: cg-ppc64.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_linux_CFLAGS) $(CFLAGS) -MT cachegrind_ppc64_linux-cg-ppc64.o -MD -MP -MF "$(DEPDIR)/cachegrind_ppc64_linux-cg-ppc64.Tpo" -c -o cachegrind_ppc64_linux-cg-ppc64.o `test -f 'cg-ppc64.c' || echo '$(srcdir)/'`cg-ppc64.c; \
	then mv -f "$(DEPDIR)/cachegrind_ppc64_linux-cg-ppc64.Tpo" "$(DEPDIR)/cachegrind_ppc64_linux-cg-ppc64.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc64_linux-cg-ppc64.Tpo"; exit 1; fi
#	source='cg-ppc64.c' object='cachegrind_ppc64_linux-cg-ppc64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc64_linux-cg-ppc64.o `test -f 'cg-ppc64.c' || echo '$(srcdir)/'`cg-ppc64.c

cachegrind_ppc64_linux-cg-ppc64.obj: cg-ppc64.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_linux_CFLAGS) $(CFLAGS) -MT cachegrind_ppc64_linux-cg-ppc64.obj -MD -MP -MF "$(DEPDIR)/cachegrind_ppc64_linux-cg-ppc64.Tpo" -c -o cachegrind_ppc64_linux-cg-ppc64.obj `if test -f 'cg-ppc64.c'; then $(CYGPATH_W) 'cg-ppc64.c'; else $(CYGPATH_W) '$(srcdir)/cg-ppc64.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_ppc64_linux-cg-ppc64.Tpo" "$(DEPDIR)/cachegrind_ppc64_linux-cg-ppc64.Po"; else rm -f "$(DEPDIR)/cachegrind_ppc64_linux-cg-ppc64.Tpo"; exit 1; fi
#	source='cg-ppc64.c' object='cachegrind_ppc64_linux-cg-ppc64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_ppc64_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_ppc64_linux-cg-ppc64.obj `if test -f 'cg-ppc64.c'; then $(CYGPATH_W) 'cg-ppc64.c'; else $(CYGPATH_W) '$(srcdir)/cg-ppc64.c'; fi`

cachegrind_x86_darwin-cg_main.o: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_darwin_CFLAGS) $(CFLAGS) -MT cachegrind_x86_darwin-cg_main.o -MD -MP -MF "$(DEPDIR)/cachegrind_x86_darwin-cg_main.Tpo" -c -o cachegrind_x86_darwin-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c; \
	then mv -f "$(DEPDIR)/cachegrind_x86_darwin-cg_main.Tpo" "$(DEPDIR)/cachegrind_x86_darwin-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_x86_darwin-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_x86_darwin-cg_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_darwin_CFLAGS) $(CFLAGS) -c -o cachegrind_x86_darwin-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c

cachegrind_x86_darwin-cg_main.obj: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_darwin_CFLAGS) $(CFLAGS) -MT cachegrind_x86_darwin-cg_main.obj -MD -MP -MF "$(DEPDIR)/cachegrind_x86_darwin-cg_main.Tpo" -c -o cachegrind_x86_darwin-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_x86_darwin-cg_main.Tpo" "$(DEPDIR)/cachegrind_x86_darwin-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_x86_darwin-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_x86_darwin-cg_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_darwin_CFLAGS) $(CFLAGS) -c -o cachegrind_x86_darwin-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`

cachegrind_x86_darwin-cg-x86.o: cg-x86.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_darwin_CFLAGS) $(CFLAGS) -MT cachegrind_x86_darwin-cg-x86.o -MD -MP -MF "$(DEPDIR)/cachegrind_x86_darwin-cg-x86.Tpo" -c -o cachegrind_x86_darwin-cg-x86.o `test -f 'cg-x86.c' || echo '$(srcdir)/'`cg-x86.c; \
	then mv -f "$(DEPDIR)/cachegrind_x86_darwin-cg-x86.Tpo" "$(DEPDIR)/cachegrind_x86_darwin-cg-x86.Po"; else rm -f "$(DEPDIR)/cachegrind_x86_darwin-cg-x86.Tpo"; exit 1; fi
#	source='cg-x86.c' object='cachegrind_x86_darwin-cg-x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_darwin_CFLAGS) $(CFLAGS) -c -o cachegrind_x86_darwin-cg-x86.o `test -f 'cg-x86.c' || echo '$(srcdir)/'`cg-x86.c

cachegrind_x86_darwin-cg-x86.obj: cg-x86.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_darwin_CFLAGS) $(CFLAGS) -MT cachegrind_x86_darwin-cg-x86.obj -MD -MP -MF "$(DEPDIR)/cachegrind_x86_darwin-cg-x86.Tpo" -c -o cachegrind_x86_darwin-cg-x86.obj `if test -f 'cg-x86.c'; then $(CYGPATH_W) 'cg-x86.c'; else $(CYGPATH_W) '$(srcdir)/cg-x86.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_x86_darwin-cg-x86.Tpo" "$(DEPDIR)/cachegrind_x86_darwin-cg-x86.Po"; else rm -f "$(DEPDIR)/cachegrind_x86_darwin-cg-x86.Tpo"; exit 1; fi
#	source='cg-x86.c' object='cachegrind_x86_darwin-cg-x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_darwin_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_darwin_CFLAGS) $(CFLAGS) -c -o cachegrind_x86_darwin-cg-x86.obj `if test -f 'cg-x86.c'; then $(CYGPATH_W) 'cg-x86.c'; else $(CYGPATH_W) '$(srcdir)/cg-x86.c'; fi`

cachegrind_x86_linux-cg_main.o: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_linux_CFLAGS) $(CFLAGS) -MT cachegrind_x86_linux-cg_main.o -MD -MP -MF "$(DEPDIR)/cachegrind_x86_linux-cg_main.Tpo" -c -o cachegrind_x86_linux-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c; \
	then mv -f "$(DEPDIR)/cachegrind_x86_linux-cg_main.Tpo" "$(DEPDIR)/cachegrind_x86_linux-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_x86_linux-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_x86_linux-cg_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_x86_linux-cg_main.o `test -f 'cg_main.c' || echo '$(srcdir)/'`cg_main.c

cachegrind_x86_linux-cg_main.obj: cg_main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_linux_CFLAGS) $(CFLAGS) -MT cachegrind_x86_linux-cg_main.obj -MD -MP -MF "$(DEPDIR)/cachegrind_x86_linux-cg_main.Tpo" -c -o cachegrind_x86_linux-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_x86_linux-cg_main.Tpo" "$(DEPDIR)/cachegrind_x86_linux-cg_main.Po"; else rm -f "$(DEPDIR)/cachegrind_x86_linux-cg_main.Tpo"; exit 1; fi
#	source='cg_main.c' object='cachegrind_x86_linux-cg_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_x86_linux-cg_main.obj `if test -f 'cg_main.c'; then $(CYGPATH_W) 'cg_main.c'; else $(CYGPATH_W) '$(srcdir)/cg_main.c'; fi`

cachegrind_x86_linux-cg-x86.o: cg-x86.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_linux_CFLAGS) $(CFLAGS) -MT cachegrind_x86_linux-cg-x86.o -MD -MP -MF "$(DEPDIR)/cachegrind_x86_linux-cg-x86.Tpo" -c -o cachegrind_x86_linux-cg-x86.o `test -f 'cg-x86.c' || echo '$(srcdir)/'`cg-x86.c; \
	then mv -f "$(DEPDIR)/cachegrind_x86_linux-cg-x86.Tpo" "$(DEPDIR)/cachegrind_x86_linux-cg-x86.Po"; else rm -f "$(DEPDIR)/cachegrind_x86_linux-cg-x86.Tpo"; exit 1; fi
#	source='cg-x86.c' object='cachegrind_x86_linux-cg-x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_x86_linux-cg-x86.o `test -f 'cg-x86.c' || echo '$(srcdir)/'`cg-x86.c

cachegrind_x86_linux-cg-x86.obj: cg-x86.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_linux_CFLAGS) $(CFLAGS) -MT cachegrind_x86_linux-cg-x86.obj -MD -MP -MF "$(DEPDIR)/cachegrind_x86_linux-cg-x86.Tpo" -c -o cachegrind_x86_linux-cg-x86.obj `if test -f 'cg-x86.c'; then $(CYGPATH_W) 'cg-x86.c'; else $(CYGPATH_W) '$(srcdir)/cg-x86.c'; fi`; \
	then mv -f "$(DEPDIR)/cachegrind_x86_linux-cg-x86.Tpo" "$(DEPDIR)/cachegrind_x86_linux-cg-x86.Po"; else rm -f "$(DEPDIR)/cachegrind_x86_linux-cg-x86.Tpo"; exit 1; fi
#	source='cg-x86.c' object='cachegrind_x86_linux-cg-x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cachegrind_x86_linux_CPPFLAGS) $(CPPFLAGS) $(cachegrind_x86_linux_CFLAGS) $(CFLAGS) -c -o cachegrind_x86_linux-cg-x86.obj `if test -f 'cg-x86.c'; then $(CYGPATH_W) 'cg-x86.c'; else $(CYGPATH_W) '$(srcdir)/cg-x86.c'; fi`

cg_merge-cg_merge.o: cg_merge.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cg_merge_CPPFLAGS) $(CPPFLAGS) $(cg_merge_CFLAGS) $(CFLAGS) -MT cg_merge-cg_merge.o -MD -MP -MF "$(DEPDIR)/cg_merge-cg_merge.Tpo" -c -o cg_merge-cg_merge.o `test -f 'cg_merge.c' || echo '$(srcdir)/'`cg_merge.c; \
	then mv -f "$(DEPDIR)/cg_merge-cg_merge.Tpo" "$(DEPDIR)/cg_merge-cg_merge.Po"; else rm -f "$(DEPDIR)/cg_merge-cg_merge.Tpo"; exit 1; fi
#	source='cg_merge.c' object='cg_merge-cg_merge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cg_merge_CPPFLAGS) $(CPPFLAGS) $(cg_merge_CFLAGS) $(CFLAGS) -c -o cg_merge-cg_merge.o `test -f 'cg_merge.c' || echo '$(srcdir)/'`cg_merge.c

cg_merge-cg_merge.obj: cg_merge.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cg_merge_CPPFLAGS) $(CPPFLAGS) $(cg_merge_CFLAGS) $(CFLAGS) -MT cg_merge-cg_merge.obj -MD -MP -MF "$(DEPDIR)/cg_merge-cg_merge.Tpo" -c -o cg_merge-cg_merge.obj `if test -f 'cg_merge.c'; then $(CYGPATH_W) 'cg_merge.c'; else $(CYGPATH_W) '$(srcdir)/cg_merge.c'; fi`; \
	then mv -f "$(DEPDIR)/cg_merge-cg_merge.Tpo" "$(DEPDIR)/cg_merge-cg_merge.Po"; else rm -f "$(DEPDIR)/cg_merge-cg_merge.Tpo"; exit 1; fi
#	source='cg_merge.c' object='cg_merge-cg_merge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cg_merge_CPPFLAGS) $(CPPFLAGS) $(cg_merge_CFLAGS) $(CFLAGS) -c -o cg_merge-cg_merge.obj `if test -f 'cg_merge.c'; then $(CYGPATH_W) 'cg_merge.c'; else $(CYGPATH_W) '$(srcdir)/cg_merge.c'; fi`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-exec-local

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am all-local check \
	check-am clean clean-binPROGRAMS clean-generic clean-local \
	clean-noinstPROGRAMS clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-binSCRIPTS install-data install-data-am install-exec \
	install-exec-am install-exec-local install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-info-am


# The kludge that passes for vex's build system can't handle parallel
# builds.  So, for the time being, serialise all Valgrind building.
# (this is equivalent to enforcing "make -j 1".
.NOTPARALLEL:

# See Makefile.tool-tests.am for an explanation of dSYMs.
build-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
	      echo "dsymutil $$f"; \
	      dsymutil $$f; \
	  fi; \
	done

# This is used by coregrind/Makefile.am and Makefile.tool.am for doing
# "in-place" installs.  It copies $(noinst_PROGRAMS) into $inplacedir.
# It needs to be depended on by an 'all-local' rule.
inplace-noinst_PROGRAMS:
	if [ -n "$(noinst_PROGRAMS)" ] ; then \
	  mkdir -p $(inplacedir); \
	  for f in $(noinst_PROGRAMS) ; do \
	    rm -f $(inplacedir)/$$f; \
	    ln -f -s ../$(subdir)/$$f $(inplacedir); \
	  done ; \
	fi

# Similar to inplace-noinst_PROGRAMS
inplace-noinst_DSYMS: build-noinst_DSYMS
	if [ -n "$(noinst_DSYMS)" ] ; then \
	  mkdir -p $(inplacedir); \
	  for f in $(noinst_DSYMS); do \
	    rm -f $(inplacedir)/$$f.dSYM; \
	    ln -f -s ../$(subdir)/$$f.dSYM $(inplacedir); \
	  done ; \
	fi

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make install".  It copies $(noinst_PROGRAMS) into $prefix/lib/valgrind/.
# It needs to be depended on by an 'install-exec-local' rule.
install-noinst_PROGRAMS:
	if [ -n "$(noinst_PROGRAMS)" ] ; then \
	  $(mkinstalldirs) $(DESTDIR)$(valdir); \
	  for f in $(noinst_PROGRAMS); do \
	    $(INSTALL_PROGRAM) $$f $(DESTDIR)$(valdir); \
	  done ; \
	fi

# Similar to install-noinst_PROGRAMS.
# Nb: we don't use $(INSTALL_PROGRAM) here because it doesn't work with
# directories.  XXX: not sure whether the resulting permissions will be
# correct when using 'cp -R'...
install-noinst_DSYMS: build-noinst_DSYMS
	if [ -n "$(noinst_DSYMS)" ] ; then \
	  $(mkinstalldirs) $(DESTDIR)$(valdir); \
	  for f in $(noinst_DSYMS); do \
	    cp -R $$f.dSYM $(DESTDIR)$(valdir); \
	  done ; \
	fi

# This needs to be depended on by a 'clean-local' rule.
clean-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -rf $$f.dSYM; \
	done

$(top_srcdir)/VEX/libvex-x86-linux.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex-x86-linux.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_X86_LINUX) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex-amd64-linux.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex-amd64-linux.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_AMD64_LINUX) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex-ppc32-linux.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex-ppc32-linux.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_PPC32_LINUX) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex-ppc64-linux.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex-ppc64-linux.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_PPC64_LINUX) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex-ppc32-aix5.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR) -X32" \
	libvex-ppc32-aix5.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_PPC32_AIX5) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex-ppc64-aix5.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR) -X64" \
	libvex-ppc64-aix5.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_PPC64_AIX5) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex-x86-darwin.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex-x86-darwin.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_X86_DARWIN) -Wdeclaration-after-statement \
		-fno-stack-protector"

$(top_srcdir)/VEX/libvex-amd64-darwin.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex-amd64-darwin.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_AMD64_DARWIN) -Wdeclaration-after-statement \
		-fno-stack-protector"

$(top_srcdir)/VEX/priv/main/vex_svnversion.h:
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" version

all-local: inplace-noinst_PROGRAMS inplace-noinst_DSYMS

clean-local: clean-noinst_DSYMS

install-exec-local: install-noinst_PROGRAMS install-noinst_DSYMS
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
