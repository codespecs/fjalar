<program>
<executable-name>./StackCppTest</executable-name>
<global-variable-declarations>
</global-variable-declarations>
<function-declarations>
<function>
<name><![CDATA[main]]></name>
<fjalar-name><![CDATA[..main()]]></fjalar-name>
<start-PC>0x8048884</start-PC>
<end-PC>0x8048ba5</end-PC>
<filename>StackCppTest.cpp</filename>
<formal-parameters>
</formal-parameters>
<local-array-and-struct-variables>
<variable>
<name><![CDATA[first]]></name>
<stack-byte-offset>-24</stack-byte-offset>
<var-type>
<declared-type>D_STRUCT</declared-type>
<byte-size>12</byte-size>
<type-name>Stack</type-name>
</var-type>
</variable>
<variable>
<name><![CDATA[second]]></name>
<stack-byte-offset>-56</stack-byte-offset>
<var-type>
<declared-type>D_STRUCT</declared-type>
<byte-size>12</byte-size>
<type-name>Stack</type-name>
</var-type>
</variable>
</local-array-and-struct-variables>
<return-value>
<variable>
<name><![CDATA[return]]></name>
<var-type>
<declared-type>D_INT</declared-type>
<byte-size>4</byte-size>
</var-type>
</variable>
</return-value>
</function>
</function-declarations>
<type-declarations>
<type>
<type-name>Stack</type-name>
<byte-size>12</byte-size>
<declared-type>D_STRUCT</declared-type>
<member-variables>
<variable>
<name><![CDATA[numElements]]></name>
<member-var visibility="private">
<member-location>0</member-location>
<parent-type>Stack</parent-type>
</member-var>
<var-type>
<declared-type>D_INT</declared-type>
<byte-size>4</byte-size>
</var-type>
</variable>
<variable>
<name><![CDATA[myName]]></name>
<member-var visibility="private">
<member-location>4</member-location>
<parent-type>Stack</parent-type>
</member-var>
<var-type pointer-levels="1" is-string="true">
<declared-type>D_CHAR</declared-type>
<byte-size>1</byte-size>
</var-type>
</variable>
<variable>
<name><![CDATA[head]]></name>
<member-var visibility="private">
<member-location>8</member-location>
<parent-type>Stack</parent-type>
</member-var>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>8</byte-size>
<type-name>Link</type-name>
</var-type>
</variable>
</member-variables>
<static-member-variables>
<variable>
<name><![CDATA[Stack::publicNumLinksCreated]]></name>
<global-var>
<location>0x804a3c0</location>
</global-var>
<member-var visibility="public">
<member-location>0</member-location>
<parent-type>Stack</parent-type>
</member-var>
<var-type>
<declared-type>D_INT</declared-type>
<byte-size>4</byte-size>
</var-type>
</variable>
<variable>
<name><![CDATA[Stack::numStacksCreated]]></name>
<global-var>
<location>0x804a3bc</location>
</global-var>
<member-var visibility="private">
<member-location>0</member-location>
<parent-type>Stack</parent-type>
</member-var>
<var-type>
<declared-type>D_INT</declared-type>
<byte-size>4</byte-size>
</var-type>
</variable>
</static-member-variables>
<constructors>
<function>
<name><![CDATA[Stack]]></name>
<fjalar-name><![CDATA[Stack.Stack(char*)]]></fjalar-name>
<start-PC>0x8048c70</start-PC>
<end-PC>0x8048ca7</end-PC>
<filename>Stack.cpp</filename>
<formal-parameters>
<variable>
<name><![CDATA[this]]></name>
<stack-byte-offset>8</stack-byte-offset>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>12</byte-size>
<type-name>Stack</type-name>
</var-type>
</variable>
<variable>
<name><![CDATA[name]]></name>
<stack-byte-offset>12</stack-byte-offset>
<var-type pointer-levels="1" is-string="true">
<declared-type>D_CHAR</declared-type>
<byte-size>1</byte-size>
</var-type>
</variable>
</formal-parameters>
<return-value>
</return-value>
</function>
</constructors>
<destructors>
<function>
<name><![CDATA[~Stack]]></name>
<fjalar-name><![CDATA[Stack.~Stack()]]></fjalar-name>
<start-PC>0x8048cbe</start-PC>
<end-PC>0x8048cd4</end-PC>
<filename>Stack.cpp</filename>
<formal-parameters>
<variable>
<name><![CDATA[this]]></name>
<stack-byte-offset>8</stack-byte-offset>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>12</byte-size>
<type-name>Stack</type-name>
</var-type>
</variable>
</formal-parameters>
<return-value>
</return-value>
</function>
</destructors>
<member-functions>
<function type="public-member-function">
<name><![CDATA[push]]></name>
<fjalar-name><![CDATA[Stack.push(char*)]]></fjalar-name>
<start-PC>0x8048d2e</start-PC>
<end-PC>0x8048d75</end-PC>
<filename>Stack.cpp</filename>
<formal-parameters>
<variable>
<name><![CDATA[this]]></name>
<stack-byte-offset>8</stack-byte-offset>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>12</byte-size>
<type-name>Stack</type-name>
</var-type>
</variable>
<variable>
<name><![CDATA[dat]]></name>
<stack-byte-offset>12</stack-byte-offset>
<var-type pointer-levels="1" is-string="true">
<declared-type>D_CHAR</declared-type>
<byte-size>1</byte-size>
</var-type>
</variable>
</formal-parameters>
<return-value>
</return-value>
</function>
<function type="public-member-function">
<name><![CDATA[peek]]></name>
<fjalar-name><![CDATA[Stack.peek()]]></fjalar-name>
<start-PC>0x8048d76</start-PC>
<end-PC>0x8048d83</end-PC>
<filename>Stack.cpp</filename>
<formal-parameters>
<variable>
<name><![CDATA[this]]></name>
<stack-byte-offset>8</stack-byte-offset>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>12</byte-size>
<type-name>Stack</type-name>
</var-type>
</variable>
</formal-parameters>
<return-value>
<variable>
<name><![CDATA[return]]></name>
<var-type pointer-levels="1" is-string="true">
<declared-type>D_CHAR</declared-type>
<byte-size>1</byte-size>
</var-type>
</variable>
</return-value>
</function>
<function type="public-member-function">
<name><![CDATA[pop]]></name>
<fjalar-name><![CDATA[Stack.pop()]]></fjalar-name>
<start-PC>0x8048d84</start-PC>
<end-PC>0x8048dda</end-PC>
<filename>Stack.cpp</filename>
<formal-parameters>
<variable>
<name><![CDATA[this]]></name>
<stack-byte-offset>8</stack-byte-offset>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>12</byte-size>
<type-name>Stack</type-name>
</var-type>
</variable>
</formal-parameters>
<return-value>
<variable>
<name><![CDATA[return]]></name>
<var-type pointer-levels="1" is-string="true">
<declared-type>D_CHAR</declared-type>
<byte-size>1</byte-size>
</var-type>
</variable>
</return-value>
</function>
<function type="public-member-function">
<name><![CDATA[getName]]></name>
<fjalar-name><![CDATA[Stack.getName()]]></fjalar-name>
<start-PC>0x8048cd4</start-PC>
<end-PC>0x8048d24</end-PC>
<filename>Stack.cpp</filename>
<formal-parameters>
<variable>
<name><![CDATA[this]]></name>
<stack-byte-offset>8</stack-byte-offset>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>12</byte-size>
<type-name>Stack</type-name>
</var-type>
</variable>
</formal-parameters>
<return-value>
<variable>
<name><![CDATA[return]]></name>
<var-type pointer-levels="1" is-string="true">
<declared-type>D_CHAR</declared-type>
<byte-size>1</byte-size>
</var-type>
</variable>
</return-value>
</function>
<function type="public-member-function">
<name><![CDATA[getNumStacksCreated]]></name>
<fjalar-name><![CDATA[Stack.getNumStacksCreated()]]></fjalar-name>
<start-PC>0x8048c18</start-PC>
<end-PC>0x8048c22</end-PC>
<filename>Stack.cpp</filename>
<formal-parameters>
</formal-parameters>
<return-value>
<variable>
<name><![CDATA[return]]></name>
<var-type>
<declared-type>D_INT</declared-type>
<byte-size>4</byte-size>
</var-type>
</variable>
</return-value>
</function>
<function type="private-member-function">
<name><![CDATA[privateStuff]]></name>
<fjalar-name><![CDATA[Stack.privateStuff()]]></fjalar-name>
<start-PC>0x8048d24</start-PC>
<end-PC>0x8048d2e</end-PC>
<filename>Stack.cpp</filename>
<formal-parameters>
<variable>
<name><![CDATA[this]]></name>
<stack-byte-offset>8</stack-byte-offset>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>12</byte-size>
<type-name>Stack</type-name>
</var-type>
</variable>
</formal-parameters>
<return-value>
<variable>
<name><![CDATA[return]]></name>
<var-type>
<declared-type>D_INT</declared-type>
<byte-size>4</byte-size>
</var-type>
</variable>
</return-value>
</function>
</member-functions>
</type>
<type>
<type-name>Link</type-name>
<byte-size>8</byte-size>
<declared-type>D_STRUCT</declared-type>
<member-variables>
<variable>
<name><![CDATA[data]]></name>
<member-var visibility="public">
<member-location>0</member-location>
<parent-type>Link</parent-type>
</member-var>
<var-type pointer-levels="1" is-string="true">
<declared-type>D_CHAR</declared-type>
<byte-size>1</byte-size>
</var-type>
</variable>
<variable>
<name><![CDATA[next]]></name>
<member-var visibility="public">
<member-location>4</member-location>
<parent-type>Link</parent-type>
</member-var>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>8</byte-size>
<type-name>Link</type-name>
</var-type>
</variable>
</member-variables>
<member-functions>
<function type="public-member-function">
<name><![CDATA[initialize]]></name>
<fjalar-name><![CDATA[Link.initialize(char*, Stack::Link*)]]></fjalar-name>
<start-PC>0x8048c22</start-PC>
<end-PC>0x8048c38</end-PC>
<filename>Stack.cpp</filename>
<formal-parameters>
<variable>
<name><![CDATA[this]]></name>
<stack-byte-offset>8</stack-byte-offset>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>8</byte-size>
<type-name>Link</type-name>
</var-type>
</variable>
<variable>
<name><![CDATA[dat]]></name>
<stack-byte-offset>12</stack-byte-offset>
<var-type pointer-levels="1" is-string="true">
<declared-type>D_CHAR</declared-type>
<byte-size>1</byte-size>
</var-type>
</variable>
<variable>
<name><![CDATA[nxt]]></name>
<stack-byte-offset>16</stack-byte-offset>
<var-type pointer-levels="1">
<declared-type>D_STRUCT</declared-type>
<byte-size>8</byte-size>
<type-name>Link</type-name>
</var-type>
</variable>
</formal-parameters>
<return-value>
</return-value>
</function>
</member-functions>
</type>
</type-declarations>
</program>
